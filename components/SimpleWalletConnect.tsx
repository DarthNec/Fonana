'use client'

import { useWallet } from '@solana/wallet-adapter-react'
import { WalletMultiButton } from '@solana/wallet-adapter-react-ui'
import { useEffect, useState } from 'react'
import { detectWalletEnvironment } from '@/lib/auth/solana'
import { XCircleIcon } from '@heroicons/react/24/outline'
import toast from 'react-hot-toast'

export function SimpleWalletConnect() {
  const { connected } = useWallet()
  const [showUXHint, setShowUXHint] = useState(false)
  const [isInWalletBrowser, setIsInWalletBrowser] = useState(false)
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
  useEffect(() => {
    const env = detectWalletEnvironment()
    setIsInWalletBrowser(env.isInWalletBrowser)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –∫–æ—à–µ–ª—å–∫–∞
    if (env.isInWalletBrowser) {
      setShowUXHint(true)
      setTimeout(() => setShowUXHint(false), 15000) // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    }
  }, [])

  const openInMainBrowser = () => {
    const currentUrl = window.location.href
    
    if (/iPhone|iPad|iPod/.test(navigator.userAgent)) {
      // iOS - –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤ Safari
      navigator.clipboard.writeText(currentUrl)
      toast('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞! –û—Ç–∫—Ä–æ–π—Ç–µ –≤ Safari', { icon: 'üìã', duration: 5000 })
    } else if (/Android/.test(navigator.userAgent)) {
      // Android - –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤ Chrome
      navigator.clipboard.writeText(currentUrl)
      toast('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞! –û—Ç–∫—Ä–æ–π—Ç–µ –≤ Chrome', { icon: 'üìã', duration: 5000 })
    } else {
      // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É
      navigator.clipboard.writeText(currentUrl)
      toast.success('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!')
    }
  }

  return (
    <div className="relative">
      <div className="flex items-center gap-2">
        <WalletMultiButton className="!bg-purple-600 hover:!bg-purple-700" />
        
        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –µ—Å–ª–∏ –º—ã –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ */}
        {isInWalletBrowser && (
          <button
            onClick={openInMainBrowser}
            className="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-xl font-medium transition-all duration-200"
            title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞"
          >
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
            </svg>
            <span className="hidden sm:inline">–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É</span>
          </button>
        )}
      </div>
      
      {/* UX –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤ */}
      {showUXHint && isInWalletBrowser && (
        <div className="absolute top-full mt-2 right-0 w-72 p-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-xl shadow-lg z-50">
          <p className="text-sm text-yellow-800 dark:text-yellow-200 mb-2">
            üí° –î–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
          </p>
          <button
            onClick={openInMainBrowser}
            className="w-full px-3 py-1.5 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg text-sm font-medium transition-colors"
          >
            –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
          </button>
          <button
            onClick={() => setShowUXHint(false)}
            className="absolute top-2 right-2 text-yellow-600 hover:text-yellow-800"
          >
            <XCircleIcon className="w-4 h-4" />
          </button>
        </div>
      )}
    </div>
  )
} 