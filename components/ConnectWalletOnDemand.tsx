'use client'

import { useWallet } from '@solana/wallet-adapter-react'
import { WalletMultiButton } from '@solana/wallet-adapter-react-ui'
import { useAuth } from '@/lib/hooks/useAuth'
import { detectWalletEnvironment } from '@/lib/auth/solana'
import toast from 'react-hot-toast'
import { useState } from 'react'
import { Dialog } from '@headlessui/react'
import { WalletIcon, InformationCircleIcon } from '@heroicons/react/24/outline'

interface ConnectWalletOnDemandProps {
  onConnect?: () => void
  message?: string
}

export function ConnectWalletOnDemand({ 
  onConnect, 
  message = '–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫' 
}: ConnectWalletOnDemandProps) {
  const { connected, connect } = useWallet()
  const { isAuthenticated } = useAuth()
  const [isOpen, setIsOpen] = useState(false)
  const [showHint, setShowHint] = useState(false)

  const handleConnect = async () => {
    const env = detectWalletEnvironment()
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (env.isInWalletBrowser) {
      // –í–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –∫–æ—à–µ–ª—å–∫–∞
      toast('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –±—Ä–∞—É–∑–µ—Ä–∞', {
        icon: 'üí°',
        duration: 3000
      })
    } else if (env.isMobile && !env.isPhantom) {
      // –ù–∞ –º–æ–±–∏–ª—å–Ω–æ–º –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
      setShowHint(true)
    }
    
    setIsOpen(true)
  }

  if (connected) {
    onConnect?.()
    return null
  }

  return (
    <>
      <button
        onClick={handleConnect}
        className="flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-xl font-semibold hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-300 transform hover:scale-105"
      >
        <WalletIcon className="w-5 h-5" />
        –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
      </button>

      <Dialog open={isOpen} onClose={() => setIsOpen(false)} className="relative z-50">
        <div className="fixed inset-0 bg-black/30 backdrop-blur-sm" aria-hidden="true" />
        
        <div className="fixed inset-0 flex items-center justify-center p-4">
          <Dialog.Panel className="mx-auto max-w-md rounded-2xl bg-white dark:bg-slate-800 p-6 shadow-xl">
            <Dialog.Title className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
              –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
            </Dialog.Title>
            
            <div className="mb-6">
              <p className="text-gray-600 dark:text-gray-300 mb-4">
                {message}
              </p>
              
              {isAuthenticated && (
                <div className="flex items-start gap-2 p-3 bg-green-50 dark:bg-green-900/20 rounded-xl">
                  <InformationCircleIcon className="w-5 h-5 text-green-600 dark:text-green-400 flex-shrink-0 mt-0.5" />
                  <p className="text-sm text-green-700 dark:text-green-300">
                    –í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ö–æ—à–µ–ª–µ–∫ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
                  </p>
                </div>
              )}
              
              {showHint && (
                <div className="mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-xl">
                  <p className="text-sm text-yellow-800 dark:text-yellow-200">
                    –î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:
                  </p>
                  <ul className="mt-2 text-sm text-yellow-700 dark:text-yellow-300 list-disc list-inside">
                    <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Phantom –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ—à–µ–ª–µ–∫</li>
                    <li>–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –∫–æ—à–µ–ª—å–∫–∞</li>
                  </ul>
                </div>
              )}
            </div>
            
            <div className="flex flex-col gap-3">
              <WalletMultiButton className="!w-full !justify-center" />
              
              <button
                onClick={() => setIsOpen(false)}
                className="w-full px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white transition-colors"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </Dialog.Panel>
        </div>
      </Dialog>
    </>
  )
} 