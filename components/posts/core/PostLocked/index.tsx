'use client'

import React from 'react'
import { UnifiedPost, PostAction, PostCardVariant } from '@/types/posts'
import { 
  needsPayment,
  needsSubscription,
  needsTierUpgrade,
  getTierInfo,
  calculatePriceWithDiscount,
  getActionButtonText
} from '@/components/posts/utils/postHelpers'
import { useSolRate } from '@/lib/hooks/useSolRate'
import { cn } from '@/lib/utils'
import { TIER_INFO } from '@/lib/constants/tiers'

export interface PostLockedProps {
  post: UnifiedPost
  onAction?: (action: PostAction) => void
  variant?: PostCardVariant
  className?: string
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
export function PostLocked({
  post,
  onAction,
  variant = 'full',
  className
}: PostLockedProps) {
  const { rate: solRate } = useSolRate()

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  const needsPay = needsPayment(post)
  const needsSub = needsSubscription(post)
  const needsUpgrade = needsTierUpgrade(post)
  const tierInfo = getTierInfo(post.access)

  // –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
  const getContainerHeight = () => {
    switch (variant) {
      case 'minimal': return 'h-48'
      case 'compact': return 'h-64'
      default: return 'h-96'
    }
  }

  const getContentPadding = () => {
    switch (variant) {
      case 'minimal': return 'p-4'
      case 'compact': return 'p-6'
      default: return 'p-8'
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –¥–æ—Å—Ç—É–ø–∞
  const getGradientStyle = () => {
    if (tierInfo?.required) {
      return tierInfo.required.gradient
    }
    if (post.commerce?.isSellable) {
      return 'from-orange-500/20 to-red-500/20'
    }
    if (needsPay) {
      return 'from-yellow-500/20 to-orange-500/20'
    }
    return 'from-purple-500/20 to-pink-500/20'
  }

  const handleUnlock = () => {
    if (!onAction) return

    if (needsPay || post.commerce?.isSellable) {
      onAction({ type: 'purchase', postId: post.id })
    } else if (needsSub || needsUpgrade) {
      onAction({ type: 'subscribe', postId: post.id })
    }
  }

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏
  const finalPrice = post.commerce?.flashSale && post.access.price
    ? calculatePriceWithDiscount(post.access.price, post.commerce.flashSale)
    : post.access.price

  const buttonText = getActionButtonText(post)

  return (
    <div className={cn(
      'relative overflow-hidden rounded-xl sm:rounded-2xl',
      getContainerHeight(),
      className
    )}>
      {/* Background with blur effect */}
      <div className="absolute inset-0">
        {post.media.thumbnail ? (
          <img 
            src={post.media.thumbnail} 
            alt={post.content.title}
            className="w-full h-full object-cover filter blur-xl opacity-50"
          />
        ) : (
          <div className={cn(
            'w-full h-full bg-gradient-to-br',
            getGradientStyle()
          )} />
        )}
        <div className="absolute inset-0 bg-black/40 backdrop-blur-md" />
      </div>

      {/* Lock content */}
      <div className={cn(
        'relative h-full flex flex-col items-center justify-center text-center',
        getContentPadding()
      )}>
        {/* Lock icon */}
        <div className="mb-4">
          {tierInfo?.required ? (
            <div className="text-4xl sm:text-5xl">{tierInfo.required.icon}</div>
          ) : (
            <svg className="w-12 h-12 sm:w-16 sm:h-16 text-white/80" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
          )}
        </div>

        {/* Lock message */}
        <h4 className="text-white font-semibold text-lg sm:text-xl mb-2">
          {needsPay ? '–ü—Ä–µ–º–∏—É–º –∫–æ–Ω—Ç–µ–Ω—Ç' :
           needsUpgrade ? `–î–æ—Å—Ç—É–ø–Ω–æ —Å ${tierInfo?.required.name} –ø–æ–¥–ø–∏—Å–∫–æ–π` :
           needsSub ? '–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤' :
           post.commerce?.isSellable ? '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Ç–æ–≤–∞—Ä' :
           '–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
        </h4>
        
        {/* Descriptive message */}
        <p className="text-white/80 text-sm mb-4 max-w-sm">
          {needsPay ? '–ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É' :
           needsUpgrade ? `–û–±–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ ${tierInfo?.required.name} –∫–æ–Ω—Ç–µ–Ω—Ç—É` :
           needsSub ? '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞' :
           post.commerce?.isSellable ? '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏' :
           '–≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø'}
        </p>

        {/* Price or tier info */}
        {needsPay && finalPrice && (
          <div className="mb-4">
            <div className="text-2xl font-bold text-white">
              {finalPrice.toFixed(2)} {post.access.currency}
            </div>
            {solRate && post.access.currency === 'SOL' && (
              <div className="text-sm text-white/70">
                ‚âà ${(finalPrice * solRate).toFixed(2)} USD
              </div>
            )}
            {post.commerce?.flashSale && (
              <div className="mt-1 text-sm text-yellow-400">
                –°–∫–∏–¥–∫–∞ {post.commerce.flashSale.discount}%!
              </div>
            )}
          </div>
        )}

        {/* Unlock button */}
        {buttonText && (
          <button
            onClick={handleUnlock}
            className={cn(
              'px-6 py-3 rounded-xl font-medium transition-all',
              'bg-white/20 backdrop-blur-sm text-white',
              'hover:bg-white/30 hover:scale-105',
              'border border-white/30',
              'shadow-lg hover:shadow-xl',
              'transform hover:-translate-y-0.5'
            )}
          >
            <span className="flex items-center gap-2">
              {needsPay && 'üîì'}
              {(needsSub || needsUpgrade) && '‚≠ê'}
              {post.commerce?.isSellable && 'üõçÔ∏è'}
              {buttonText}
            </span>
          </button>
        )}

        {/* Additional info for tier content */}
        {tierInfo && variant === 'full' && (
          <p className="mt-3 text-sm text-white/70 max-w-xs">
            {needsUpgrade 
              ? `–û–±–Ω–æ–≤–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É —Å ${tierInfo.current?.name} –¥–æ ${tierInfo.required.name}`
              : `–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É—Ä–æ–≤–µ–Ω—å ${tierInfo.required.name} –¥–ª—è –¥–æ—Å—Ç—É–ø–∞`
            }
          </p>
        )}
      </div>
    </div>
  )
} 