'use client'

import React, { useState } from 'react'
import { UnifiedPost, PostAction, PostCardVariant } from '@/types/posts'
import { PostHeader } from '../PostHeader'
import { PostContent } from '../PostContent'
import { PostActions } from '../PostActions'
import { PostTierBadge } from '../PostTierBadge'
import { PostFlashSale } from '../PostFlashSale'
import { CommentsSection } from '../CommentsSection'
import { PostMenu } from '../PostMenu'
import { cn } from '@/lib/utils'
import { 
  getPostCardBorderStyle, 
  getPostCardGlowStyle,
  getPostCardBackgroundStyle,
  needsPayment,
  needsSubscription,
  needsTierUpgrade,
  isActiveAuction,
  isPostSold
} from '@/components/posts/utils/postHelpers'
// [content_access_system_2025_017] –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
import { TIER_VISUAL_DETAILS, TIER_BLUR_STYLES, TIER_DIM_STYLES, SPECIAL_CONTENT_STYLES } from '@/lib/constants/tier-styles'
import { getPostAccessType, PostAccessType } from '@/types/posts/access'
import { normalizeTierName } from '@/lib/utils/access'
import { SparklesIcon, LockClosedIcon } from '@heroicons/react/24/solid'

export interface PostCardProps {
  /** –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞ */
  post: UnifiedPost
  /** –í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */
  variant?: PostCardVariant
  /** –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ */
  showCreator?: boolean
  /** Callback –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π */
  onAction?: (action: PostAction) => void
  /** –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã */
  className?: string
}

/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ—Å—Ç–∞
 * [content_access_system_2025_017] –†–∞—Å—à–∏—Ä–µ–Ω –¥–ª—è –ø–æ–ª–Ω–æ–π –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
 */
export function PostCard({
  post,
  variant = 'full',
  showCreator = true,
  onAction,
  className
}: PostCardProps) {
  const [showComments, setShowComments] = useState(false)

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  const handleAction = (action: PostAction) => {
    if (action.type === 'comment') {
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
      setShowComments(!showComments)
    } else if (onAction) {
      onAction(action)
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  const showFlashSale = !!post.commerce?.flashSale && !isPostSold(post.commerce)
  const showTierBadge = !!post?.access?.tier && (needsSubscription(post) || needsTierUpgrade(post))
  const showAuctionBadge = isActiveAuction(post.commerce)
  const isSold = isPostSold(post.commerce)

  // [content_access_system_2025_017] –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  const accessType = getPostAccessType({
    isLocked: post.access?.isLocked,
    minSubscriptionTier: post.access?.tier,
    price: post.access?.price,
    isSellable: post.commerce?.isSellable
  })
  const shouldBlur = post.access?.shouldBlur || false
  const shouldDim = post.access?.shouldDim || false // [tier_access_visual_fix_2025_017]
  const upgradePrompt = post.access?.upgradePrompt
  const requiredTier = normalizeTierName(post.access?.requiredTier || post.access?.tier)

  // [content_access_system_2025_017] –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è 6 —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const getTierCardStyles = () => {
    const baseStyles = 'relative overflow-hidden transition-all duration-300'
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –¥–æ—Å—Ç—É–ø–∞
    let visualStyle = null
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö –∏ –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö –ø–æ—Å—Ç–æ–≤
    if (post.access?.price && !post.commerce?.isSellable) {
      visualStyle = SPECIAL_CONTENT_STYLES.paid
    } else if (post.commerce?.isSellable) {
      visualStyle = isSold ? SPECIAL_CONTENT_STYLES.sold : SPECIAL_CONTENT_STYLES.sellable
    } else if (requiredTier) {
      visualStyle = TIER_VISUAL_DETAILS[requiredTier]
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
    const borderClasses = visualStyle ? `border-2 ${visualStyle.border}` : 'border border-gray-200 dark:border-slate-700/50'
    const backgroundClasses = visualStyle ? `bg-gradient-to-br ${visualStyle.gradient}` : 'bg-white dark:bg-slate-900'
    
    switch (variant) {
      case 'full':
        return cn(
          baseStyles,
          backgroundClasses,
          borderClasses,
          'rounded-none sm:rounded-3xl',
          'hover:shadow-lg transition-shadow'
        )
      case 'compact':
        return cn(
          baseStyles,
          backgroundClasses,
          borderClasses,
          'rounded-xl sm:rounded-2xl',
          'hover:shadow-md transition-shadow'
        )
      case 'minimal':
        return cn(
          baseStyles,
          backgroundClasses,
          borderClasses,
          'rounded-lg',
          'hover:shadow-sm transition-shadow'
        )
      default:
        return baseStyles
    }
  }

  // Hover —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø–ª–∞—Ç–Ω–æ–≥–æ/–ø—Ä–µ–º–∏—É–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  const needsUnlock = needsPayment(post) || needsSubscription(post) || needsTierUpgrade(post)
  
  return (
    <article className={cn(
      getTierCardStyles(), 
      className,
      shouldDim ? TIER_DIM_STYLES.content : '' // [tier_access_visual_fix_2025_017] –ü—Ä–∏–º–µ–Ω—è–µ–º dim –∫ –≤—Å–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ
    )}>
      {/* Hover Glow Effect */}
      {needsUnlock && (
        <div className={cn(
          'absolute inset-0 opacity-0 hover:opacity-100 transition-opacity duration-300 pointer-events-none',
          getPostCardGlowStyle(post)
        )} />
      )}

      {/* Flash Sale Banner */}
      {showFlashSale && post.commerce?.flashSale && (
        <PostFlashSale flashSale={post.commerce.flashSale} />
      )}

      {/* Sold Badge */}
      {isSold && (
        <div className="absolute top-4 right-4 z-10">
          <div className="bg-green-900/90 text-white px-3 py-1.5 rounded-full text-sm font-medium backdrop-blur-sm flex items-center gap-1.5">
            {SPECIAL_CONTENT_STYLES.sold.icon} SOLD
          </div>
        </div>
      )}

      {/* Auction Badge */}
      {showAuctionBadge && !isSold && (
        <div className="absolute top-4 right-4 z-10">
          <div className="bg-orange-500/90 text-white px-3 py-1.5 rounded-full text-sm font-medium backdrop-blur-sm animate-pulse">
            üî• –ê—É–∫—Ü–∏–æ–Ω
          </div>
        </div>
      )}

      {/* [content_access_system_2025_017] Tier Badge –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ - –£–ë–†–ê–ù–û –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ */}
      {/* –£–±–∏—Ä–∞–µ–º –≤–µ—Ä—Ö–Ω–∏–π badge, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∏–∂–Ω–∏–π –≤ PostContent */}
      {false && requiredTier && !post.access?.hasAccess && !isSold && (
        <div className="absolute top-4 left-4 z-10">
          <PostTierBadge tier={requiredTier || 'basic'} size="sm" />
        </div>
      )}

      {/* Card Content */}
      <div className={cn(
        variant === 'minimal' ? 'p-3' : 'p-3 sm:p-6',
        shouldBlur ? TIER_BLUR_STYLES.content : ''
        // [tier_access_visual_fix_2025_017] Dim —Å—Ç–∏–ª–∏ —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫ –≤—Å–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ
      )}>
          {/* Header */}
          {showCreator && (
            <PostHeader 
              post={post}
              variant={variant}
              onAction={onAction}
            />
          )}

          {/* Post Menu for own posts - show when not showing creator header */}
          {!showCreator && (
            <div className="flex justify-end mb-4">
              <PostMenu 
              post={post}
              onAction={onAction}
            />
          </div>
        )}

        {/* Content */}
        <PostContent 
          post={post}
          variant={variant}
          onAction={onAction}
        />

        {/* Actions */}
        {variant !== 'minimal' && (
          <PostActions
            post={post}
            onAction={handleAction}
            variant={variant}
          />
        )}
      </div>

      {/* [content_access_system_2025_017] Blur Overlay —Å Upgrade Prompt */}
      {shouldBlur && upgradePrompt && (
        <div className={cn(TIER_BLUR_STYLES.overlay, 'z-20')}>
          <div className="bg-white dark:bg-slate-800 rounded-2xl p-6 shadow-2xl max-w-sm mx-4 text-center">
            {/* Tier Icon */}
            {requiredTier && TIER_VISUAL_DETAILS[requiredTier] && (
              <div className="text-5xl mb-4">
                {TIER_VISUAL_DETAILS[requiredTier].icon}
              </div>
            )}
            
            {/* Lock Icon for paid content */}
            {accessType === PostAccessType.PAID && (
              <LockClosedIcon className="w-12 h-12 mx-auto mb-4 text-yellow-500" />
            )}
            
            {/* Upgrade Message */}
            <h3 className="text-xl font-bold mb-2 text-gray-900 dark:text-white">
              {upgradePrompt}
            </h3>
            
            {/* CTA Button */}
            {onAction && (
              <button
                onClick={() => onAction({ 
                  type: needsPayment(post) ? 'purchase' : 'subscribe', 
                  postId: post.id 
                })}
                className={cn(
                  'mt-4 px-6 py-3 rounded-full font-medium transition-all',
                  'transform hover:scale-105 active:scale-95',
                  requiredTier && TIER_VISUAL_DETAILS[requiredTier]
                    ? `bg-gradient-to-r ${TIER_VISUAL_DETAILS[requiredTier].gradient} ${TIER_VISUAL_DETAILS[requiredTier].text}`
                    : 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                )}
              >
                <SparklesIcon className="w-5 h-5 inline mr-2" />
                {needsPayment(post) ? 'Purchase Now' : `Upgrade to ${requiredTier?.toUpperCase() || 'Subscribe'}`}
              </button>
            )}
          </div>
        </div>
      )}

      {/* –°–µ–∫—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ */}
      {showComments && (
        <CommentsSection
          postId={post.id}
          onClose={() => setShowComments(false)}
          className="animate-fade-in"
        />
      )}
    </article>
  )
} 