#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä SQL INSERT –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –∏–∑ Supabase
"""

import json
import sys
from typing import List, Dict, Any

def escape_sql_string(value: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–ª—è SQL"""
    if value is None:
        return "null"
    
    # –ó–∞–º–µ–Ω—è–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ –¥–≤–æ–π–Ω—ã–µ –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ
    value = str(value).replace("'", "''")
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª–µ—à–∏
    value = value.replace("\\", "\\\\")
    return f"'{value}'"

def format_sql_value(value: Any) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è SQL"""
    if value is None:
        return "null"
    elif isinstance(value, bool):
        return "true" if value else "false"
    elif isinstance(value, (int, float)):
        return str(value)
    else:
        return escape_sql_string(value)

def generate_posts_insert_sql(posts_data: List[Dict[str, Any]]) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SQL INSERT –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤"""
    
    if not posts_data:
        return ""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
    fields = [
        "id", "creatorId", "title", "content", "type", "category", 
        "thumbnail", "mediaUrl", "isLocked", "isPremium", "price", 
        "currency", "likesCount", "commentsCount", "viewsCount", 
        "createdAt", "updatedAt"
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏ –¥–ª—è –ø–æ–ª–µ–π —Å CamelCase
    quoted_fields = []
    for field in fields:
        if any(c.isupper() for c in field[1:]):  # CamelCase –ø–æ–ª—è
            quoted_fields.append(f'"{field}"')
        else:
            quoted_fields.append(field)
    
    sql_parts = []
    sql_parts.append(f"INSERT INTO posts ({', '.join(quoted_fields)}) VALUES")
    
    values_list = []
    for post in posts_data:
        values = []
        for field in fields:
            value = post.get(field)
            values.append(format_sql_value(value))
        
        values_str = f"({', '.join(values)})"
        values_list.append(values_str)
    
    sql_parts.append(",\n".join(values_list) + ";")
    
    return "\n".join(sql_parts)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–æ–≤ –∏–∑ Supabase (–ø–µ—Ä–≤—ã–µ 100)
    posts_data = [
        {
            "id": "cmbv6i0to0000real1",
            "creatorId": "cmbv53b7h0000qoe0vy4qwkap",
            "title": "üëÄ MVP = Mostly Valuable Prototype",
            "content": "Hi, I'm the dev.\\nFonana just dropped ‚Äî like a newborn giraffe. It's standing. It's wobbly. But damn, it's alive.\\n\\nRight now, it's like OnlyFans met Craigslist in a dark alley and they decided to vibe.\\nEverything kinda works. Some stuff breaks. That's showbiz, baby.\\n\\n‚úÖ Your link is your power ‚Äî every visitor who comes through your profile gets tied to you for 7 days.\\nü§ù Bring the weirdos, the lurkers, the masked legends.\\nüì∏ Post anything. Even cursed images. Especially cursed images.\\n\\nIt's early. It's raw. It's fun.\\nAnd if you find bugs? That's called feature exploration mode.\\n\\nWelcome to Fonana.\\n#NoShame #JustTaste #BetaAndProud #FonanaDev",
            "type": "video",
            "category": "crypto",
            "thumbnail": "https://iwzfrnfemdeomowothhn.supabase.co/storage/v1/object/public/posts//placeholder-video.png",
            "mediaUrl": "https://iwzfrnfemdeomowothhn.supabase.co/storage/v1/object/public/posts/940af4e585a350c4bd3c16e86c3ded95.png",
            "isLocked": False,
            "isPremium": False,
            "price": None,
            "currency": "SOL",
            "likesCount": 0,
            "commentsCount": 0,
            "viewsCount": 0,
            "createdAt": "2025-06-13 18:37:23.033",
            "updatedAt": "2025-06-19 05:07:56.746"
        }
    ]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL
    sql = generate_posts_insert_sql(posts_data)
    
    if sql:
        print("-- SQL INSERT –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –∏–∑ Supabase")
        print(sql)
        print()
        print("‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤")
    else:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL")

if __name__ == "__main__":
    main() 