const { PrismaClient } = require('@prisma/client');

async function addTokenFields() {
  const prisma = new PrismaClient();

  try {
    console.log('Connecting to database...');

    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
    await prisma.$executeRaw`ALTER TABLE users ADD COLUMN IF NOT EXISTS token TEXT`;
    await prisma.$executeRaw`ALTER TABLE users ADD COLUMN IF NOT EXISTS "tokenExpiresAt" TIMESTAMP`;
    console.log('‚úÖ Added token fields to users table');

    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
    await prisma.$executeRaw`CREATE INDEX IF NOT EXISTS idx_users_token ON users(token)`;
    await prisma.$executeRaw`CREATE INDEX IF NOT EXISTS idx_users_token_expires ON users("tokenExpiresAt")`;
    console.log('‚úÖ Created indexes for token fields');

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
    await prisma.$executeRaw`COMMENT ON COLUMN users.token IS 'JWT token for API authentication'`;
    await prisma.$executeRaw`COMMENT ON COLUMN users."tokenExpiresAt" IS 'Token expiration date'`;
    console.log('‚úÖ Added comments to token fields');

    console.log('üéâ Token fields successfully added to database!');

  } catch (error) {
    console.error('‚ùå Error adding token fields:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addTokenFields(); 