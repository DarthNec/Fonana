#!/bin/bash

echo "üöÄ –°–æ–∑–¥–∞–µ–º Flash Sales –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ..."

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—Ç SSH
ssh -p 43988 root@69.10.59.234 << 'ENDSSH'
cd /var/www/fonana

echo "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
cat > scripts/temp-create-flash-sales.js << 'EOF'
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createFlashSales() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–µ–º Flash Sales –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω–µ...\n')
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ Flash Sales –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    const deleted = await prisma.flashSale.deleteMany({})
    console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö Flash Sales: ${deleted.count}`)
    
    // –ù–∞–π–¥–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π –¥–ª—è Flash Sales
    const creators = await prisma.user.findMany({
      where: {
        OR: [
          { nickname: 'yourdad' },
          { nickname: 'dogwater' },
          { nickname: 'artcreator' },
          { nickname: 'musicvibes' }
        ]
      },
      include: {
        posts: {
          where: {
            isLocked: true,
            price: { gt: 0 }
          },
          take: 2
        }
      }
    })
    
    console.log(`\nüë• –ù–∞–π–¥–µ–Ω–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π: ${creators.length}`)
    
    for (const creator of creators) {
      console.log(`\nüé® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${creator.nickname}`)
      
      // Flash Sale –¥–ª—è Basic –ø–æ–¥–ø–∏—Å–∫–∏ - 50% —Å–∫–∏–¥–∫–∞
      try {
        const basicSale = await prisma.flashSale.create({
          data: {
            creatorId: creator.id,
            discount: 50,
            subscriptionPlan: 'basic',
            startAt: new Date(),
            endAt: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000), // 14 –¥–Ω–µ–π
            isActive: true,
            maxRedemptions: 100,
            usedCount: 0
          }
        })
        console.log(`‚úÖ Basic –ø–ª–∞–Ω: -${basicSale.discount}%`)
      } catch(e) {
        console.log(`‚ö†Ô∏è  Basic –ø–ª–∞–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
      }
      
      // Flash Sale –¥–ª—è Premium –ø–æ–¥–ø–∏—Å–∫–∏ - 30% —Å–∫–∏–¥–∫–∞
      try {
        const premiumSale = await prisma.flashSale.create({
          data: {
            creatorId: creator.id,
            discount: 30,
            subscriptionPlan: 'premium',
            startAt: new Date(),
            endAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 –¥–Ω–µ–π
            isActive: true,
            maxRedemptions: 50,
            usedCount: 0
          }
        })
        console.log(`‚úÖ Premium –ø–ª–∞–Ω: -${premiumSale.discount}%`)
      } catch(e) {
        console.log(`‚ö†Ô∏è  Premium –ø–ª–∞–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
      }
      
      // Flash Sale –¥–ª—è VIP –ø–æ–¥–ø–∏—Å–∫–∏ - 20% —Å–∫–∏–¥–∫–∞
      try {
        const vipSale = await prisma.flashSale.create({
          data: {
            creatorId: creator.id,
            discount: 20,
            subscriptionPlan: 'vip',
            startAt: new Date(),
            endAt: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000), // 3 –¥–Ω—è
            isActive: true,
            maxRedemptions: 20,
            usedCount: 0
          }
        })
        console.log(`‚úÖ VIP –ø–ª–∞–Ω: -${vipSale.discount}%`)
      } catch(e) {
        console.log(`‚ö†Ô∏è  VIP –ø–ª–∞–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
      }
      
      // Flash Sales –¥–ª—è –ø–æ—Å—Ç–æ–≤ - 25% —Å–∫–∏–¥–∫–∞
      if (creator.posts.length > 0) {
        for (const post of creator.posts) {
          try {
            const postSale = await prisma.flashSale.create({
              data: {
                creatorId: creator.id,
                postId: post.id,
                discount: 25,
                startAt: new Date(),
                endAt: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // 5 –¥–Ω–µ–π
                isActive: true,
                maxRedemptions: 100,
                usedCount: 0
              }
            })
            console.log(`‚úÖ –ü–æ—Å—Ç "${post.title}": -${postSale.discount}%`)
          } catch(e) {
            console.log(`‚ö†Ô∏è  Flash Sale –¥–ª—è –ø–æ—Å—Ç–∞ "${post.title}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
          }
        }
      }
    }
    
    // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalSales = await prisma.flashSale.count()
    const salesByType = await prisma.flashSale.groupBy({
      by: ['subscriptionPlan'],
      _count: true,
      where: {
        subscriptionPlan: { not: null }
      }
    })
    
    const postSales = await prisma.flashSale.count({
      where: { postId: { not: null } }
    })
    
    console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
    console.log(`   –í—Å–µ–≥–æ Flash Sales: ${totalSales}`)
    console.log(`   –î–ª—è –ø–æ–¥–ø–∏—Å–æ–∫: ${salesByType.reduce((sum, s) => sum + s._count, 0)}`)
    console.log(`   –î–ª—è –ø–æ—Å—Ç–æ–≤: ${postSales}`)
    
    console.log('\nüéâ Flash Sales —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω–µ!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createFlashSales()
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Flash Sales..."
node scripts/temp-create-flash-sales.js

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
rm scripts/temp-create-flash-sales.js

echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"
ENDSSH

echo "üéâ Flash Sales —Å–æ–∑–¥–∞–Ω—ã –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ!" 