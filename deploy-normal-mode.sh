#!/bin/bash

# üöÄ FONANA DEPLOYMENT: SWITCH TO NORMAL MODE
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å standalone –Ω–∞ normal Next.js mode
# –ê–≤—Ç–æ—Ä: –ú7 Methodology Analysis

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Configuration
PRODUCTION_SERVER="fonana"
DEPLOY_PATH="/var/www/Fonana"
BACKUP_SUFFIX=$(date +%Y%m%d_%H%M%S)

log() {
    echo -e "${GREEN}[$(date '+%H:%M:%S')] $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

echo -e "${BLUE}================================================================"
echo -e "      FONANA: –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê NORMAL MODE"
echo -e "      –£—Å—Ç—Ä–∞–Ω—è–µ–º standalone mode –¥–ª—è —Ä–µ—à–µ–Ω–∏—è image 404"
echo -e "================================================================${NC}"

# –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
echo -e "\nüìã ${BLUE}–ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:${NC}"
echo "  üîç Root Cause: standalone mode –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ public/posts/images/"
echo "  üéØ Solution: –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ standard Next.js production mode"
echo "  ‚ö° Benefit: –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ uploaded —Ñ–∞–π–ª–∞–º –±–µ–∑ sync"
echo ""

# Backup current configs
log "üì¶ –°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."

ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
# Backup configs
cp next.config.js next.config.js.backup_$BACKUP_SUFFIX
cp ecosystem.config.js ecosystem.config.js.backup_$BACKUP_SUFFIX
"

log "‚úÖ Backup —Å–æ–∑–¥–∞–Ω —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º: $BACKUP_SUFFIX"

# Show current config
log "üìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "Production next.config.js:"
ssh $PRODUCTION_SERVER "grep -n 'output.*standalone' $DEPLOY_PATH/next.config.js || echo 'standalone not found'"
echo ""
echo "Production ecosystem.config.js:"
ssh $PRODUCTION_SERVER "grep -n 'script.*standalone' $DEPLOY_PATH/ecosystem.config.js || echo 'standalone not found'"

# Confirmation
echo ""
warning "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
echo "  1. ‚ùå –£–¥–∞–ª–∏—Ç 'output: standalone' –∏–∑ next.config.js"
echo "  2. üîÑ –ò–∑–º–µ–Ω–∏—Ç PM2 script –Ω–∞ 'npm start'"
echo "  3. üèóÔ∏è  –ü–µ—Ä–µ—Å–æ–±–µ—Ä–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ normal mode"
echo "  4. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç PM2 application"
echo "  5. ‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
echo ""

read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    error "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
fi

# Step 1: Remove standalone from next.config.js
log "üîß –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º standalone mode –∏–∑ next.config.js"

ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
# Remove the standalone output line
sed -i '/output: .standalone.,/d' next.config.js
# Remove comments about standalone
sed -i '/Force standalone/d' next.config.js
sed -i '/standalone generation/d' next.config.js
sed -i '/standalone even with/d' next.config.js
"

log "‚úÖ standalone mode —É–¥–∞–ª–µ–Ω –∏–∑ next.config.js"

# Step 2: Update PM2 configuration
log "üîß –®–∞–≥ 2: –û–±–Ω–æ–≤–ª—è–µ–º PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è normal mode"

ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
# Update PM2 script from standalone to npm start
sed -i \"s|script: '.next/standalone/server.js'|script: 'npm start'|\" ecosystem.config.js
# Update name if needed
sed -i \"s|'fonana-app'|'fonana'|\" ecosystem.config.js
"

log "‚úÖ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# Step 3: Verify changes
log "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
echo '--- next.config.js changes ---'
grep -n 'output' next.config.js || echo 'output directive removed ‚úÖ'
echo ''
echo '--- ecosystem.config.js changes ---'
grep -A2 -B2 'script:' ecosystem.config.js
"

# Step 4: Build application in normal mode
log "üèóÔ∏è  –®–∞–≥ 3: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ normal mode"

ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
echo 'Starting build process...'
NODE_ENV=production npm run build
echo 'Build completed!'
"

log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω–æ –≤ normal mode"

# Step 5: Restart PM2
log "üîÑ –®–∞–≥ 4: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º PM2 —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"

ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
# Stop current process
pm2 delete fonana-app 2>/dev/null || echo 'Previous process not found'
pm2 delete fonana 2>/dev/null || echo 'Previous process not found'

# Start with new config
pm2 start ecosystem.config.js
pm2 save
"

log "‚úÖ PM2 –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å normal mode"

# Step 6: Wait for startup
log "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# Step 7: Health check
log "üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

ssh $PRODUCTION_SERVER "
cd $DEPLOY_PATH
echo '=== PM2 Status ==='
pm2 status
echo ''
echo '=== Application Logs (last 10 lines) ==='
pm2 logs fonana --lines 10 --nostream
"

# Step 8: Test image accessibility
log "üñºÔ∏è  –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"

echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º lafufu image..."
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://fonana.me/posts/images/0612cc5b000dcff7ed9879dbc86942cf.JPG)

if [ "$HTTP_STATUS" = "200" ]; then
    log "üéâ –£–°–ü–ï–•! –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ lafufu –¥–æ—Å—Ç—É–ø–Ω–æ (HTTP 200)"
else
    warning "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ HTTP $HTTP_STATUS - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
fi

# Final verification
log "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."

ssh $PRODUCTION_SERVER "
echo 'Checking if file exists:'
ls -la $DEPLOY_PATH/public/posts/images/0612cc5b000dcff7ed9879dbc86942cf.JPG 2>/dev/null || echo 'File not found in public/'
"

echo ""
echo -e "${GREEN}================================================================"
echo -e "                 –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo -e "================================================================${NC}"
echo ""
echo -e "‚úÖ ${GREEN}Normal mode –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
echo -e "üîç ${BLUE}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:${NC} https://fonana.me"
echo -e "üìä ${BLUE}PM2 —Å—Ç–∞—Ç—É—Å:${NC} ssh fonana 'pm2 status'"
echo -e "üìù ${BLUE}–õ–æ–≥–∏:${NC} ssh fonana 'pm2 logs fonana'"
echo ""
echo -e "üîô ${YELLOW}–û—Ç–∫–∞—Ç –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö:${NC}"
echo -e "   ssh fonana 'cd $DEPLOY_PATH && cp next.config.js.backup_$BACKUP_SUFFIX next.config.js'"
echo -e "   ssh fonana 'cd $DEPLOY_PATH && cp ecosystem.config.js.backup_$BACKUP_SUFFIX ecosystem.config.js'"
echo -e "   ssh fonana 'cd $DEPLOY_PATH && npm run build && pm2 restart fonana'"
echo ""

if [ "$HTTP_STATUS" = "200" ]; then
    echo -e "üéØ ${GREEN}–ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê! lafufu –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è.${NC}"
else
    warning "–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞. HTTP Status: $HTTP_STATUS"
fi 