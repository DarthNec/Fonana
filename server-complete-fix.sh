#!/bin/bash

echo "🔧 ПОЛНОЕ ИСПРАВЛЕНИЕ FONANA НА СЕРВЕРЕ"
echo "========================================"
echo ""
echo "Этот скрипт:"
echo "1. Полностью удалит старый проект"
echo "2. Очистит все костыли и старые процессы"
echo "3. Установит проект заново с правильными настройками"
echo ""

echo "ВЫПОЛНИТЕ НА СЕРВЕРЕ:"
echo ""
echo "ssh -p 43988 root@69.10.59.234"
echo ""
echo "# 1. ПОЛНАЯ ОСТАНОВКА И ОЧИСТКА"
echo "systemctl stop fonana"
echo "systemctl disable fonana"
echo "pkill -9 -f node"
echo "pkill -9 -f npm"
echo "rm -rf /var/www/fonana"
echo "rm -f /etc/systemd/system/fonana.service"
echo "rm -f /etc/nginx/sites-enabled/fonana"
echo "rm -f /etc/nginx/sites-available/fonana"
echo "systemctl daemon-reload"
echo ""
echo "# 2. СОЗДАНИЕ ЧИСТОЙ СТРУКТУРЫ"
echo "mkdir -p /var/www/fonana"
echo "cd /var/www/fonana"
echo ""
echo "# 3. РАСПАКОВКА НОВЫХ ФАЙЛОВ"
echo "tar -xzf /tmp/fonana-clean-deploy.tar.gz"
echo ""
echo "# 4. УСТАНОВКА ЗАВИСИМОСТЕЙ"
echo "npm install --production"
echo ""
echo "# 5. СОЗДАНИЕ ПРАВИЛЬНОГО SYSTEMD СЕРВИСА"
echo "cat > /etc/systemd/system/fonana.service << 'EOF'"
echo "[Unit]"
echo "Description=Fonana Web3 Platform"
echo "After=network.target"
echo ""
echo "[Service]"
echo "Type=simple"
echo "User=root"
echo "WorkingDirectory=/var/www/fonana"
echo "ExecStart=/usr/bin/npm start"
echo "Environment=\"NODE_ENV=production\""
echo "Environment=\"PORT=3001\""
echo "Environment=\"HOSTNAME=0.0.0.0\""
echo "Restart=always"
echo "RestartSec=10"
echo ""
echo "[Install]"
echo "WantedBy=multi-user.target"
echo "EOF"
echo ""
echo "# 6. СОЗДАНИЕ ПРАВИЛЬНОЙ КОНФИГУРАЦИИ NGINX"
echo "cat > /etc/nginx/sites-available/fonana << 'EOF'"
echo "server {"
echo "    listen 80;"
echo "    server_name fonana.me www.fonana.me;"
echo "    return 301 https://\$server_name\$request_uri;"
echo "}"
echo ""
echo "server {"
echo "    listen 443 ssl http2;"
echo "    server_name fonana.me www.fonana.me;"
echo ""
echo "    ssl_certificate /etc/letsencrypt/live/fonana.me/fullchain.pem;"
echo "    ssl_certificate_key /etc/letsencrypt/live/fonana.me/privkey.pem;"
echo ""
echo "    # Next.js static files - ПРАВИЛЬНЫЕ ПУТИ"
echo "    location /_next/static/ {"
echo "        alias /var/www/fonana/.next/static/;"
echo "        expires 1y;"
echo "        add_header Cache-Control \"public, immutable\";"
echo "        access_log off;"
echo "    }"
echo ""
echo "    # Public files"
echo "    location /public/ {"
echo "        alias /var/www/fonana/public/;"
echo "        expires 1y;"
echo "        add_header Cache-Control \"public\";"
echo "        access_log off;"
echo "    }"
echo ""
echo "    # Proxy to Next.js"
echo "    location / {"
echo "        proxy_pass http://localhost:3001;"
echo "        proxy_http_version 1.1;"
echo "        proxy_set_header Upgrade \$http_upgrade;"
echo "        proxy_set_header Connection 'upgrade';"
echo "        proxy_set_header Host \$host;"
echo "        proxy_cache_bypass \$http_upgrade;"
echo "    }"
echo "}"
echo "EOF"
echo ""
echo "# 7. ПЕРЕСБОРКА НА СЕРВЕРЕ (ВАЖНО!)"
echo "cd /var/www/fonana"
echo "rm -rf .next"
echo "npm run build"
echo ""
echo "# 8. АКТИВАЦИЯ И ЗАПУСК"
echo "ln -sf /etc/nginx/sites-available/fonana /etc/nginx/sites-enabled/"
echo "nginx -t && systemctl reload nginx"
echo "systemctl daemon-reload"
echo "systemctl enable fonana"
echo "systemctl start fonana"
echo ""
echo "# 9. ПРОВЕРКА"
echo "sleep 5"
echo "systemctl status fonana"
echo "curl -I https://fonana.me"
echo ""
echo "========================================"
echo "✅ После выполнения всех команд сайт должен работать без ошибок!" 