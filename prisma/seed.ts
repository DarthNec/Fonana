import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤
  const creators = [
    {
      wallet: '5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty',
      nickname: 'artcreator',
      fullName: '–ê—Ä—Ç—ë–º –•—É–¥–æ–∂–Ω–∏–∫',
      bio: 'üé® –¶–∏—Ñ—Ä–æ–≤–æ–π —Ö—É–¥–æ–∂–Ω–∏–∫ –∏ NFT —ç–Ω—Ç—É–∑–∏–∞—Å—Ç. –°–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Solana.',
      isCreator: true,
      isVerified: true,
      followersCount: 1250,
      postsCount: 87
    },
    {
      wallet: '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY',
      nickname: 'musicvibes',
      fullName: '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –í–∏–±—Ä–∞—Ü–∏–∏',
      bio: 'üéµ –ü—Ä–æ–¥—é—Å–µ—Ä —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –º—É–∑—ã–∫–∏. –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç—Ä–µ–∫–∏ –∏ –±–∏—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.',
      isCreator: true,
      isVerified: false,
      followersCount: 856,
      postsCount: 124
    },
    {
      wallet: '5FLSigC9HGRKVhB9FiEo4Y3koPsNmBmLJbpXg2mp1hXcS59Y',
      nickname: 'cryptotrader',
      fullName: '–ö—Ä–∏–ø—Ç–æ –¢—Ä–µ–π–¥–µ—Ä Pro',
      bio: 'üìà –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–π–¥–µ—Ä —Å 7-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –î–µ–ª—é—Å—å —Å–∏–≥–Ω–∞–ª–∞–º–∏ –∏ –æ–±—É—á–∞—é —Ç–æ—Ä–≥–æ–≤–ª–µ.',
      isCreator: true,
      isVerified: true,
      followersCount: 3420,
      postsCount: 234
    },
    {
      wallet: '5DAAnrj7VHTznn2AWBemMuyBwZWs6FNFjdyVXUeYum3PTXFy',
      nickname: 'fitnessqueen',
      fullName: '–§–∏—Ç–Ω–µ—Å –ö–æ—Ä–æ–ª–µ–≤–∞',
      bio: 'üí™ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –∏ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –ø–∏—Ç–∞–Ω–∏—è.',
      isCreator: true,
      isVerified: true,
      followersCount: 2890,
      postsCount: 156
    },
    {
      wallet: '5HGjWAeFDfFCWPsjFQdVV2Msvz2XtMktvgocEZcCj68kUMaw',
      nickname: 'defiexpert',
      fullName: 'DeFi –≠–∫—Å–ø–µ—Ä—Ç',
      bio: 'üöÄ –ê–Ω–∞–ª–∏—Ç–∏–∫ DeFi –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤. –û–±–∑–æ—Ä—ã –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ñ–∞—Ä–º–∏–Ω–≥–∞.',
      isCreator: true,
      isVerified: false,
      followersCount: 1567,
      postsCount: 98
    },
    {
      wallet: '5HNpg2XsvTKMmDraQj3reub2mvKT9FPABgrqKMt5ArUHSxYN',
      nickname: 'gamerultimate',
      fullName: '–ò–≥—Ä–æ–≤–æ–π –ú–∞—Å—Ç–µ—Ä',
      bio: 'üéÆ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–µ–π–º–µ—Ä –∏ —Å—Ç—Ä–∏–º–µ—Ä. –ì–∞–π–¥—ã, –æ–±–∑–æ—Ä—ã –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç.',
      isCreator: true,
      isVerified: true,
      followersCount: 4250,
      postsCount: 312
    }
  ]

  // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  for (const creator of creators) {
    const user = await prisma.user.upsert({
      where: { wallet: creator.wallet },
      update: {},
      create: creator
    })
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ—Ä: ${user.fullName}`)
  }

  // –°–æ–∑–¥–∞–µ–º —Ç–µ–≥–∏
  const tags = ['Art', 'Music', 'Gaming', 'Trading', 'DeFi', 'NFT', 'Fitness', 'Tech', 'Blockchain']
  
  for (const tagName of tags) {
    await prisma.tag.upsert({
      where: { name: tagName },
      update: {},
      create: { name: tagName }
    })
  }
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${tags.length} —Ç–µ–≥–æ–≤`)

  // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
  const createdUsers = await prisma.user.findMany({ where: { isCreator: true } })
  
  for (const user of createdUsers) {
    // –°–æ–∑–¥–∞–µ–º 3-5 –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
    const postCount = Math.floor(Math.random() * 3) + 3
    
    for (let i = 0; i < postCount; i++) {
      const post = await prisma.post.create({
        data: {
          creatorId: user.id,
          title: `–ü–æ—Å—Ç ${i + 1} –æ—Ç ${user.fullName}`,
          content: `–≠—Ç–æ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç ${user.fullName}. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º!`,
          type: ['text', 'image', 'video'][Math.floor(Math.random() * 3)],
          category: tags[Math.floor(Math.random() * tags.length)],
          isLocked: Math.random() > 0.5,
          isPremium: Math.random() > 0.7,
          likesCount: Math.floor(Math.random() * 100),
          viewsCount: Math.floor(Math.random() * 1000)
        }
      })
      
      // –î–æ–±–∞–≤–ª—è–µ–º 1-3 —Ç–µ–≥–∞ –∫ –ø–æ—Å—Ç—É
      const postTags = tags.sort(() => 0.5 - Math.random()).slice(0, Math.floor(Math.random() * 3) + 1)
      for (const tagName of postTags) {
        const tag = await prisma.tag.findUnique({ where: { name: tagName } })
        if (tag) {
          await prisma.postTag.create({
            data: {
              postId: post.id,
              tagId: tag.id
            }
          })
        }
      }
    }
  }

  console.log('‚úÖ –ü–æ—Å—Ç—ã –∏ —Ç–µ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã')
  console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!')
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  }) 