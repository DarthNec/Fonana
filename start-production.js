#!/usr/bin/env node

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
require('dotenv').config();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
console.log('üîê Environment check:');
console.log('NEXTAUTH_SECRET exists:', !!process.env.NEXTAUTH_SECRET);
console.log('NEXTAUTH_SECRET length:', process.env.NEXTAUTH_SECRET?.length || 0);
console.log('DATABASE_URL exists:', !!process.env.DATABASE_URL);
console.log('NODE_ENV:', process.env.NODE_ENV);

// –ó–∞–ø—É—Å–∫–∞–µ–º Next.js
const { spawn } = require('child_process');

console.log('üöÄ Starting Next.js production server...');

// –ò—Å–ø–æ–ª—å–∑—É–µ–º spawn –≤–º–µ—Å—Ç–æ execSync –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ–º
const nextProcess = spawn('npx', ['next', 'start'], {
  stdio: 'inherit',
  env: {
    ...process.env,
    NODE_ENV: 'production'
  },
  shell: true
});

nextProcess.on('error', (error) => {
  console.error('‚ùå Failed to start Next.js:', error);
  process.exit(1);
});

nextProcess.on('exit', (code) => {
  if (code !== 0) {
    console.error(`‚ùå Next.js exited with code ${code}`);
    process.exit(code);
  }
}); 