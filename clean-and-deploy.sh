#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}üßπ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ò –ü–ï–†–ï–£–°–¢–ê–ù–û–í–ö–ê FONANA${NC}"
echo -e "${YELLOW}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –Ω–æ–≤—É—é${NC}"
echo ""

SERVER_IP="69.10.59.234"
SERVER_PORT="43988"
SERVER_USER="root"

# –®–∞–≥ 1: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ª–æ–∫–∞–ª—å–Ω–æ
echo -e "${BLUE}üì¶ –®–∞–≥ 1: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
npm run build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏!${NC}"
    exit 1
fi

# –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è
echo -e "${BLUE}üì§ –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...${NC}"
rm -rf fonana-clean-deploy
mkdir -p fonana-clean-deploy

# –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
cp -r .next fonana-clean-deploy/
cp -r public fonana-clean-deploy/
cp -r app fonana-clean-deploy/
cp -r components fonana-clean-deploy/
cp -r lib fonana-clean-deploy/
cp -r prisma fonana-clean-deploy/
cp package*.json fonana-clean-deploy/
cp next.config.js fonana-clean-deploy/
cp tailwind.config.js fonana-clean-deploy/
cp postcss.config.js fonana-clean-deploy/
cp tsconfig.json fonana-clean-deploy/
cp .env.local fonana-clean-deploy/ 2>/dev/null || true
cp .env fonana-clean-deploy/ 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
cat > fonana-clean-deploy/start-fonana.sh << 'EOF'
#!/bin/bash
echo "üöÄ –ó–∞–ø—É—Å–∫ Fonana..."
export NODE_ENV=production
export PORT=3001
export HOSTNAME=0.0.0.0
npm start
EOF

chmod +x fonana-clean-deploy/start-fonana.sh

# –°–æ–∑–¥–∞–µ–º systemd service
cat > fonana-clean-deploy/fonana.service << 'EOF'
[Unit]
Description=Fonana Web3 Platform
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/var/www/fonana
ExecStart=/usr/bin/npm start
Environment="NODE_ENV=production"
Environment="PORT=3001"
Environment="HOSTNAME=0.0.0.0"
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
cat > fonana-clean-deploy/nginx-fonana.conf << 'EOF'
server {
    listen 80;
    server_name fonana.me www.fonana.me;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name fonana.me www.fonana.me;

    ssl_certificate /etc/letsencrypt/live/fonana.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fonana.me/privkey.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; frame-ancestors 'self';" always;
    
    # Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # Next.js static files
    location /_next/static/ {
        alias /var/www/fonana/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Public files
    location /public/ {
        alias /var/www/fonana/public/;
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
    }

    # Favicon, robots.txt
    location ~* ^/(favicon\.ico|robots\.txt|sitemap\.xml)$ {
        root /var/www/fonana/public;
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
    }

    # Images and fonts
    location ~* \.(jpg|jpeg|png|gif|svg|webp|ico|woff|woff2|ttf|eot)$ {
        root /var/www/fonana/public;
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
    }

    # Proxy to Next.js
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF

# –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º
tar -czf fonana-clean-deploy.tar.gz -C fonana-clean-deploy .

echo -e "${GREEN}‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω!${NC}"

# –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo -e "${BLUE}üîÑ –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...${NC}"
scp -P $SERVER_PORT fonana-clean-deploy.tar.gz $SERVER_USER@$SERVER_IP:/tmp/

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏!${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!${NC}"

# –®–∞–≥ 4: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo -e "${BLUE}üîß –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"
echo -e "${YELLOW}–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:${NC}"
echo ""
echo "ssh -p $SERVER_PORT $SERVER_USER@$SERVER_IP"
echo ""
echo "# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "systemctl stop fonana 2>/dev/null || true"
echo "pkill -f node"
echo "pkill -f npm"
echo ""
echo "# 2. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤"
echo "rm -rf /var/www/fonana"
echo "mkdir -p /var/www/fonana"
echo ""
echo "# 3. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"
echo "cd /var/www/fonana"
echo "tar -xzf /tmp/fonana-clean-deploy.tar.gz"
echo ""
echo "# 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "npm install --production"
echo ""
echo "# 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd"
echo "cp fonana.service /etc/systemd/system/"
echo "systemctl daemon-reload"
echo ""
echo "# 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx"
echo "cp nginx-fonana.conf /etc/nginx/sites-available/fonana"
echo "ln -sf /etc/nginx/sites-available/fonana /etc/nginx/sites-enabled/"
echo "nginx -t && systemctl reload nginx"
echo ""
echo "# 7. –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "systemctl enable fonana"
echo "systemctl start fonana"
echo ""
echo "# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"
echo "systemctl status fonana"
echo "curl -I https://fonana.me"
echo ""

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -rf fonana-clean-deploy
rm -f fonana-clean-deploy.tar.gz

echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ! –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏.${NC}" 