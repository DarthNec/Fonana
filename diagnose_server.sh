#!/bin/bash

echo "=== Диагностика статических файлов на сервере ==="

echo "Подключитесь к серверу и выполните:"
echo "ssh -p 43988 root@69.10.59.234"
echo ""

echo "=== НАЙДЕННЫЕ И ИСПРАВЛЕННЫЕ ПРОБЛЕМЫ ==="
echo ""
echo "1. Проблема с конфигурацией nginx:"
echo "   - Была ошибка в директиве gzip_proxied (must-revalidate - неправильное значение)"
echo "   - Исправлено: gzip_proxied expired no-cache no-store private auth;"
echo ""
echo "2. Проблема с запуском Next.js:"
echo "   - Несколько процессов пытались использовать одни и те же порты"
echo "   - Исправлено: killall -9 node и запуск с указанием порта PORT=3001"
echo ""
echo "3. Проблема со статическими файлами:"
echo "   - Теперь доступны через: https://fonana.me/_next/static/..."
echo ""

echo "=== КОМАНДЫ ДЛЯ ДИАГНОСТИКИ В БУДУЩЕМ ==="
echo ""
echo "# 1. Проверить структуру .next папки"
echo "cd /var/www/fonana"
echo "ls -la .next/"
echo "ls -la .next/static/"
echo ""
echo "# 2. Проверить процессы Node.js"
echo "ps aux | grep node"
echo "lsof -i :3001"
echo ""
echo "# 3. Проверить логи приложения"
echo "tail -f /var/www/fonana/nohup.out"
echo ""
echo "# 4. Перезапустить приложение"
echo "cd /var/www/fonana"
echo "killall -9 node"
echo "PORT=3001 nohup npm start > nohup.out 2>&1 &"
echo ""
echo "# 5. Проверить конфигурацию nginx"
echo "nginx -t"
echo "systemctl restart nginx"
echo ""
echo "# 6. Проверить доступность статических файлов"
echo "curl -I http://localhost:3001/_next/static/css/FILENAME.css"
echo "curl -I https://fonana.me/_next/static/css/FILENAME.css"

echo "=== КОМАНДЫ ДЛЯ ДИАГНОСТИКИ ==="
echo ""

echo "# 1. Проверить структуру .next папки"
echo "cd /var/www/fonana"
echo "ls -la .next/"
echo "ls -la .next/static/"
echo ""

echo "# 2. Проверить процессы Node.js"
echo "ps aux | grep node"
echo "lsof -i :3001"
echo ""

echo "# 3. Проверить логи приложения"
echo "tail -f /var/www/fonana/nohup.out"
echo ""

echo "# 4. Пересобрать с выводом ошибок"
echo "cd /var/www/fonana"
echo "rm -rf .next"
echo "npm run build 2>&1 | tee build.log"
echo ""

echo "# 5. Проверить статические файлы после сборки"
echo "find .next/static -name '*.css' -o -name '*.js' | head -10"
echo ""

echo "# 6. Перезапустить приложение"
echo "pkill -f node"
echo "sleep 3"
echo "nohup ./start_fonana.sh > /dev/null 2>&1 &"
echo "sleep 5"
echo ""

echo "# 7. Проверить ответ сервера"
echo "curl -I http://localhost:3001"
echo "curl -I http://localhost:3001/_next/static/css/"
echo ""

echo "# 8. Проверить nginx статус"
echo "nginx -t"
echo "systemctl status nginx"
echo ""

echo "# 9. Если проблема с nginx - перезапустить"
echo "systemctl restart nginx"
echo ""

echo "=== АЛЬТЕРНАТИВНЫЕ РЕШЕНИЯ ==="
echo ""

echo "# A. Если сборка не работает - попробовать dev режим"
echo "NODE_ENV=production PORT=3001 npm run dev &"
echo ""

echo "# B. Проверить права доступа"
echo "chown -R root:root /var/www/fonana"
echo "chmod -R 755 /var/www/fonana"
echo ""

echo "# C. Очистить npm кеш"
echo "npm cache clean --force"
echo "rm -rf node_modules package-lock.json"
echo "npm install"
echo ""

echo "=== ПРОВЕРКА РЕЗУЛЬТАТА ==="
echo "curl -s https://fonana.me | head -20" 