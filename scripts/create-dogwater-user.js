const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function createDogwaterUser() {
  console.log('=== –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è dogwater ===\n')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existing = await prisma.user.findFirst({
      where: {
        nickname: {
          equals: 'dogwater',
          mode: 'insensitive'
        }
      }
    })

    if (existing) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:')
      console.log(`   Nickname: ${existing.nickname}`)
      console.log(`   ID: ${existing.id}`)
      return
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const dogwater = await prisma.user.create({
      data: {
        nickname: 'dogwater',
        fullName: 'Dog Water',
        wallet: 'DUxkXhMWuo76ofUMtFRZtL8zmVqQnb8twLeB5NcaM4cG', // –¢–æ—Ç –∂–µ wallet —á—Ç–æ –∏ —É Dogwater –∏–∑ –∞–¥–º–∏–Ω-—Å–ø–∏—Å–∫–∞
        avatar: '/avatars/default-avatar.png',
        bio: 'Test user for referral system',
        isCreator: true,
        isVerified: true,
        followersCount: 0,
        postsCount: 0
      }
    })

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:')
    console.log(`   ID: ${dogwater.id}`)
    console.log(`   Nickname: ${dogwater.nickname}`)
    console.log(`   Full Name: ${dogwater.fullName}`)
    console.log(`   Wallet: ${dogwater.wallet}`)
    console.log('\nüîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://fonana.me/dogwater')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

createDogwaterUser().catch(console.error) 