const { Connection, PublicKey } = require('@solana/web3.js')

const RPC_URL = 'https://tame-smart-panorama.solana-mainnet.quiknode.pro/0e70fc875702b126bf8b93cdcd626680e9c48894/'
const ACCOUNT_TO_CHECK = 'DUxkXhMWuo76ofUMtFRZtL8zmVqQnb8twLeB5NcaM4cG'

async function checkAccount() {
  const connection = new Connection(RPC_URL, 'confirmed')
  const pubkey = new PublicKey(ACCOUNT_TO_CHECK)
  
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞: ${ACCOUNT_TO_CHECK}`)
  console.log('')
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
    const accountInfo = await connection.getAccountInfo(pubkey)
    
    if (accountInfo) {
      console.log('‚úÖ –ê–∫–∫–∞—É–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
      console.log(`   –ë–∞–ª–∞–Ω—Å: ${accountInfo.lamports / 1e9} SOL`)
      console.log(`   –í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ–≥—Ä–∞–º–º—ã: ${accountInfo.owner.toBase58()}`)
      console.log(`   Executable: ${accountInfo.executable}`)
      console.log(`   –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ${accountInfo.data.length} –±–∞–π—Ç`)
    } else {
      console.log('‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (getAccountInfo –≤–µ—Ä–Ω—É–ª null)')
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –Ω–∞–ø—Ä—è–º—É—é
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–ø—Ä—è–º—É—é:')
    const balance = await connection.getBalance(pubkey)
    console.log(`   –ë–∞–ª–∞–Ω—Å: ${balance / 1e9} SOL (${balance} lamports)`)
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ä–µ–Ω—Ç—É
    const minRent = await connection.getMinimumBalanceForRentExemption(0)
    console.log(`\nüí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–Ω—Ç–∞: ${minRent / 1e9} SOL`)
    
    if (balance >= minRent) {
      console.log('   ‚úÖ –ë–∞–ª–∞–Ω—Å –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –¥–ª—è —Ä–µ–Ω—Ç—ã')
    } else {
      console.log('   ‚ùå –ë–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ä–µ–Ω—Ç—ã')
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã–µ RPC
    console.log('\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π RPC:')
    const publicConnection = new Connection('https://api.mainnet-beta.solana.com', 'confirmed')
    const publicAccountInfo = await publicConnection.getAccountInfo(pubkey)
    
    if (publicAccountInfo) {
      console.log('   ‚úÖ –ê–∫–∫–∞—É–Ω—Ç –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π RPC')
    } else {
      console.log('   ‚ùå –ê–∫–∫–∞—É–Ω—Ç –ù–ï –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π RPC')
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  }
}

checkAccount() 