const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function fixMissingTransaction() {
  try {
    console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–∞ 0.36 SOL...\n');
    
    // –ù–∞–π–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const dogwater = await prisma.user.findFirst({ 
      where: { nickname: 'Dogwater' }
    });
    
    const vizer36 = await prisma.user.findFirst({ 
      where: { nickname: 'vizer36' }
    });
    
    if (!dogwater || !vizer36) {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }
    
    console.log('‚úÖ Dogwater:', dogwater.wallet);
    console.log('‚úÖ vizer36:', vizer36.wallet);
    
    // –ù–∞–π–¥–µ–º VIP –ø–æ–¥–ø–∏—Å–∫—É
    const subscription = await prisma.subscription.findUnique({
      where: {
        userId_creatorId: {
          userId: dogwater.id,
          creatorId: vizer36.id
        }
      }
    });
    
    if (!subscription) {
      console.error('‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log('\nüìã –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞:');
    console.log('- –ü–ª–∞–Ω:', subscription.plan);
    console.log('- –¶–µ–Ω–∞ –≤ –ø–æ–¥–ø–∏—Å–∫–µ:', subscription.price, 'SOL');
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
    const transaction = await prisma.transaction.create({
      data: {
        subscriptionId: subscription.id,
        txSignature: `missing_tx_0.36_sol_${Date.now()}`,
        fromWallet: dogwater.wallet,
        toWallet: vizer36.wallet,
        amount: 0.36,  // –†–µ–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Solscan
        currency: 'SOL',
        type: 'SUBSCRIPTION',
        status: 'CONFIRMED',
        platformFee: 0.036,  // 10% –æ—Ç 0.36
        creatorAmount: 0.324, // 90% –æ—Ç 0.36
        confirmedAt: new Date(),
        metadata: {
          plan: 'VIP',
          creatorId: vizer36.id,
          originalPrice: 0.40,  // –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å –≤ UI
          actualPrice: 0.36,    // –†–µ–∞–ª—å–Ω–∞—è –æ–ø–ª–∞—á–µ–Ω–Ω–∞—è —Å—É–º–º–∞
          expectedPrice: 0.35,  // –ù–æ–≤–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞
          note: 'Transaction was missing from database, added manually based on Solscan data',
          issue: 'UI showed old VIP price 0.40 instead of new price 0.35, user paid 0.36'
        }
      }
    });
    
    console.log('\n‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', transaction.id);
    console.log('- –°—É–º–º–∞:', transaction.amount, 'SOL');
    console.log('- –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:', transaction.platformFee, 'SOL');
    console.log('- –°—É–º–º–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—é:', transaction.creatorAmount, 'SOL');
    
    console.log('\nüí° –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã:');
    console.log('1. –í UI –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å —Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ VIP: 0.40 SOL');
    console.log('2. –ù–æ–≤–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–µ–Ω–∞ VIP: 0.35 SOL');
    console.log('3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–ª–∞—Ç–∏–ª: 0.36 SOL');
    console.log('4. –í–æ–∑–º–æ–∂–Ω–æ, –±—ã–ª–∞ —á–∞—Å—Ç–∏—á–Ω–∞—è —Å–∫–∏–¥–∫–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è');
    console.log('5. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –±—ã–ª–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –ë–î –∏–∑-–∑–∞ –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å—É–º–º—ã');
    
    console.log('\nüîß –ß—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:');
    console.log('1. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ SubscribeModal –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã');
    console.log('2. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ null –∑–Ω–∞—á–µ–Ω–∏—è —Ü–µ–Ω');
    console.log('3. –£–ª—É—á—à–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    console.log('4. –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixMissingTransaction(); 