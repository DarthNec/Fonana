const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function testSubscriptionDisplayFlow() {
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–¶–ï–°–°–ê –ü–û–î–ü–ò–°–ö–ò –ò –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø\n')
  
  try {
    // –ù–∞–π–¥–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testUser = await prisma.user.findFirst({
      where: { nickname: 'testuser' }
    })
    
    const testCreator = await prisma.user.findFirst({
      where: { nickname: 'testcreator', isCreator: true }
    })
    
    if (!testUser || !testCreator) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      console.log('–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏: testuser –∏ testcreator')
      return
    }
    
    console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã:`)
    console.log(`  User: ${testUser.nickname} (${testUser.id})`)
    console.log(`  Creator: ${testCreator.nickname} (${testCreator.id})`)
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É
    const currentSub = await prisma.subscription.findUnique({
      where: {
        userId_creatorId: {
          userId: testUser.id,
          creatorId: testCreator.id
        }
      }
    })
    
    if (currentSub) {
      console.log(`\nüìå –¢–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞:`)
      console.log(`  –ü–ª–∞–Ω: "${currentSub.plan}"`)
      console.log(`  –¶–µ–Ω–∞: ${currentSub.price} SOL`)
      console.log(`  –ê–∫—Ç–∏–≤–Ω–∞: ${currentSub.isActive}`)
      console.log(`  –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: ${currentSub.paymentStatus}`)
    } else {
      console.log('\nüìå –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç')
    }
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Premium –ø–æ–¥–ø–∏—Å–∫–∏
    console.log('\nüîÑ –°–ò–ú–£–õ–Ø–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø PREMIUM –ü–û–î–ü–ò–°–ö–ò:')
    
    // 1. –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –∑–∞–ø—Ä–æ—Å –∏–∑ SubscribeModal
    const requestBody = {
      creatorId: testCreator.id,
      plan: 'Premium', // –° –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã!
      price: 0.15,
      signature: 'test-signature-' + Date.now(),
      hasReferrer: false,
      distribution: {
        creatorWallet: testCreator.wallet || testCreator.solanaWallet,
        creatorAmount: 0.135,
        platformAmount: 0.015,
        referrerAmount: 0,
        referrerWallet: null
      }
    }
    
    console.log('–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:')
    console.log(JSON.stringify(requestBody, null, 2))
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—Å—Ç–∞–º
    console.log('\n\nüîê –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê –ö –ü–û–°–¢–ê–ú:')
    
    const creatorPosts = await prisma.post.findMany({
      where: {
        creatorId: testCreator.id,
        isLocked: true,
        minSubscriptionTier: { not: null }
      },
      select: {
        id: true,
        title: true,
        minSubscriptionTier: true
      }
    })
    
    if (creatorPosts.length === 0) {
      console.log('–£ —Å–æ–∑–¥–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–æ —Ç–∏—Ä–∞–º')
    } else {
      const TIER_HIERARCHY = {
        'vip': 4,
        'premium': 3,
        'basic': 2,
        'free': 1
      }
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏
      const testPlans = ['Basic', 'Premium', 'VIP']
      
      for (const testPlan of testPlans) {
        console.log(`\nüìä –ï—Å–ª–∏ –ø–ª–∞–Ω = "${testPlan}":`)
        
        for (const post of creatorPosts) {
          const userLevel = TIER_HIERARCHY[testPlan.toLowerCase()] || 0
          const requiredLevel = TIER_HIERARCHY[post.minSubscriptionTier.toLowerCase()] || 0
          const hasAccess = userLevel >= requiredLevel
          
          console.log(`  "${post.title}" (—Ç—Ä–µ–±—É–µ—Ç ${post.minSubscriptionTier}): ${hasAccess ? '‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω' : '‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`)
        }
      }
    }
    
    // 3. –ü—Ä–æ–±–ª–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('\n\nüñºÔ∏è  –ü–†–û–ë–õ–ï–ú–ê –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –í UI:')
    console.log('–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–æ–∑–¥–∞—Ç–µ–ª—è (creator/[id]/page.tsx):')
    console.log('- –°—Ç—Ä–æ–∫–∏ 551, 565, 594, 608, 634, 648 –∏—Å–ø–æ–ª—å–∑—É—é—Ç .toLowerCase() –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è')
    console.log('- –ù–æ —Å—Ç—Ä–æ–∫–∞ 396 –∏ 507 –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç –ø–ª–∞–Ω –ë–ï–ó –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É')
    console.log('- –ü–æ—ç—Ç–æ–º—É –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è "Premium tier" –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
    console.log('\n–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∞–ø–≥—Ä–µ–π–¥–∞')
    
    // 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    console.log('\n\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:')
    console.log('1. –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –≤–µ–∑–¥–µ')
    console.log('2. –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .toLowerCase() –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏')
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –≥–¥–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏')
    console.log('4. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ UI –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
    console.log('5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ currentSubscriptionTier –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testSubscriptionDisplayFlow() 