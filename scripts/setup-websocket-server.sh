#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WebSocket —Å–µ—Ä–≤–µ—Ä–∞ Fonana
# Usage: ./scripts/setup-websocket-server.sh

set -e

echo "üöÄ Setting up Fonana WebSocket Server..."
echo "========================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "package.json" ] || [ ! -d "websocket-server" ]; then
    echo "‚ùå Error: Run this script from the Fonana project root directory"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ùå Error: .env file not found. Please create it first."
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é WebSocket —Å–µ—Ä–≤–µ—Ä–∞
cd websocket-server

echo "üì¶ Installing dependencies..."
npm install

echo ""
echo "üîç Checking environment variables..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if grep -q "DATABASE_URL" ../.env; then
    echo "‚úÖ DATABASE_URL found"
else
    echo "‚ùå DATABASE_URL not found in .env"
    exit 1
fi

if grep -q "NEXTAUTH_SECRET" ../.env; then
    echo "‚úÖ NEXTAUTH_SECRET found"
else
    echo "‚ùå NEXTAUTH_SECRET not found in .env"
    exit 1
fi

# –î–æ–±–∞–≤–ª—è–µ–º WS_PORT –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if ! grep -q "WS_PORT" ../.env; then
    echo "‚ûï Adding WS_PORT=3002 to .env"
    echo "WS_PORT=3002" >> ../.env
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if grep -q "REDIS_URL" ../.env; then
    echo "‚úÖ REDIS_URL found (optional)"
else
    echo "‚ö†Ô∏è  REDIS_URL not found - running in single server mode"
fi

echo ""
echo "üß™ Running test connection..."

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π user ID
TEST_USER_ID=$(cd .. && npx prisma db execute --stdin <<< "SELECT id FROM \"User\" LIMIT 1;" 2>/dev/null | grep -E '^[a-zA-Z0-9]{20,}' | head -1 || echo "")

if [ -n "$TEST_USER_ID" ]; then
    echo "üìù Found test user: $TEST_USER_ID"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º ID
    sed -i.bak "s/const TEST_USER_ID = '.*'/const TEST_USER_ID = '$TEST_USER_ID'/" test-client.js
    rm test-client.js.bak
else
    echo "‚ö†Ô∏è  No users found in database. Using default test ID."
fi

echo ""
echo "üîß Configuration complete!"
echo ""
echo "üìã Next steps:"
echo "1. Start the WebSocket server:"
echo "   cd websocket-server && npm start"
echo ""
echo "2. Or run with PM2 (production):"
echo "   pm2 start ecosystem.config.js"
echo ""
echo "3. Test the connection:"
echo "   cd websocket-server && node test-client.js"
echo ""
echo "4. Update Nginx configuration to add:"
echo "   location /ws {"
echo "       proxy_pass http://localhost:3002;"
echo "       proxy_http_version 1.1;"
echo "       proxy_set_header Upgrade \$http_upgrade;"
echo "       proxy_set_header Connection \"upgrade\";"
echo "   }"
echo ""
echo "‚úÖ WebSocket server setup complete!" 