const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function checkRussianBio() {
  try {
    console.log('üîç Checking users with Russian bio...\n')
    
    // Find users with Russian bio pattern
    const usersWithRussianBio = await prisma.user.findMany({
      where: {
        OR: [
          { bio: { contains: '–Ø Web3 –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—å' } },
          { bio: { contains: '—Å–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç' } },
          { bio: { contains: '–∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—å' } },
          { bio: { contains: '—Å–æ–∑–¥–∞—Ç–µ–ª—å' } }
        ]
      },
      select: {
        id: true,
        nickname: true,
        bio: true,
        createdAt: true
      }
    })
    
    console.log(`Found ${usersWithRussianBio.length} users with Russian bio:\n`)
    
    usersWithRussianBio.forEach(user => {
      console.log(`üë§ ${user.nickname}`)
      console.log(`   Bio: ${user.bio}`)
      console.log(`   Created: ${user.createdAt.toLocaleDateString()}\n`)
    })
    
    // Check default bio pattern
    console.log('üìù Checking for default bio pattern...')
    const defaultBioPattern = '–Ø Web3 –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Fonana'
    
    const usersWithDefaultBio = await prisma.user.findMany({
      where: { bio: defaultBioPattern },
      select: { id: true, nickname: true }
    })
    
    if (usersWithDefaultBio.length > 0) {
      console.log(`\n‚ö†Ô∏è  Found ${usersWithDefaultBio.length} users with default Russian bio`)
      console.log('These users need bio update to English')
    }
    
  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkRussianBio() 