const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function testSellablePosts() {
  try {
    console.log('üöÄ Testing sellable posts...')
    
    // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let testUser = await prisma.user.findFirst({
      where: {
        OR: [
          { nickname: 'Dogwater' },
          { nickname: 'TestCreator' }
        ]
      }
    })

    if (!testUser) {
      // –ù–∞—Ö–æ–¥–∏–º –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      testUser = await prisma.user.findFirst()
      
      if (!testUser) {
        console.log('‚ùå No users found in database')
        console.log('üìù Creating test user...')
        
        testUser = await prisma.user.create({
          data: {
            wallet: 'TestWallet' + Date.now(),
            solanaWallet: 'TestWallet' + Date.now(),
            nickname: 'TestCreator',
            fullName: 'Test Creator',
            bio: 'Test creator for sellable posts',
            isCreator: true
          }
        })
      }
    }

    console.log(`‚úÖ Using user: ${testUser.nickname || testUser.wallet} (${testUser.id})`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã–µ –ø–æ—Å—Ç—ã
    const existingSellablePosts = await prisma.post.count({
      where: {
        creatorId: testUser.id,
        isSellable: true
      }
    })

    if (existingSellablePosts > 0) {
      console.log(`‚ÑπÔ∏è  User already has ${existingSellablePosts} sellable posts`)
    }

    // –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω–æ–π
    const fixedPricePost = await prisma.post.create({
      data: {
        creatorId: testUser.id,
        title: 'üé® –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è NFT –∫–æ–ª–ª–µ–∫—Ü–∏—è',
        content: '–£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞. –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø—Ä–∞–≤–æ –≤–ª–∞–¥–µ–Ω–∏—è —ç—Ç–∏–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º!',
        type: 'image',
        category: 'Art',
        thumbnail: '/posts/images/nft-collection.jpg',
        mediaUrl: '/posts/images/nft-collection.jpg',
        isLocked: false,
        isSellable: true,
        sellType: 'FIXED_PRICE',
        price: 5.0,
        currency: 'SOL',
        auctionStatus: 'DRAFT'
      }
    })

    console.log(`‚úÖ Created fixed price post: "${fixedPricePost.title}" (${fixedPricePost.id})`)

    // –°–æ–∑–¥–∞–µ–º –∞—É–∫—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Å—Ç
    const auctionPost = await prisma.post.create({
      data: {
        creatorId: testUser.id,
        title: 'üèÜ –†–µ–¥–∫–∏–π –∏–≥—Ä–æ–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç',
        content: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º–µ—á –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –∏–≥—Ä—ã. –ê—É–∫—Ü–∏–æ–Ω –ø—Ä–æ–¥–ª–∏—Ç—Å—è 24 —á–∞—Å–∞!',
        type: 'image',
        category: 'Gaming',
        thumbnail: '/posts/images/legendary-sword.jpg',
        mediaUrl: '/posts/images/legendary-sword.jpg',
        isLocked: false,
        isSellable: true,
        sellType: 'AUCTION',
        price: 0, // –î–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞ —Ü–µ–Ω–∞ –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
        auctionStartPrice: 1.0,
        auctionStepPrice: 0.5,
        auctionDepositAmount: 0.01,
        auctionStartAt: new Date(),
        auctionEndAt: new Date(Date.now() + 24 * 60 * 60 * 1000), // +24 —á–∞—Å–∞
        currency: 'SOL',
        auctionStatus: 'ACTIVE'
      }
    })

    console.log(`‚úÖ Created auction post: "${auctionPost.title}" (${auctionPost.id})`)
    console.log(`   - Start price: ${auctionPost.auctionStartPrice} SOL`)
    console.log(`   - Step price: ${auctionPost.auctionStepPrice} SOL`)
    console.log(`   - Ends at: ${auctionPost.auctionEndAt}`)

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const buyer = await prisma.user.findFirst({
      where: {
        NOT: { id: testUser.id }
      }
    })

    if (buyer) {
      const soldPost = await prisma.post.create({
        data: {
          creatorId: testUser.id,
          title: '‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ (–ü–†–û–î–ê–ù–û)',
          content: '–≠—Ç–∞ —Ä–µ–¥–∫–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —É–∂–µ –Ω–∞—à–ª–∞ —Å–≤–æ–µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞!',
          type: 'image',
          category: 'NFT',
          thumbnail: '/posts/images/collectible-card.jpg',
          mediaUrl: '/posts/images/collectible-card.jpg',
          isLocked: false,
          isSellable: true,
          sellType: 'FIXED_PRICE',
          price: 3.0,
          currency: 'SOL',
          auctionStatus: 'SOLD',
          soldAt: new Date(),
          soldToId: buyer.id,
          soldPrice: 3.0
        }
      })

      console.log(`‚úÖ Created sold post: "${soldPost.title}" (${soldPost.id})`)
      console.log(`   - Sold to: ${buyer.nickname || buyer.wallet}`)
      console.log(`   - Sold for: ${soldPost.soldPrice} SOL`)
    } else {
      console.log('‚ÑπÔ∏è  No other users found for sold post demo')
    }

    console.log('\n‚úÖ Test sellable posts created successfully!')
    console.log('üëâ Check the feed at http://localhost:3001/feed to see the new sellable posts')

  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testSellablePosts().catch(console.error) 