const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function checkDogwaterSettings() {
  try {
    console.log('üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Dogwater...\n')
    
    const dogwater = await prisma.user.findFirst({
      where: { nickname: 'Dogwater' },
      include: {
        tierSettings: true
      }
    })
    
    if (!dogwater) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Dogwater –Ω–µ –Ω–∞–π–¥–µ–Ω')
      console.log('\nüìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ñ–ª–∞–≥–æ–º isCreator:')
      
      const creators = await prisma.user.findMany({
        where: { isCreator: true },
        select: {
          id: true,
          nickname: true,
          wallet: true,
          isCreator: true
        }
      })
      
      creators.forEach(creator => {
        console.log(`- ${creator.nickname || '–ë–µ–∑ –Ω–∏–∫–∞'} (${creator.id}) - wallet: ${creator.wallet?.slice(0, 10)}...`)
      })
      
      return
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:')
    console.log(`- ID: ${dogwater.id}`)
    console.log(`- Nickname: ${dogwater.nickname}`)
    console.log(`- Is Creator: ${dogwater.isCreator}`)
    console.log(`- Wallet: ${dogwater.wallet}`)
    
    if (dogwater.tierSettings) {
      console.log('\nüìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏—Ä–æ–≤:')
      console.log('\nBasic Tier:')
      console.log(JSON.stringify(dogwater.tierSettings.basicTier, null, 2))
      console.log('\nPremium Tier:')
      console.log(JSON.stringify(dogwater.tierSettings.premiumTier, null, 2))
      console.log('\nVIP Tier:')
      console.log(JSON.stringify(dogwater.tierSettings.vipTier, null, 2))
    } else {
      console.log('\n‚ö†Ô∏è  –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–∏—Ä–æ–≤')
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–∏—Ä–æ–≤
    const totalSettings = await prisma.creatorTierSettings.count()
    console.log(`\nüìà –í—Å–µ–≥–æ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–∏—Ä–æ–≤ –≤ –ë–î: ${totalSettings}`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

checkDogwaterSettings() 