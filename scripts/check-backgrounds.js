const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function checkBackgrounds() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ñ–æ–Ω–∞–º
    const totalUsers = await prisma.user.count()
    const usersWithBackground = await prisma.user.count({
      where: {
        AND: [
          { backgroundImage: { not: null } },
          { backgroundImage: { not: '' } }
        ]
      }
    })
    const usersWithoutBackground = totalUsers - usersWithBackground
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:')
    console.log(`   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}`)
    console.log(`   –° —Ñ–æ–Ω–æ–º: ${usersWithBackground}`)
    console.log(`   –ë–µ–∑ —Ñ–æ–Ω–∞: ${usersWithoutBackground}`)
    console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç –±–µ–∑ —Ñ–æ–Ω–∞: ${((usersWithoutBackground / totalUsers) * 100).toFixed(1)}%`)
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ñ–æ–Ω–∞
    console.log('\nüë• –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ —Ñ–æ–Ω–∞:')
    const examples = await prisma.user.findMany({
      where: {
        OR: [
          { backgroundImage: null },
          { backgroundImage: '' }
        ]
      },
      take: 10,
      select: {
        id: true,
        nickname: true,
        email: true,
        name: true,
        backgroundImage: true
      }
    })
    
    examples.forEach(user => {
      console.log(`   - ${user.nickname || user.name || user.email} (ID: ${user.id})`)
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkBackgrounds() 