const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkPriceDiscrepancy() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ —Ü–µ–Ω –∏ –∏—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–∞ 0.36 SOL...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á–µ–π –∞–¥—Ä–µ—Å Cm1VWYChpnVgAGvzBvFtfPHqcyMgMqFXy9C9iqFqpHk3
    const walletOwner = await prisma.user.findFirst({
      where: {
        OR: [
          { wallet: 'Cm1VWYChpnVgAGvzBvFtfPHqcyMgMqFXy9C9iqFqpHk3' },
          { solanaWallet: 'Cm1VWYChpnVgAGvzBvFtfPHqcyMgMqFXy9C9iqFqpHk3' }
        ]
      }
    });
    
    console.log('üí≥ –ê–¥—Ä–µ—Å Cm1VWYChpnVgAGvzBvFtfPHqcyMgMqFXy9C9iqFqpHk3 –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç:');
    if (walletOwner) {
      console.log('- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', walletOwner.nickname);
      console.log('- ID:', walletOwner.id);
      console.log('- isCreator:', walletOwner.isCreator);
    } else {
      console.log('- ‚ùå –í–ª–∞–¥–µ–ª–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ');
    }
    
    // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å –æ—Ç Dogwater
    const dogwater = await prisma.user.findFirst({ 
      where: { nickname: 'Dogwater' }
    });
    
    console.log('\nüîç –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç Dogwater –Ω–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å:');
    
    const transactions = await prisma.transaction.findMany({
      where: {
        fromWallet: dogwater.wallet,
        toWallet: 'Cm1VWYChpnVgAGvzBvFtfPHqcyMgMqFXy9C9iqFqpHk3'
      },
      orderBy: { createdAt: 'desc' }
    });
    
    console.log(`\n–ù–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);
    
    transactions.forEach((tx, index) => {
      console.log(`\n${index + 1}. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ${tx.id}:`);
      console.log('   - –°—É–º–º–∞:', tx.amount, 'SOL');
      console.log('   - –¢–∏–ø:', tx.type);
      console.log('   - –°—Ç–∞—Ç—É—Å:', tx.status);
      console.log('   - –î–∞—Ç–∞:', tx.createdAt);
      console.log('   - –ü–æ–¥–ø–∏—Å—å:', tx.txSignature);
      console.log('   - –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:', tx.platformFee);
      console.log('   - –°—É–º–º–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—é:', tx.creatorAmount);
      
      if (tx.metadata) {
        console.log('   - –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:', JSON.stringify(tx.metadata, null, 2));
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏—Ä–æ–≤ vizer36
    if (walletOwner) {
      console.log('\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∏—Ä–æ–≤ —Å–æ–∑–¥–∞—Ç–µ–ª—è:');
      
      const tierSettings = await prisma.creatorTierSettings.findUnique({
        where: { creatorId: walletOwner.id }
      });
      
      if (tierSettings) {
        console.log('‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–π–¥–µ–Ω—ã:');
        if (tierSettings.basicTier) {
          console.log('- Basic:', JSON.parse(tierSettings.basicTier));
        }
        if (tierSettings.premiumTier) {
          console.log('- Premium:', JSON.parse(tierSettings.premiumTier));
        }
        if (tierSettings.vipTier) {
          console.log('- VIP:', JSON.parse(tierSettings.vipTier));
        }
      } else {
        console.log('‚ùå –ö–∞—Å—Ç–æ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ü–µ–Ω—ã:');
        console.log('- Basic: 0.05 SOL');
        console.log('- Premium: 0.15 SOL');
        console.log('- VIP: 0.35 SOL');
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Flash Sales
    console.log('\nüî• –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ Flash Sales –¥–ª—è vizer36:');
    
    const flashSales = await prisma.flashSale.findMany({
      where: {
        creatorId: walletOwner?.id,
        isActive: true,
        endAt: { gte: new Date() }
      }
    });
    
    if (flashSales.length > 0) {
      flashSales.forEach((sale, index) => {
        console.log(`\n${index + 1}. Flash Sale ${sale.id}:`);
        console.log('   - –ü–ª–∞–Ω:', sale.subscriptionPlan);
        console.log('   - –°–∫–∏–¥–∫–∞:', sale.discount, '%');
        console.log('   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:', sale.usedCount, '/', sale.maxRedemptions || 'unlimited');
        console.log('   - –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ:', sale.endAt);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π
        if (sale.subscriptionPlan === 'vip') {
          const originalPrice = 0.35;
          const discountedPrice = originalPrice * (1 - sale.discount / 100);
          console.log('   - –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ VIP:', originalPrice, 'SOL');
          console.log('   - –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π:', discountedPrice.toFixed(2), 'SOL');
          
          if (Math.abs(discountedPrice - 0.36) < 0.01) {
            console.log('   - ‚ö†Ô∏è –í–û–ó–ú–û–ñ–ù–û–ï –°–û–í–ü–ê–î–ï–ù–ò–ï! –¶–µ–Ω–∞ –±–ª–∏–∑–∫–∞ –∫ 0.36 SOL');
          }
        }
      });
    } else {
      console.log('- –ê–∫—Ç–∏–≤–Ω—ã—Ö Flash Sales –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è —Ü–µ–Ω:');
    console.log('1. –ë—ã–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞ Flash Sale —Å–æ —Å–∫–∏–¥–∫–æ–π');
    console.log('2. –í UI –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å —Å—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ 0.40 –≤–º–µ—Å—Ç–æ –Ω–æ–≤–æ–π 0.35');
    console.log('3. –î–æ–±–∞–≤–∏–ª–∞—Å—å –∫–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏ (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –¥–ª—è Solana)');
    console.log('4. –û—à–∏–±–∫–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å–∫–∏–¥–∫–∏');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkPriceDiscrepancy(); 