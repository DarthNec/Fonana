# HTTP server - редирект на HTTPS
server {
    listen 80;
    server_name fonana.me www.fonana.me;
    return 301 https://$server_name$request_uri;
}

# HTTPS server - основная конфигурация
server {
    listen 443 ssl http2;
    server_name fonana.me www.fonana.me;

    ssl_certificate /etc/letsencrypt/live/fonana.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/fonana.me/privkey.pem;
    
    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    
    # Increase client body size for file uploads
    client_max_body_size 50M;
    
    # Корневая директория для статических файлов
    root /var/www/fonana/current/public;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/javascript 
        application/xml+rss 
        application/json
        image/svg+xml;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Обслуживание загруженных аватаров напрямую из файловой системы
    location /avatars/ {
        alias /var/www/fonana/current/public/avatars/;
        try_files $uri =404;
        
        # Настройки кеширования для изображений
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
    
    # Обслуживание загруженных фонов напрямую из файловой системы
    location /backgrounds/ {
        alias /var/www/fonana/current/public/backgrounds/;
        try_files $uri =404;
        
        # Настройки кеширования для изображений
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
    
    # Обслуживание загруженных постов напрямую из файловой системы
    location /posts/ {
        alias /var/www/fonana/current/public/posts/;
        try_files $uri =404;
        
        # Настройки кеширования
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
    
    # Favicon и другие статические файлы в корне
    location = /favicon.ico {
        root /var/www/fonana/current/public;
        try_files $uri =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }
    
    location = /fonanaLogo1.png {
        root /var/www/fonana/current/public;
        try_files $uri =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }
    
    # Next.js static assets
    location /_next/static/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }
    
    # Next.js image optimization
    location /_next/image {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # API routes
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Main application (все остальные запросы)
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Error pages
    error_page 404 /404;
    error_page 500 502 503 504 /500;
}

# WebSocket configuration
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
} 