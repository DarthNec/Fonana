#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

SERVER="root@69.10.59.234"
SSH_PORT="43988"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${GREEN}üêò –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL –Ω–∞ —Å–µ—Ä–≤–µ—Ä Fonana${NC}"
echo -e "üìç –°–µ—Ä–≤–µ—Ä: $SERVER"
echo ""

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
ssh -p $SSH_PORT $SERVER 'bash -s' << 'EOF'
set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
export DEBIAN_FRONTEND=noninteractive

echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL 16...${NC}"

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π PostgreSQL
apt-get install -y wget ca-certificates
sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
apt-get update

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL
apt-get install -y postgresql-16 postgresql-contrib-16

echo -e "${GREEN}‚úÖ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL
echo -e "${YELLOW}–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL...${NC}"

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è 64GB RAM
cat >> /etc/postgresql/16/main/postgresql.conf << 'PGCONF'

# Fonana optimization (64GB RAM)
shared_buffers = 16GB
effective_cache_size = 48GB
maintenance_work_mem = 2GB
work_mem = 64MB
max_connections = 200
checkpoint_completion_target = 0.9
random_page_cost = 1.1
effective_io_concurrency = 200
PGCONF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PostgreSQL
systemctl restart postgresql

echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)

# –°–æ–∑–¥–∞–Ω–∏–µ –ë–î
sudo -u postgres psql << SQLEOF
CREATE DATABASE fonana;
CREATE USER fonana_user WITH ENCRYPTED PASSWORD '$DB_PASSWORD';
GRANT ALL PRIVILEGES ON DATABASE fonana TO fonana_user;
ALTER DATABASE fonana OWNER TO fonana_user;
SQLEOF

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ credentials
cat > /root/fonana-db-credentials.txt << CREDS
=== Fonana Database Credentials ===
Database: fonana
User: fonana_user
Password: $DB_PASSWORD
Host: localhost
Port: 5432

Connection string:
DATABASE_URL="postgresql://fonana_user:$DB_PASSWORD@localhost:5432/fonana?schema=public"
CREDS

chmod 600 /root/fonana-db-credentials.txt

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Fonana
cd /var/www/fonana
cp .env .env.backup-$(date +%Y%m%d-%H%M%S)
sed -i "s|DATABASE_URL=.*|DATABASE_URL=\"postgresql://fonana_user:$DB_PASSWORD@localhost:5432/fonana?schema=public\"|" .env

echo -e "${YELLOW}–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...${NC}"
npx prisma db push
npx prisma generate

echo -e "${YELLOW}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Fonana...${NC}"
systemctl restart fonana

echo -e "${GREEN}üéâ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
echo ""
echo "üìÑ Credentials: /root/fonana-db-credentials.txt"
echo ""
echo "PostgreSQL status:"
systemctl status postgresql --no-pager | head -5
echo ""
echo "Fonana status:"
systemctl status fonana --no-pager | head -5
EOF

echo ""
echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ!${NC}"
echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å credentials:"
echo "  ssh -p $SSH_PORT $SERVER 'cat /root/fonana-db-credentials.txt'" 