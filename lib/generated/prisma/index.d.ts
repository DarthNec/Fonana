
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Post
 * 
 */
export type Post = $Result.DefaultSelection<Prisma.$PostPayload>
/**
 * Model Tag
 * 
 */
export type Tag = $Result.DefaultSelection<Prisma.$TagPayload>
/**
 * Model PostTag
 * 
 */
export type PostTag = $Result.DefaultSelection<Prisma.$PostTagPayload>
/**
 * Model Comment
 * 
 */
export type Comment = $Result.DefaultSelection<Prisma.$CommentPayload>
/**
 * Model Like
 * 
 */
export type Like = $Result.DefaultSelection<Prisma.$LikePayload>
/**
 * Model Subscription
 * 
 */
export type Subscription = $Result.DefaultSelection<Prisma.$SubscriptionPayload>
/**
 * Model Follow
 * 
 */
export type Follow = $Result.DefaultSelection<Prisma.$FollowPayload>
/**
 * Model Transaction
 * 
 */
export type Transaction = $Result.DefaultSelection<Prisma.$TransactionPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model PostPurchase
 * 
 */
export type PostPurchase = $Result.DefaultSelection<Prisma.$PostPurchasePayload>
/**
 * Model UserSettings
 * 
 */
export type UserSettings = $Result.DefaultSelection<Prisma.$UserSettingsPayload>
/**
 * Model CreatorTierSettings
 * 
 */
export type CreatorTierSettings = $Result.DefaultSelection<Prisma.$CreatorTierSettingsPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model AuctionDeposit
 * 
 */
export type AuctionDeposit = $Result.DefaultSelection<Prisma.$AuctionDepositPayload>
/**
 * Model AuctionBid
 * 
 */
export type AuctionBid = $Result.DefaultSelection<Prisma.$AuctionBidPayload>
/**
 * Model AuctionPayment
 * 
 */
export type AuctionPayment = $Result.DefaultSelection<Prisma.$AuctionPaymentPayload>
/**
 * Model FlashSale
 * 
 */
export type FlashSale = $Result.DefaultSelection<Prisma.$FlashSalePayload>
/**
 * Model FlashSaleRedemption
 * 
 */
export type FlashSaleRedemption = $Result.DefaultSelection<Prisma.$FlashSaleRedemptionPayload>
/**
 * Model Conversation
 * 
 */
export type Conversation = $Result.DefaultSelection<Prisma.$ConversationPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model MessagePurchase
 * 
 */
export type MessagePurchase = $Result.DefaultSelection<Prisma.$MessagePurchasePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const SellType: {
  FIXED_PRICE: 'FIXED_PRICE',
  AUCTION: 'AUCTION'
};

export type SellType = (typeof SellType)[keyof typeof SellType]


export const AuctionStatus: {
  DRAFT: 'DRAFT',
  SCHEDULED: 'SCHEDULED',
  ACTIVE: 'ACTIVE',
  ENDED: 'ENDED',
  SOLD: 'SOLD',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED'
};

export type AuctionStatus = (typeof AuctionStatus)[keyof typeof AuctionStatus]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const TransactionType: {
  SUBSCRIPTION: 'SUBSCRIPTION',
  POST_PURCHASE: 'POST_PURCHASE',
  PLATFORM_FEE: 'PLATFORM_FEE',
  REFERRER_FEE: 'REFERRER_FEE',
  WITHDRAWAL: 'WITHDRAWAL',
  REFUND: 'REFUND',
  MESSAGE_PURCHASE: 'MESSAGE_PURCHASE',
  TIP: 'TIP'
};

export type TransactionType = (typeof TransactionType)[keyof typeof TransactionType]


export const TransactionStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  FAILED: 'FAILED',
  EXPIRED: 'EXPIRED'
};

export type TransactionStatus = (typeof TransactionStatus)[keyof typeof TransactionStatus]


export const NotificationType: {
  LIKE_POST: 'LIKE_POST',
  LIKE_COMMENT: 'LIKE_COMMENT',
  COMMENT_POST: 'COMMENT_POST',
  REPLY_COMMENT: 'REPLY_COMMENT',
  NEW_SUBSCRIBER: 'NEW_SUBSCRIBER',
  POST_PURCHASE: 'POST_PURCHASE',
  NEW_POST_FROM_SUBSCRIPTION: 'NEW_POST_FROM_SUBSCRIPTION',
  AUCTION_NEW_BID: 'AUCTION_NEW_BID',
  AUCTION_WON: 'AUCTION_WON',
  AUCTION_PAYMENT_REMINDER: 'AUCTION_PAYMENT_REMINDER',
  AUCTION_DEPOSIT_REFUNDED: 'AUCTION_DEPOSIT_REFUNDED',
  TIP_RECEIVED: 'TIP_RECEIVED',
  NEW_MESSAGE: 'NEW_MESSAGE'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]


export const DepositStatus: {
  HELD: 'HELD',
  REFUNDED: 'REFUNDED',
  FORFEITED: 'FORFEITED'
};

export type DepositStatus = (typeof DepositStatus)[keyof typeof DepositStatus]


export const AuctionPaymentStatus: {
  PENDING: 'PENDING',
  PAID: 'PAID',
  CONFIRMED: 'CONFIRMED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

export type AuctionPaymentStatus = (typeof AuctionPaymentStatus)[keyof typeof AuctionPaymentStatus]

}

export type SellType = $Enums.SellType

export const SellType: typeof $Enums.SellType

export type AuctionStatus = $Enums.AuctionStatus

export const AuctionStatus: typeof $Enums.AuctionStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type TransactionType = $Enums.TransactionType

export const TransactionType: typeof $Enums.TransactionType

export type TransactionStatus = $Enums.TransactionStatus

export const TransactionStatus: typeof $Enums.TransactionStatus

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

export type DepositStatus = $Enums.DepositStatus

export const DepositStatus: typeof $Enums.DepositStatus

export type AuctionPaymentStatus = $Enums.AuctionPaymentStatus

export const AuctionPaymentStatus: typeof $Enums.AuctionPaymentStatus

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<ExtArgs>;

  /**
   * `prisma.tag`: Exposes CRUD operations for the **Tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tag.findMany()
    * ```
    */
  get tag(): Prisma.TagDelegate<ExtArgs>;

  /**
   * `prisma.postTag`: Exposes CRUD operations for the **PostTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PostTags
    * const postTags = await prisma.postTag.findMany()
    * ```
    */
  get postTag(): Prisma.PostTagDelegate<ExtArgs>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **Comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.CommentDelegate<ExtArgs>;

  /**
   * `prisma.like`: Exposes CRUD operations for the **Like** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Likes
    * const likes = await prisma.like.findMany()
    * ```
    */
  get like(): Prisma.LikeDelegate<ExtArgs>;

  /**
   * `prisma.subscription`: Exposes CRUD operations for the **Subscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscription.findMany()
    * ```
    */
  get subscription(): Prisma.SubscriptionDelegate<ExtArgs>;

  /**
   * `prisma.follow`: Exposes CRUD operations for the **Follow** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Follows
    * const follows = await prisma.follow.findMany()
    * ```
    */
  get follow(): Prisma.FollowDelegate<ExtArgs>;

  /**
   * `prisma.transaction`: Exposes CRUD operations for the **Transaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transactions
    * const transactions = await prisma.transaction.findMany()
    * ```
    */
  get transaction(): Prisma.TransactionDelegate<ExtArgs>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs>;

  /**
   * `prisma.postPurchase`: Exposes CRUD operations for the **PostPurchase** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PostPurchases
    * const postPurchases = await prisma.postPurchase.findMany()
    * ```
    */
  get postPurchase(): Prisma.PostPurchaseDelegate<ExtArgs>;

  /**
   * `prisma.userSettings`: Exposes CRUD operations for the **UserSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSettings
    * const userSettings = await prisma.userSettings.findMany()
    * ```
    */
  get userSettings(): Prisma.UserSettingsDelegate<ExtArgs>;

  /**
   * `prisma.creatorTierSettings`: Exposes CRUD operations for the **CreatorTierSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CreatorTierSettings
    * const creatorTierSettings = await prisma.creatorTierSettings.findMany()
    * ```
    */
  get creatorTierSettings(): Prisma.CreatorTierSettingsDelegate<ExtArgs>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs>;

  /**
   * `prisma.auctionDeposit`: Exposes CRUD operations for the **AuctionDeposit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuctionDeposits
    * const auctionDeposits = await prisma.auctionDeposit.findMany()
    * ```
    */
  get auctionDeposit(): Prisma.AuctionDepositDelegate<ExtArgs>;

  /**
   * `prisma.auctionBid`: Exposes CRUD operations for the **AuctionBid** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuctionBids
    * const auctionBids = await prisma.auctionBid.findMany()
    * ```
    */
  get auctionBid(): Prisma.AuctionBidDelegate<ExtArgs>;

  /**
   * `prisma.auctionPayment`: Exposes CRUD operations for the **AuctionPayment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuctionPayments
    * const auctionPayments = await prisma.auctionPayment.findMany()
    * ```
    */
  get auctionPayment(): Prisma.AuctionPaymentDelegate<ExtArgs>;

  /**
   * `prisma.flashSale`: Exposes CRUD operations for the **FlashSale** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FlashSales
    * const flashSales = await prisma.flashSale.findMany()
    * ```
    */
  get flashSale(): Prisma.FlashSaleDelegate<ExtArgs>;

  /**
   * `prisma.flashSaleRedemption`: Exposes CRUD operations for the **FlashSaleRedemption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FlashSaleRedemptions
    * const flashSaleRedemptions = await prisma.flashSaleRedemption.findMany()
    * ```
    */
  get flashSaleRedemption(): Prisma.FlashSaleRedemptionDelegate<ExtArgs>;

  /**
   * `prisma.conversation`: Exposes CRUD operations for the **Conversation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Conversations
    * const conversations = await prisma.conversation.findMany()
    * ```
    */
  get conversation(): Prisma.ConversationDelegate<ExtArgs>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs>;

  /**
   * `prisma.messagePurchase`: Exposes CRUD operations for the **MessagePurchase** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MessagePurchases
    * const messagePurchases = await prisma.messagePurchase.findMany()
    * ```
    */
  get messagePurchase(): Prisma.MessagePurchaseDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Post: 'Post',
    Tag: 'Tag',
    PostTag: 'PostTag',
    Comment: 'Comment',
    Like: 'Like',
    Subscription: 'Subscription',
    Follow: 'Follow',
    Transaction: 'Transaction',
    Account: 'Account',
    Session: 'Session',
    PostPurchase: 'PostPurchase',
    UserSettings: 'UserSettings',
    CreatorTierSettings: 'CreatorTierSettings',
    Notification: 'Notification',
    AuctionDeposit: 'AuctionDeposit',
    AuctionBid: 'AuctionBid',
    AuctionPayment: 'AuctionPayment',
    FlashSale: 'FlashSale',
    FlashSaleRedemption: 'FlashSaleRedemption',
    Conversation: 'Conversation',
    Message: 'Message',
    MessagePurchase: 'MessagePurchase'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "post" | "tag" | "postTag" | "comment" | "like" | "subscription" | "follow" | "transaction" | "account" | "session" | "postPurchase" | "userSettings" | "creatorTierSettings" | "notification" | "auctionDeposit" | "auctionBid" | "auctionPayment" | "flashSale" | "flashSaleRedemption" | "conversation" | "message" | "messagePurchase"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Post: {
        payload: Prisma.$PostPayload<ExtArgs>
        fields: Prisma.PostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findFirst: {
            args: Prisma.PostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findMany: {
            args: Prisma.PostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          create: {
            args: Prisma.PostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          createMany: {
            args: Prisma.PostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          delete: {
            args: Prisma.PostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          update: {
            args: Prisma.PostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          deleteMany: {
            args: Prisma.PostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.PostGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      Tag: {
        payload: Prisma.$TagPayload<ExtArgs>
        fields: Prisma.TagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findFirst: {
            args: Prisma.TagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findMany: {
            args: Prisma.TagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>[]
          }
          create: {
            args: Prisma.TagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          createMany: {
            args: Prisma.TagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>[]
          }
          delete: {
            args: Prisma.TagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          update: {
            args: Prisma.TagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          deleteMany: {
            args: Prisma.TagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          aggregate: {
            args: Prisma.TagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTag>
          }
          groupBy: {
            args: Prisma.TagGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagGroupByOutputType>[]
          }
          count: {
            args: Prisma.TagCountArgs<ExtArgs>
            result: $Utils.Optional<TagCountAggregateOutputType> | number
          }
        }
      }
      PostTag: {
        payload: Prisma.$PostTagPayload<ExtArgs>
        fields: Prisma.PostTagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostTagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostTagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          findFirst: {
            args: Prisma.PostTagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostTagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          findMany: {
            args: Prisma.PostTagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>[]
          }
          create: {
            args: Prisma.PostTagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          createMany: {
            args: Prisma.PostTagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostTagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>[]
          }
          delete: {
            args: Prisma.PostTagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          update: {
            args: Prisma.PostTagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          deleteMany: {
            args: Prisma.PostTagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostTagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PostTagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          aggregate: {
            args: Prisma.PostTagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePostTag>
          }
          groupBy: {
            args: Prisma.PostTagGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostTagGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostTagCountArgs<ExtArgs>
            result: $Utils.Optional<PostTagCountAggregateOutputType> | number
          }
        }
      }
      Comment: {
        payload: Prisma.$CommentPayload<ExtArgs>
        fields: Prisma.CommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findFirst: {
            args: Prisma.CommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findMany: {
            args: Prisma.CommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          create: {
            args: Prisma.CommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          createMany: {
            args: Prisma.CommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          delete: {
            args: Prisma.CommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          update: {
            args: Prisma.CommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          deleteMany: {
            args: Prisma.CommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.CommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      Like: {
        payload: Prisma.$LikePayload<ExtArgs>
        fields: Prisma.LikeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LikeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LikeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          findFirst: {
            args: Prisma.LikeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LikeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          findMany: {
            args: Prisma.LikeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          create: {
            args: Prisma.LikeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          createMany: {
            args: Prisma.LikeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LikeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          delete: {
            args: Prisma.LikeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          update: {
            args: Prisma.LikeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          deleteMany: {
            args: Prisma.LikeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LikeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LikeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          aggregate: {
            args: Prisma.LikeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLike>
          }
          groupBy: {
            args: Prisma.LikeGroupByArgs<ExtArgs>
            result: $Utils.Optional<LikeGroupByOutputType>[]
          }
          count: {
            args: Prisma.LikeCountArgs<ExtArgs>
            result: $Utils.Optional<LikeCountAggregateOutputType> | number
          }
        }
      }
      Subscription: {
        payload: Prisma.$SubscriptionPayload<ExtArgs>
        fields: Prisma.SubscriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findMany: {
            args: Prisma.SubscriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          create: {
            args: Prisma.SubscriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          createMany: {
            args: Prisma.SubscriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          update: {
            args: Prisma.SubscriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription>
          }
          groupBy: {
            args: Prisma.SubscriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionCountAggregateOutputType> | number
          }
        }
      }
      Follow: {
        payload: Prisma.$FollowPayload<ExtArgs>
        fields: Prisma.FollowFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FollowFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FollowFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>
          }
          findFirst: {
            args: Prisma.FollowFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FollowFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>
          }
          findMany: {
            args: Prisma.FollowFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>[]
          }
          create: {
            args: Prisma.FollowCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>
          }
          createMany: {
            args: Prisma.FollowCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FollowCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>[]
          }
          delete: {
            args: Prisma.FollowDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>
          }
          update: {
            args: Prisma.FollowUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>
          }
          deleteMany: {
            args: Prisma.FollowDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FollowUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FollowUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FollowPayload>
          }
          aggregate: {
            args: Prisma.FollowAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFollow>
          }
          groupBy: {
            args: Prisma.FollowGroupByArgs<ExtArgs>
            result: $Utils.Optional<FollowGroupByOutputType>[]
          }
          count: {
            args: Prisma.FollowCountArgs<ExtArgs>
            result: $Utils.Optional<FollowCountAggregateOutputType> | number
          }
        }
      }
      Transaction: {
        payload: Prisma.$TransactionPayload<ExtArgs>
        fields: Prisma.TransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          findFirst: {
            args: Prisma.TransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          findMany: {
            args: Prisma.TransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          create: {
            args: Prisma.TransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          createMany: {
            args: Prisma.TransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>[]
          }
          delete: {
            args: Prisma.TransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          update: {
            args: Prisma.TransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          deleteMany: {
            args: Prisma.TransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransactionPayload>
          }
          aggregate: {
            args: Prisma.TransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaction>
          }
          groupBy: {
            args: Prisma.TransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransactionCountArgs<ExtArgs>
            result: $Utils.Optional<TransactionCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      PostPurchase: {
        payload: Prisma.$PostPurchasePayload<ExtArgs>
        fields: Prisma.PostPurchaseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostPurchaseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostPurchaseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>
          }
          findFirst: {
            args: Prisma.PostPurchaseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostPurchaseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>
          }
          findMany: {
            args: Prisma.PostPurchaseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>[]
          }
          create: {
            args: Prisma.PostPurchaseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>
          }
          createMany: {
            args: Prisma.PostPurchaseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostPurchaseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>[]
          }
          delete: {
            args: Prisma.PostPurchaseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>
          }
          update: {
            args: Prisma.PostPurchaseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>
          }
          deleteMany: {
            args: Prisma.PostPurchaseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostPurchaseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PostPurchaseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPurchasePayload>
          }
          aggregate: {
            args: Prisma.PostPurchaseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePostPurchase>
          }
          groupBy: {
            args: Prisma.PostPurchaseGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostPurchaseGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostPurchaseCountArgs<ExtArgs>
            result: $Utils.Optional<PostPurchaseCountAggregateOutputType> | number
          }
        }
      }
      UserSettings: {
        payload: Prisma.$UserSettingsPayload<ExtArgs>
        fields: Prisma.UserSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          findFirst: {
            args: Prisma.UserSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          findMany: {
            args: Prisma.UserSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>[]
          }
          create: {
            args: Prisma.UserSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          createMany: {
            args: Prisma.UserSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>[]
          }
          delete: {
            args: Prisma.UserSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          update: {
            args: Prisma.UserSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          deleteMany: {
            args: Prisma.UserSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          aggregate: {
            args: Prisma.UserSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSettings>
          }
          groupBy: {
            args: Prisma.UserSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<UserSettingsCountAggregateOutputType> | number
          }
        }
      }
      CreatorTierSettings: {
        payload: Prisma.$CreatorTierSettingsPayload<ExtArgs>
        fields: Prisma.CreatorTierSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CreatorTierSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CreatorTierSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>
          }
          findFirst: {
            args: Prisma.CreatorTierSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CreatorTierSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>
          }
          findMany: {
            args: Prisma.CreatorTierSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>[]
          }
          create: {
            args: Prisma.CreatorTierSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>
          }
          createMany: {
            args: Prisma.CreatorTierSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CreatorTierSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>[]
          }
          delete: {
            args: Prisma.CreatorTierSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>
          }
          update: {
            args: Prisma.CreatorTierSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>
          }
          deleteMany: {
            args: Prisma.CreatorTierSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CreatorTierSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CreatorTierSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorTierSettingsPayload>
          }
          aggregate: {
            args: Prisma.CreatorTierSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCreatorTierSettings>
          }
          groupBy: {
            args: Prisma.CreatorTierSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CreatorTierSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.CreatorTierSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<CreatorTierSettingsCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      AuctionDeposit: {
        payload: Prisma.$AuctionDepositPayload<ExtArgs>
        fields: Prisma.AuctionDepositFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuctionDepositFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuctionDepositFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>
          }
          findFirst: {
            args: Prisma.AuctionDepositFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuctionDepositFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>
          }
          findMany: {
            args: Prisma.AuctionDepositFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>[]
          }
          create: {
            args: Prisma.AuctionDepositCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>
          }
          createMany: {
            args: Prisma.AuctionDepositCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuctionDepositCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>[]
          }
          delete: {
            args: Prisma.AuctionDepositDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>
          }
          update: {
            args: Prisma.AuctionDepositUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>
          }
          deleteMany: {
            args: Prisma.AuctionDepositDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuctionDepositUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuctionDepositUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionDepositPayload>
          }
          aggregate: {
            args: Prisma.AuctionDepositAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuctionDeposit>
          }
          groupBy: {
            args: Prisma.AuctionDepositGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuctionDepositGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuctionDepositCountArgs<ExtArgs>
            result: $Utils.Optional<AuctionDepositCountAggregateOutputType> | number
          }
        }
      }
      AuctionBid: {
        payload: Prisma.$AuctionBidPayload<ExtArgs>
        fields: Prisma.AuctionBidFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuctionBidFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuctionBidFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>
          }
          findFirst: {
            args: Prisma.AuctionBidFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuctionBidFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>
          }
          findMany: {
            args: Prisma.AuctionBidFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>[]
          }
          create: {
            args: Prisma.AuctionBidCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>
          }
          createMany: {
            args: Prisma.AuctionBidCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuctionBidCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>[]
          }
          delete: {
            args: Prisma.AuctionBidDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>
          }
          update: {
            args: Prisma.AuctionBidUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>
          }
          deleteMany: {
            args: Prisma.AuctionBidDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuctionBidUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuctionBidUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionBidPayload>
          }
          aggregate: {
            args: Prisma.AuctionBidAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuctionBid>
          }
          groupBy: {
            args: Prisma.AuctionBidGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuctionBidGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuctionBidCountArgs<ExtArgs>
            result: $Utils.Optional<AuctionBidCountAggregateOutputType> | number
          }
        }
      }
      AuctionPayment: {
        payload: Prisma.$AuctionPaymentPayload<ExtArgs>
        fields: Prisma.AuctionPaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuctionPaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuctionPaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>
          }
          findFirst: {
            args: Prisma.AuctionPaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuctionPaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>
          }
          findMany: {
            args: Prisma.AuctionPaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>[]
          }
          create: {
            args: Prisma.AuctionPaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>
          }
          createMany: {
            args: Prisma.AuctionPaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuctionPaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>[]
          }
          delete: {
            args: Prisma.AuctionPaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>
          }
          update: {
            args: Prisma.AuctionPaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>
          }
          deleteMany: {
            args: Prisma.AuctionPaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuctionPaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuctionPaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuctionPaymentPayload>
          }
          aggregate: {
            args: Prisma.AuctionPaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuctionPayment>
          }
          groupBy: {
            args: Prisma.AuctionPaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuctionPaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuctionPaymentCountArgs<ExtArgs>
            result: $Utils.Optional<AuctionPaymentCountAggregateOutputType> | number
          }
        }
      }
      FlashSale: {
        payload: Prisma.$FlashSalePayload<ExtArgs>
        fields: Prisma.FlashSaleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FlashSaleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FlashSaleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>
          }
          findFirst: {
            args: Prisma.FlashSaleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FlashSaleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>
          }
          findMany: {
            args: Prisma.FlashSaleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>[]
          }
          create: {
            args: Prisma.FlashSaleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>
          }
          createMany: {
            args: Prisma.FlashSaleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FlashSaleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>[]
          }
          delete: {
            args: Prisma.FlashSaleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>
          }
          update: {
            args: Prisma.FlashSaleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>
          }
          deleteMany: {
            args: Prisma.FlashSaleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FlashSaleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FlashSaleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSalePayload>
          }
          aggregate: {
            args: Prisma.FlashSaleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFlashSale>
          }
          groupBy: {
            args: Prisma.FlashSaleGroupByArgs<ExtArgs>
            result: $Utils.Optional<FlashSaleGroupByOutputType>[]
          }
          count: {
            args: Prisma.FlashSaleCountArgs<ExtArgs>
            result: $Utils.Optional<FlashSaleCountAggregateOutputType> | number
          }
        }
      }
      FlashSaleRedemption: {
        payload: Prisma.$FlashSaleRedemptionPayload<ExtArgs>
        fields: Prisma.FlashSaleRedemptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FlashSaleRedemptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FlashSaleRedemptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>
          }
          findFirst: {
            args: Prisma.FlashSaleRedemptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FlashSaleRedemptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>
          }
          findMany: {
            args: Prisma.FlashSaleRedemptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>[]
          }
          create: {
            args: Prisma.FlashSaleRedemptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>
          }
          createMany: {
            args: Prisma.FlashSaleRedemptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FlashSaleRedemptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>[]
          }
          delete: {
            args: Prisma.FlashSaleRedemptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>
          }
          update: {
            args: Prisma.FlashSaleRedemptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>
          }
          deleteMany: {
            args: Prisma.FlashSaleRedemptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FlashSaleRedemptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FlashSaleRedemptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FlashSaleRedemptionPayload>
          }
          aggregate: {
            args: Prisma.FlashSaleRedemptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFlashSaleRedemption>
          }
          groupBy: {
            args: Prisma.FlashSaleRedemptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<FlashSaleRedemptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.FlashSaleRedemptionCountArgs<ExtArgs>
            result: $Utils.Optional<FlashSaleRedemptionCountAggregateOutputType> | number
          }
        }
      }
      Conversation: {
        payload: Prisma.$ConversationPayload<ExtArgs>
        fields: Prisma.ConversationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConversationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConversationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          findFirst: {
            args: Prisma.ConversationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConversationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          findMany: {
            args: Prisma.ConversationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          create: {
            args: Prisma.ConversationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          createMany: {
            args: Prisma.ConversationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConversationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>[]
          }
          delete: {
            args: Prisma.ConversationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          update: {
            args: Prisma.ConversationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          deleteMany: {
            args: Prisma.ConversationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConversationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConversationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversationPayload>
          }
          aggregate: {
            args: Prisma.ConversationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConversation>
          }
          groupBy: {
            args: Prisma.ConversationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConversationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConversationCountArgs<ExtArgs>
            result: $Utils.Optional<ConversationCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      MessagePurchase: {
        payload: Prisma.$MessagePurchasePayload<ExtArgs>
        fields: Prisma.MessagePurchaseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessagePurchaseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessagePurchaseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>
          }
          findFirst: {
            args: Prisma.MessagePurchaseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessagePurchaseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>
          }
          findMany: {
            args: Prisma.MessagePurchaseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>[]
          }
          create: {
            args: Prisma.MessagePurchaseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>
          }
          createMany: {
            args: Prisma.MessagePurchaseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessagePurchaseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>[]
          }
          delete: {
            args: Prisma.MessagePurchaseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>
          }
          update: {
            args: Prisma.MessagePurchaseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>
          }
          deleteMany: {
            args: Prisma.MessagePurchaseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessagePurchaseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MessagePurchaseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePurchasePayload>
          }
          aggregate: {
            args: Prisma.MessagePurchaseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessagePurchase>
          }
          groupBy: {
            args: Prisma.MessagePurchaseGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessagePurchaseGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessagePurchaseCountArgs<ExtArgs>
            result: $Utils.Optional<MessagePurchaseCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    comments: number
    follows: number
    followers: number
    likes: number
    posts: number
    subscriptions: number
    subscribers: number
    postPurchases: number
    referrals: number
    accounts: number
    sessions: number
    notifications: number
    purchasedSellablePosts: number
    auctionDeposits: number
    auctionBids: number
    auctionPayments: number
    flashSales: number
    flashSaleRedemptions: number
    conversations: number
    sentMessages: number
    messagePurchases: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | UserCountOutputTypeCountCommentsArgs
    follows?: boolean | UserCountOutputTypeCountFollowsArgs
    followers?: boolean | UserCountOutputTypeCountFollowersArgs
    likes?: boolean | UserCountOutputTypeCountLikesArgs
    posts?: boolean | UserCountOutputTypeCountPostsArgs
    subscriptions?: boolean | UserCountOutputTypeCountSubscriptionsArgs
    subscribers?: boolean | UserCountOutputTypeCountSubscribersArgs
    postPurchases?: boolean | UserCountOutputTypeCountPostPurchasesArgs
    referrals?: boolean | UserCountOutputTypeCountReferralsArgs
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    purchasedSellablePosts?: boolean | UserCountOutputTypeCountPurchasedSellablePostsArgs
    auctionDeposits?: boolean | UserCountOutputTypeCountAuctionDepositsArgs
    auctionBids?: boolean | UserCountOutputTypeCountAuctionBidsArgs
    auctionPayments?: boolean | UserCountOutputTypeCountAuctionPaymentsArgs
    flashSales?: boolean | UserCountOutputTypeCountFlashSalesArgs
    flashSaleRedemptions?: boolean | UserCountOutputTypeCountFlashSaleRedemptionsArgs
    conversations?: boolean | UserCountOutputTypeCountConversationsArgs
    sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
    messagePurchases?: boolean | UserCountOutputTypeCountMessagePurchasesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollowsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FollowWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollowersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FollowWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubscribersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPostPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostPurchaseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReferralsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPurchasedSellablePostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuctionDepositsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionDepositWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuctionBidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionBidWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuctionPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionPaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFlashSalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlashSaleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFlashSaleRedemptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlashSaleRedemptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountConversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMessagePurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessagePurchaseWhereInput
  }


  /**
   * Count Type PostCountOutputType
   */

  export type PostCountOutputType = {
    comments: number
    likes: number
    tags: number
    purchases: number
    auctionDeposits: number
    auctionBids: number
    flashSales: number
  }

  export type PostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | PostCountOutputTypeCountCommentsArgs
    likes?: boolean | PostCountOutputTypeCountLikesArgs
    tags?: boolean | PostCountOutputTypeCountTagsArgs
    purchases?: boolean | PostCountOutputTypeCountPurchasesArgs
    auctionDeposits?: boolean | PostCountOutputTypeCountAuctionDepositsArgs
    auctionBids?: boolean | PostCountOutputTypeCountAuctionBidsArgs
    flashSales?: boolean | PostCountOutputTypeCountFlashSalesArgs
  }

  // Custom InputTypes
  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     */
    select?: PostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostTagWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostPurchaseWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountAuctionDepositsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionDepositWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountAuctionBidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionBidWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountFlashSalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlashSaleWhereInput
  }


  /**
   * Count Type TagCountOutputType
   */

  export type TagCountOutputType = {
    posts: number
  }

  export type TagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | TagCountOutputTypeCountPostsArgs
  }

  // Custom InputTypes
  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagCountOutputType
     */
    select?: TagCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostTagWhereInput
  }


  /**
   * Count Type CommentCountOutputType
   */

  export type CommentCountOutputType = {
    replies: number
    likes: number
  }

  export type CommentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    replies?: boolean | CommentCountOutputTypeCountRepliesArgs
    likes?: boolean | CommentCountOutputTypeCountLikesArgs
  }

  // Custom InputTypes
  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCountOutputType
     */
    select?: CommentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountRepliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }


  /**
   * Count Type SubscriptionCountOutputType
   */

  export type SubscriptionCountOutputType = {
    transactions: number
  }

  export type SubscriptionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transactions?: boolean | SubscriptionCountOutputTypeCountTransactionsArgs
  }

  // Custom InputTypes
  /**
   * SubscriptionCountOutputType without action
   */
  export type SubscriptionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionCountOutputType
     */
    select?: SubscriptionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubscriptionCountOutputType without action
   */
  export type SubscriptionCountOutputTypeCountTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
  }


  /**
   * Count Type FlashSaleCountOutputType
   */

  export type FlashSaleCountOutputType = {
    redemptions: number
  }

  export type FlashSaleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    redemptions?: boolean | FlashSaleCountOutputTypeCountRedemptionsArgs
  }

  // Custom InputTypes
  /**
   * FlashSaleCountOutputType without action
   */
  export type FlashSaleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleCountOutputType
     */
    select?: FlashSaleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FlashSaleCountOutputType without action
   */
  export type FlashSaleCountOutputTypeCountRedemptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlashSaleRedemptionWhereInput
  }


  /**
   * Count Type ConversationCountOutputType
   */

  export type ConversationCountOutputType = {
    participants: number
    messages: number
  }

  export type ConversationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    participants?: boolean | ConversationCountOutputTypeCountParticipantsArgs
    messages?: boolean | ConversationCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversationCountOutputType
     */
    select?: ConversationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeCountParticipantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * ConversationCountOutputType without action
   */
  export type ConversationCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }


  /**
   * Count Type MessageCountOutputType
   */

  export type MessageCountOutputType = {
    purchases: number
  }

  export type MessageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchases?: boolean | MessageCountOutputTypeCountPurchasesArgs
  }

  // Custom InputTypes
  /**
   * MessageCountOutputType without action
   */
  export type MessageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessageCountOutputType
     */
    select?: MessageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MessageCountOutputType without action
   */
  export type MessageCountOutputTypeCountPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessagePurchaseWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    followersCount: number | null
    followingCount: number | null
    postsCount: number | null
  }

  export type UserSumAggregateOutputType = {
    followersCount: number | null
    followingCount: number | null
    postsCount: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    emailVerified: Date | null
    name: string | null
    image: string | null
    nickname: string | null
    fullName: string | null
    bio: string | null
    avatar: string | null
    backgroundImage: string | null
    website: string | null
    twitter: string | null
    telegram: string | null
    location: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isVerified: boolean | null
    isCreator: boolean | null
    followersCount: number | null
    followingCount: number | null
    postsCount: number | null
    wallet: string | null
    solanaWallet: string | null
    referrerId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    emailVerified: Date | null
    name: string | null
    image: string | null
    nickname: string | null
    fullName: string | null
    bio: string | null
    avatar: string | null
    backgroundImage: string | null
    website: string | null
    twitter: string | null
    telegram: string | null
    location: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isVerified: boolean | null
    isCreator: boolean | null
    followersCount: number | null
    followingCount: number | null
    postsCount: number | null
    wallet: string | null
    solanaWallet: string | null
    referrerId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    emailVerified: number
    name: number
    image: number
    nickname: number
    fullName: number
    bio: number
    avatar: number
    backgroundImage: number
    website: number
    twitter: number
    telegram: number
    location: number
    createdAt: number
    updatedAt: number
    isVerified: number
    isCreator: number
    followersCount: number
    followingCount: number
    postsCount: number
    wallet: number
    solanaWallet: number
    referrerId: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    followersCount?: true
    followingCount?: true
    postsCount?: true
  }

  export type UserSumAggregateInputType = {
    followersCount?: true
    followingCount?: true
    postsCount?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    emailVerified?: true
    name?: true
    image?: true
    nickname?: true
    fullName?: true
    bio?: true
    avatar?: true
    backgroundImage?: true
    website?: true
    twitter?: true
    telegram?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    isVerified?: true
    isCreator?: true
    followersCount?: true
    followingCount?: true
    postsCount?: true
    wallet?: true
    solanaWallet?: true
    referrerId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    emailVerified?: true
    name?: true
    image?: true
    nickname?: true
    fullName?: true
    bio?: true
    avatar?: true
    backgroundImage?: true
    website?: true
    twitter?: true
    telegram?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    isVerified?: true
    isCreator?: true
    followersCount?: true
    followingCount?: true
    postsCount?: true
    wallet?: true
    solanaWallet?: true
    referrerId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    emailVerified?: true
    name?: true
    image?: true
    nickname?: true
    fullName?: true
    bio?: true
    avatar?: true
    backgroundImage?: true
    website?: true
    twitter?: true
    telegram?: true
    location?: true
    createdAt?: true
    updatedAt?: true
    isVerified?: true
    isCreator?: true
    followersCount?: true
    followingCount?: true
    postsCount?: true
    wallet?: true
    solanaWallet?: true
    referrerId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string | null
    emailVerified: Date | null
    name: string | null
    image: string | null
    nickname: string | null
    fullName: string | null
    bio: string | null
    avatar: string | null
    backgroundImage: string | null
    website: string | null
    twitter: string | null
    telegram: string | null
    location: string | null
    createdAt: Date
    updatedAt: Date
    isVerified: boolean
    isCreator: boolean
    followersCount: number
    followingCount: number
    postsCount: number
    wallet: string | null
    solanaWallet: string | null
    referrerId: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    emailVerified?: boolean
    name?: boolean
    image?: boolean
    nickname?: boolean
    fullName?: boolean
    bio?: boolean
    avatar?: boolean
    backgroundImage?: boolean
    website?: boolean
    twitter?: boolean
    telegram?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: boolean
    followingCount?: boolean
    postsCount?: boolean
    wallet?: boolean
    solanaWallet?: boolean
    referrerId?: boolean
    comments?: boolean | User$commentsArgs<ExtArgs>
    follows?: boolean | User$followsArgs<ExtArgs>
    followers?: boolean | User$followersArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    posts?: boolean | User$postsArgs<ExtArgs>
    subscriptions?: boolean | User$subscriptionsArgs<ExtArgs>
    subscribers?: boolean | User$subscribersArgs<ExtArgs>
    postPurchases?: boolean | User$postPurchasesArgs<ExtArgs>
    referrer?: boolean | User$referrerArgs<ExtArgs>
    referrals?: boolean | User$referralsArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    settings?: boolean | User$settingsArgs<ExtArgs>
    tierSettings?: boolean | User$tierSettingsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    purchasedSellablePosts?: boolean | User$purchasedSellablePostsArgs<ExtArgs>
    auctionDeposits?: boolean | User$auctionDepositsArgs<ExtArgs>
    auctionBids?: boolean | User$auctionBidsArgs<ExtArgs>
    auctionPayments?: boolean | User$auctionPaymentsArgs<ExtArgs>
    flashSales?: boolean | User$flashSalesArgs<ExtArgs>
    flashSaleRedemptions?: boolean | User$flashSaleRedemptionsArgs<ExtArgs>
    conversations?: boolean | User$conversationsArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    messagePurchases?: boolean | User$messagePurchasesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    emailVerified?: boolean
    name?: boolean
    image?: boolean
    nickname?: boolean
    fullName?: boolean
    bio?: boolean
    avatar?: boolean
    backgroundImage?: boolean
    website?: boolean
    twitter?: boolean
    telegram?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: boolean
    followingCount?: boolean
    postsCount?: boolean
    wallet?: boolean
    solanaWallet?: boolean
    referrerId?: boolean
    referrer?: boolean | User$referrerArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    emailVerified?: boolean
    name?: boolean
    image?: boolean
    nickname?: boolean
    fullName?: boolean
    bio?: boolean
    avatar?: boolean
    backgroundImage?: boolean
    website?: boolean
    twitter?: boolean
    telegram?: boolean
    location?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: boolean
    followingCount?: boolean
    postsCount?: boolean
    wallet?: boolean
    solanaWallet?: boolean
    referrerId?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | User$commentsArgs<ExtArgs>
    follows?: boolean | User$followsArgs<ExtArgs>
    followers?: boolean | User$followersArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    posts?: boolean | User$postsArgs<ExtArgs>
    subscriptions?: boolean | User$subscriptionsArgs<ExtArgs>
    subscribers?: boolean | User$subscribersArgs<ExtArgs>
    postPurchases?: boolean | User$postPurchasesArgs<ExtArgs>
    referrer?: boolean | User$referrerArgs<ExtArgs>
    referrals?: boolean | User$referralsArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    settings?: boolean | User$settingsArgs<ExtArgs>
    tierSettings?: boolean | User$tierSettingsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    purchasedSellablePosts?: boolean | User$purchasedSellablePostsArgs<ExtArgs>
    auctionDeposits?: boolean | User$auctionDepositsArgs<ExtArgs>
    auctionBids?: boolean | User$auctionBidsArgs<ExtArgs>
    auctionPayments?: boolean | User$auctionPaymentsArgs<ExtArgs>
    flashSales?: boolean | User$flashSalesArgs<ExtArgs>
    flashSaleRedemptions?: boolean | User$flashSaleRedemptionsArgs<ExtArgs>
    conversations?: boolean | User$conversationsArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    messagePurchases?: boolean | User$messagePurchasesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    referrer?: boolean | User$referrerArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      comments: Prisma.$CommentPayload<ExtArgs>[]
      follows: Prisma.$FollowPayload<ExtArgs>[]
      followers: Prisma.$FollowPayload<ExtArgs>[]
      likes: Prisma.$LikePayload<ExtArgs>[]
      posts: Prisma.$PostPayload<ExtArgs>[]
      subscriptions: Prisma.$SubscriptionPayload<ExtArgs>[]
      subscribers: Prisma.$SubscriptionPayload<ExtArgs>[]
      postPurchases: Prisma.$PostPurchasePayload<ExtArgs>[]
      referrer: Prisma.$UserPayload<ExtArgs> | null
      referrals: Prisma.$UserPayload<ExtArgs>[]
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      settings: Prisma.$UserSettingsPayload<ExtArgs> | null
      tierSettings: Prisma.$CreatorTierSettingsPayload<ExtArgs> | null
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      purchasedSellablePosts: Prisma.$PostPayload<ExtArgs>[]
      auctionDeposits: Prisma.$AuctionDepositPayload<ExtArgs>[]
      auctionBids: Prisma.$AuctionBidPayload<ExtArgs>[]
      auctionPayments: Prisma.$AuctionPaymentPayload<ExtArgs>[]
      flashSales: Prisma.$FlashSalePayload<ExtArgs>[]
      flashSaleRedemptions: Prisma.$FlashSaleRedemptionPayload<ExtArgs>[]
      conversations: Prisma.$ConversationPayload<ExtArgs>[]
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      messagePurchases: Prisma.$MessagePurchasePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string | null
      emailVerified: Date | null
      name: string | null
      image: string | null
      nickname: string | null
      fullName: string | null
      bio: string | null
      avatar: string | null
      backgroundImage: string | null
      website: string | null
      twitter: string | null
      telegram: string | null
      location: string | null
      createdAt: Date
      updatedAt: Date
      isVerified: boolean
      isCreator: boolean
      followersCount: number
      followingCount: number
      postsCount: number
      wallet: string | null
      solanaWallet: string | null
      referrerId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comments<T extends User$commentsArgs<ExtArgs> = {}>(args?: Subset<T, User$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany"> | Null>
    follows<T extends User$followsArgs<ExtArgs> = {}>(args?: Subset<T, User$followsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany"> | Null>
    followers<T extends User$followersArgs<ExtArgs> = {}>(args?: Subset<T, User$followersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany"> | Null>
    likes<T extends User$likesArgs<ExtArgs> = {}>(args?: Subset<T, User$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany"> | Null>
    posts<T extends User$postsArgs<ExtArgs> = {}>(args?: Subset<T, User$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany"> | Null>
    subscriptions<T extends User$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, User$subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany"> | Null>
    subscribers<T extends User$subscribersArgs<ExtArgs> = {}>(args?: Subset<T, User$subscribersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany"> | Null>
    postPurchases<T extends User$postPurchasesArgs<ExtArgs> = {}>(args?: Subset<T, User$postPurchasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findMany"> | Null>
    referrer<T extends User$referrerArgs<ExtArgs> = {}>(args?: Subset<T, User$referrerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    referrals<T extends User$referralsArgs<ExtArgs> = {}>(args?: Subset<T, User$referralsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany"> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany"> | Null>
    settings<T extends User$settingsArgs<ExtArgs> = {}>(args?: Subset<T, User$settingsArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    tierSettings<T extends User$tierSettingsArgs<ExtArgs> = {}>(args?: Subset<T, User$tierSettingsArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    purchasedSellablePosts<T extends User$purchasedSellablePostsArgs<ExtArgs> = {}>(args?: Subset<T, User$purchasedSellablePostsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany"> | Null>
    auctionDeposits<T extends User$auctionDepositsArgs<ExtArgs> = {}>(args?: Subset<T, User$auctionDepositsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findMany"> | Null>
    auctionBids<T extends User$auctionBidsArgs<ExtArgs> = {}>(args?: Subset<T, User$auctionBidsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findMany"> | Null>
    auctionPayments<T extends User$auctionPaymentsArgs<ExtArgs> = {}>(args?: Subset<T, User$auctionPaymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findMany"> | Null>
    flashSales<T extends User$flashSalesArgs<ExtArgs> = {}>(args?: Subset<T, User$flashSalesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findMany"> | Null>
    flashSaleRedemptions<T extends User$flashSaleRedemptionsArgs<ExtArgs> = {}>(args?: Subset<T, User$flashSaleRedemptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findMany"> | Null>
    conversations<T extends User$conversationsArgs<ExtArgs> = {}>(args?: Subset<T, User$conversationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany"> | Null>
    sentMessages<T extends User$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    messagePurchases<T extends User$messagePurchasesArgs<ExtArgs> = {}>(args?: Subset<T, User$messagePurchasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly name: FieldRef<"User", 'String'>
    readonly image: FieldRef<"User", 'String'>
    readonly nickname: FieldRef<"User", 'String'>
    readonly fullName: FieldRef<"User", 'String'>
    readonly bio: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly backgroundImage: FieldRef<"User", 'String'>
    readonly website: FieldRef<"User", 'String'>
    readonly twitter: FieldRef<"User", 'String'>
    readonly telegram: FieldRef<"User", 'String'>
    readonly location: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly isVerified: FieldRef<"User", 'Boolean'>
    readonly isCreator: FieldRef<"User", 'Boolean'>
    readonly followersCount: FieldRef<"User", 'Int'>
    readonly followingCount: FieldRef<"User", 'Int'>
    readonly postsCount: FieldRef<"User", 'Int'>
    readonly wallet: FieldRef<"User", 'String'>
    readonly solanaWallet: FieldRef<"User", 'String'>
    readonly referrerId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.comments
   */
  export type User$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * User.follows
   */
  export type User$followsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    where?: FollowWhereInput
    orderBy?: FollowOrderByWithRelationInput | FollowOrderByWithRelationInput[]
    cursor?: FollowWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * User.followers
   */
  export type User$followersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    where?: FollowWhereInput
    orderBy?: FollowOrderByWithRelationInput | FollowOrderByWithRelationInput[]
    cursor?: FollowWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * User.likes
   */
  export type User$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * User.posts
   */
  export type User$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * User.subscriptions
   */
  export type User$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    cursor?: SubscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * User.subscribers
   */
  export type User$subscribersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    cursor?: SubscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * User.postPurchases
   */
  export type User$postPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    where?: PostPurchaseWhereInput
    orderBy?: PostPurchaseOrderByWithRelationInput | PostPurchaseOrderByWithRelationInput[]
    cursor?: PostPurchaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostPurchaseScalarFieldEnum | PostPurchaseScalarFieldEnum[]
  }

  /**
   * User.referrer
   */
  export type User$referrerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.referrals
   */
  export type User$referralsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.settings
   */
  export type User$settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    where?: UserSettingsWhereInput
  }

  /**
   * User.tierSettings
   */
  export type User$tierSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    where?: CreatorTierSettingsWhereInput
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.purchasedSellablePosts
   */
  export type User$purchasedSellablePostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * User.auctionDeposits
   */
  export type User$auctionDepositsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    where?: AuctionDepositWhereInput
    orderBy?: AuctionDepositOrderByWithRelationInput | AuctionDepositOrderByWithRelationInput[]
    cursor?: AuctionDepositWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuctionDepositScalarFieldEnum | AuctionDepositScalarFieldEnum[]
  }

  /**
   * User.auctionBids
   */
  export type User$auctionBidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    where?: AuctionBidWhereInput
    orderBy?: AuctionBidOrderByWithRelationInput | AuctionBidOrderByWithRelationInput[]
    cursor?: AuctionBidWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuctionBidScalarFieldEnum | AuctionBidScalarFieldEnum[]
  }

  /**
   * User.auctionPayments
   */
  export type User$auctionPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    where?: AuctionPaymentWhereInput
    orderBy?: AuctionPaymentOrderByWithRelationInput | AuctionPaymentOrderByWithRelationInput[]
    cursor?: AuctionPaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuctionPaymentScalarFieldEnum | AuctionPaymentScalarFieldEnum[]
  }

  /**
   * User.flashSales
   */
  export type User$flashSalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    where?: FlashSaleWhereInput
    orderBy?: FlashSaleOrderByWithRelationInput | FlashSaleOrderByWithRelationInput[]
    cursor?: FlashSaleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlashSaleScalarFieldEnum | FlashSaleScalarFieldEnum[]
  }

  /**
   * User.flashSaleRedemptions
   */
  export type User$flashSaleRedemptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    where?: FlashSaleRedemptionWhereInput
    orderBy?: FlashSaleRedemptionOrderByWithRelationInput | FlashSaleRedemptionOrderByWithRelationInput[]
    cursor?: FlashSaleRedemptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlashSaleRedemptionScalarFieldEnum | FlashSaleRedemptionScalarFieldEnum[]
  }

  /**
   * User.conversations
   */
  export type User$conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    cursor?: ConversationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * User.sentMessages
   */
  export type User$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.messagePurchases
   */
  export type User$messagePurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    where?: MessagePurchaseWhereInput
    orderBy?: MessagePurchaseOrderByWithRelationInput | MessagePurchaseOrderByWithRelationInput[]
    cursor?: MessagePurchaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagePurchaseScalarFieldEnum | MessagePurchaseScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    price: number | null
    likesCount: number | null
    commentsCount: number | null
    viewsCount: number | null
    quantity: number | null
    auctionStartPrice: number | null
    auctionStepPrice: number | null
    auctionDepositAmount: number | null
    soldPrice: number | null
  }

  export type PostSumAggregateOutputType = {
    price: number | null
    likesCount: number | null
    commentsCount: number | null
    viewsCount: number | null
    quantity: number | null
    auctionStartPrice: number | null
    auctionStepPrice: number | null
    auctionDepositAmount: number | null
    soldPrice: number | null
  }

  export type PostMinAggregateOutputType = {
    id: string | null
    creatorId: string | null
    title: string | null
    content: string | null
    type: string | null
    category: string | null
    thumbnail: string | null
    mediaUrl: string | null
    isLocked: boolean | null
    isPremium: boolean | null
    price: number | null
    currency: string | null
    minSubscriptionTier: string | null
    imageAspectRatio: string | null
    likesCount: number | null
    commentsCount: number | null
    viewsCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
    isSellable: boolean | null
    sellType: $Enums.SellType | null
    quantity: number | null
    auctionStartPrice: number | null
    auctionStepPrice: number | null
    auctionDepositAmount: number | null
    auctionStartAt: Date | null
    auctionEndAt: Date | null
    auctionStatus: $Enums.AuctionStatus | null
    soldAt: Date | null
    soldToId: string | null
    soldPrice: number | null
    sellerConfirmedAt: Date | null
  }

  export type PostMaxAggregateOutputType = {
    id: string | null
    creatorId: string | null
    title: string | null
    content: string | null
    type: string | null
    category: string | null
    thumbnail: string | null
    mediaUrl: string | null
    isLocked: boolean | null
    isPremium: boolean | null
    price: number | null
    currency: string | null
    minSubscriptionTier: string | null
    imageAspectRatio: string | null
    likesCount: number | null
    commentsCount: number | null
    viewsCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
    isSellable: boolean | null
    sellType: $Enums.SellType | null
    quantity: number | null
    auctionStartPrice: number | null
    auctionStepPrice: number | null
    auctionDepositAmount: number | null
    auctionStartAt: Date | null
    auctionEndAt: Date | null
    auctionStatus: $Enums.AuctionStatus | null
    soldAt: Date | null
    soldToId: string | null
    soldPrice: number | null
    sellerConfirmedAt: Date | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    creatorId: number
    title: number
    content: number
    type: number
    category: number
    thumbnail: number
    mediaUrl: number
    isLocked: number
    isPremium: number
    price: number
    currency: number
    minSubscriptionTier: number
    imageAspectRatio: number
    likesCount: number
    commentsCount: number
    viewsCount: number
    createdAt: number
    updatedAt: number
    isSellable: number
    sellType: number
    quantity: number
    auctionStartPrice: number
    auctionStepPrice: number
    auctionDepositAmount: number
    auctionStartAt: number
    auctionEndAt: number
    auctionStatus: number
    soldAt: number
    soldToId: number
    soldPrice: number
    sellerConfirmedAt: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    price?: true
    likesCount?: true
    commentsCount?: true
    viewsCount?: true
    quantity?: true
    auctionStartPrice?: true
    auctionStepPrice?: true
    auctionDepositAmount?: true
    soldPrice?: true
  }

  export type PostSumAggregateInputType = {
    price?: true
    likesCount?: true
    commentsCount?: true
    viewsCount?: true
    quantity?: true
    auctionStartPrice?: true
    auctionStepPrice?: true
    auctionDepositAmount?: true
    soldPrice?: true
  }

  export type PostMinAggregateInputType = {
    id?: true
    creatorId?: true
    title?: true
    content?: true
    type?: true
    category?: true
    thumbnail?: true
    mediaUrl?: true
    isLocked?: true
    isPremium?: true
    price?: true
    currency?: true
    minSubscriptionTier?: true
    imageAspectRatio?: true
    likesCount?: true
    commentsCount?: true
    viewsCount?: true
    createdAt?: true
    updatedAt?: true
    isSellable?: true
    sellType?: true
    quantity?: true
    auctionStartPrice?: true
    auctionStepPrice?: true
    auctionDepositAmount?: true
    auctionStartAt?: true
    auctionEndAt?: true
    auctionStatus?: true
    soldAt?: true
    soldToId?: true
    soldPrice?: true
    sellerConfirmedAt?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    creatorId?: true
    title?: true
    content?: true
    type?: true
    category?: true
    thumbnail?: true
    mediaUrl?: true
    isLocked?: true
    isPremium?: true
    price?: true
    currency?: true
    minSubscriptionTier?: true
    imageAspectRatio?: true
    likesCount?: true
    commentsCount?: true
    viewsCount?: true
    createdAt?: true
    updatedAt?: true
    isSellable?: true
    sellType?: true
    quantity?: true
    auctionStartPrice?: true
    auctionStepPrice?: true
    auctionDepositAmount?: true
    auctionStartAt?: true
    auctionEndAt?: true
    auctionStatus?: true
    soldAt?: true
    soldToId?: true
    soldPrice?: true
    sellerConfirmedAt?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    creatorId?: true
    title?: true
    content?: true
    type?: true
    category?: true
    thumbnail?: true
    mediaUrl?: true
    isLocked?: true
    isPremium?: true
    price?: true
    currency?: true
    minSubscriptionTier?: true
    imageAspectRatio?: true
    likesCount?: true
    commentsCount?: true
    viewsCount?: true
    createdAt?: true
    updatedAt?: true
    isSellable?: true
    sellType?: true
    quantity?: true
    auctionStartPrice?: true
    auctionStepPrice?: true
    auctionDepositAmount?: true
    auctionStartAt?: true
    auctionEndAt?: true
    auctionStatus?: true
    soldAt?: true
    soldToId?: true
    soldPrice?: true
    sellerConfirmedAt?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Post to aggregate.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
    orderBy?: PostOrderByWithAggregationInput | PostOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id: string
    creatorId: string
    title: string
    content: string
    type: string
    category: string | null
    thumbnail: string | null
    mediaUrl: string | null
    isLocked: boolean
    isPremium: boolean
    price: number | null
    currency: string
    minSubscriptionTier: string | null
    imageAspectRatio: string | null
    likesCount: number
    commentsCount: number
    viewsCount: number
    createdAt: Date
    updatedAt: Date
    isSellable: boolean
    sellType: $Enums.SellType | null
    quantity: number | null
    auctionStartPrice: number | null
    auctionStepPrice: number | null
    auctionDepositAmount: number | null
    auctionStartAt: Date | null
    auctionEndAt: Date | null
    auctionStatus: $Enums.AuctionStatus
    soldAt: Date | null
    soldToId: string | null
    soldPrice: number | null
    sellerConfirmedAt: Date | null
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creatorId?: boolean
    title?: boolean
    content?: boolean
    type?: boolean
    category?: boolean
    thumbnail?: boolean
    mediaUrl?: boolean
    isLocked?: boolean
    isPremium?: boolean
    price?: boolean
    currency?: boolean
    minSubscriptionTier?: boolean
    imageAspectRatio?: boolean
    likesCount?: boolean
    commentsCount?: boolean
    viewsCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isSellable?: boolean
    sellType?: boolean
    quantity?: boolean
    auctionStartPrice?: boolean
    auctionStepPrice?: boolean
    auctionDepositAmount?: boolean
    auctionStartAt?: boolean
    auctionEndAt?: boolean
    auctionStatus?: boolean
    soldAt?: boolean
    soldToId?: boolean
    soldPrice?: boolean
    sellerConfirmedAt?: boolean
    soldTo?: boolean | Post$soldToArgs<ExtArgs>
    comments?: boolean | Post$commentsArgs<ExtArgs>
    likes?: boolean | Post$likesArgs<ExtArgs>
    tags?: boolean | Post$tagsArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    purchases?: boolean | Post$purchasesArgs<ExtArgs>
    auctionDeposits?: boolean | Post$auctionDepositsArgs<ExtArgs>
    auctionBids?: boolean | Post$auctionBidsArgs<ExtArgs>
    auctionPayment?: boolean | Post$auctionPaymentArgs<ExtArgs>
    flashSales?: boolean | Post$flashSalesArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creatorId?: boolean
    title?: boolean
    content?: boolean
    type?: boolean
    category?: boolean
    thumbnail?: boolean
    mediaUrl?: boolean
    isLocked?: boolean
    isPremium?: boolean
    price?: boolean
    currency?: boolean
    minSubscriptionTier?: boolean
    imageAspectRatio?: boolean
    likesCount?: boolean
    commentsCount?: boolean
    viewsCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isSellable?: boolean
    sellType?: boolean
    quantity?: boolean
    auctionStartPrice?: boolean
    auctionStepPrice?: boolean
    auctionDepositAmount?: boolean
    auctionStartAt?: boolean
    auctionEndAt?: boolean
    auctionStatus?: boolean
    soldAt?: boolean
    soldToId?: boolean
    soldPrice?: boolean
    sellerConfirmedAt?: boolean
    soldTo?: boolean | Post$soldToArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectScalar = {
    id?: boolean
    creatorId?: boolean
    title?: boolean
    content?: boolean
    type?: boolean
    category?: boolean
    thumbnail?: boolean
    mediaUrl?: boolean
    isLocked?: boolean
    isPremium?: boolean
    price?: boolean
    currency?: boolean
    minSubscriptionTier?: boolean
    imageAspectRatio?: boolean
    likesCount?: boolean
    commentsCount?: boolean
    viewsCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isSellable?: boolean
    sellType?: boolean
    quantity?: boolean
    auctionStartPrice?: boolean
    auctionStepPrice?: boolean
    auctionDepositAmount?: boolean
    auctionStartAt?: boolean
    auctionEndAt?: boolean
    auctionStatus?: boolean
    soldAt?: boolean
    soldToId?: boolean
    soldPrice?: boolean
    sellerConfirmedAt?: boolean
  }

  export type PostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    soldTo?: boolean | Post$soldToArgs<ExtArgs>
    comments?: boolean | Post$commentsArgs<ExtArgs>
    likes?: boolean | Post$likesArgs<ExtArgs>
    tags?: boolean | Post$tagsArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    purchases?: boolean | Post$purchasesArgs<ExtArgs>
    auctionDeposits?: boolean | Post$auctionDepositsArgs<ExtArgs>
    auctionBids?: boolean | Post$auctionBidsArgs<ExtArgs>
    auctionPayment?: boolean | Post$auctionPaymentArgs<ExtArgs>
    flashSales?: boolean | Post$flashSalesArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    soldTo?: boolean | Post$soldToArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Post"
    objects: {
      soldTo: Prisma.$UserPayload<ExtArgs> | null
      comments: Prisma.$CommentPayload<ExtArgs>[]
      likes: Prisma.$LikePayload<ExtArgs>[]
      tags: Prisma.$PostTagPayload<ExtArgs>[]
      creator: Prisma.$UserPayload<ExtArgs>
      purchases: Prisma.$PostPurchasePayload<ExtArgs>[]
      auctionDeposits: Prisma.$AuctionDepositPayload<ExtArgs>[]
      auctionBids: Prisma.$AuctionBidPayload<ExtArgs>[]
      auctionPayment: Prisma.$AuctionPaymentPayload<ExtArgs> | null
      flashSales: Prisma.$FlashSalePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      creatorId: string
      title: string
      content: string
      type: string
      category: string | null
      thumbnail: string | null
      mediaUrl: string | null
      isLocked: boolean
      isPremium: boolean
      price: number | null
      currency: string
      minSubscriptionTier: string | null
      imageAspectRatio: string | null
      likesCount: number
      commentsCount: number
      viewsCount: number
      createdAt: Date
      updatedAt: Date
      isSellable: boolean
      sellType: $Enums.SellType | null
      quantity: number | null
      auctionStartPrice: number | null
      auctionStepPrice: number | null
      auctionDepositAmount: number | null
      auctionStartAt: Date | null
      auctionEndAt: Date | null
      auctionStatus: $Enums.AuctionStatus
      soldAt: Date | null
      soldToId: string | null
      soldPrice: number | null
      sellerConfirmedAt: Date | null
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type PostGetPayload<S extends boolean | null | undefined | PostDefaultArgs> = $Result.GetResult<Prisma.$PostPayload, S>

  type PostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PostFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface PostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Post'], meta: { name: 'Post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostFindUniqueArgs>(args: SelectSubset<T, PostFindUniqueArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(args: SelectSubset<T, PostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostFindFirstArgs>(args?: SelectSubset<T, PostFindFirstArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(args?: SelectSubset<T, PostFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostFindManyArgs>(args?: SelectSubset<T, PostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends PostCreateArgs>(args: SelectSubset<T, PostCreateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Posts.
     * @param {PostCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostCreateManyArgs>(args?: SelectSubset<T, PostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {PostCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `id`
     * const postWithIdOnly = await prisma.post.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostCreateManyAndReturnArgs>(args?: SelectSubset<T, PostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends PostDeleteArgs>(args: SelectSubset<T, PostDeleteArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostUpdateArgs>(args: SelectSubset<T, PostUpdateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostDeleteManyArgs>(args?: SelectSubset<T, PostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostUpdateManyArgs>(args: SelectSubset<T, PostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends PostUpsertArgs>(args: SelectSubset<T, PostUpsertArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Post model
   */
  readonly fields: PostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    soldTo<T extends Post$soldToArgs<ExtArgs> = {}>(args?: Subset<T, Post$soldToArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    comments<T extends Post$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Post$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany"> | Null>
    likes<T extends Post$likesArgs<ExtArgs> = {}>(args?: Subset<T, Post$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany"> | Null>
    tags<T extends Post$tagsArgs<ExtArgs> = {}>(args?: Subset<T, Post$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findMany"> | Null>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    purchases<T extends Post$purchasesArgs<ExtArgs> = {}>(args?: Subset<T, Post$purchasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findMany"> | Null>
    auctionDeposits<T extends Post$auctionDepositsArgs<ExtArgs> = {}>(args?: Subset<T, Post$auctionDepositsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findMany"> | Null>
    auctionBids<T extends Post$auctionBidsArgs<ExtArgs> = {}>(args?: Subset<T, Post$auctionBidsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findMany"> | Null>
    auctionPayment<T extends Post$auctionPaymentArgs<ExtArgs> = {}>(args?: Subset<T, Post$auctionPaymentArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    flashSales<T extends Post$flashSalesArgs<ExtArgs> = {}>(args?: Subset<T, Post$flashSalesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Post model
   */ 
  interface PostFieldRefs {
    readonly id: FieldRef<"Post", 'String'>
    readonly creatorId: FieldRef<"Post", 'String'>
    readonly title: FieldRef<"Post", 'String'>
    readonly content: FieldRef<"Post", 'String'>
    readonly type: FieldRef<"Post", 'String'>
    readonly category: FieldRef<"Post", 'String'>
    readonly thumbnail: FieldRef<"Post", 'String'>
    readonly mediaUrl: FieldRef<"Post", 'String'>
    readonly isLocked: FieldRef<"Post", 'Boolean'>
    readonly isPremium: FieldRef<"Post", 'Boolean'>
    readonly price: FieldRef<"Post", 'Float'>
    readonly currency: FieldRef<"Post", 'String'>
    readonly minSubscriptionTier: FieldRef<"Post", 'String'>
    readonly imageAspectRatio: FieldRef<"Post", 'String'>
    readonly likesCount: FieldRef<"Post", 'Int'>
    readonly commentsCount: FieldRef<"Post", 'Int'>
    readonly viewsCount: FieldRef<"Post", 'Int'>
    readonly createdAt: FieldRef<"Post", 'DateTime'>
    readonly updatedAt: FieldRef<"Post", 'DateTime'>
    readonly isSellable: FieldRef<"Post", 'Boolean'>
    readonly sellType: FieldRef<"Post", 'SellType'>
    readonly quantity: FieldRef<"Post", 'Int'>
    readonly auctionStartPrice: FieldRef<"Post", 'Float'>
    readonly auctionStepPrice: FieldRef<"Post", 'Float'>
    readonly auctionDepositAmount: FieldRef<"Post", 'Float'>
    readonly auctionStartAt: FieldRef<"Post", 'DateTime'>
    readonly auctionEndAt: FieldRef<"Post", 'DateTime'>
    readonly auctionStatus: FieldRef<"Post", 'AuctionStatus'>
    readonly soldAt: FieldRef<"Post", 'DateTime'>
    readonly soldToId: FieldRef<"Post", 'String'>
    readonly soldPrice: FieldRef<"Post", 'Float'>
    readonly sellerConfirmedAt: FieldRef<"Post", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Post findUnique
   */
  export type PostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findFirst
   */
  export type PostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findMany
   */
  export type PostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Posts to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post create
   */
  export type PostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to create a Post.
     */
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }

  /**
   * Post createMany
   */
  export type PostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post createManyAndReturn
   */
  export type PostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Post update
   */
  export type PostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to update a Post.
     */
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
  }

  /**
   * Post upsert
   */
  export type PostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The filter to search for the Post to update in case it exists.
     */
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     */
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }

  /**
   * Post delete
   */
  export type PostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter which Post to delete.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posts to delete
     */
    where?: PostWhereInput
  }

  /**
   * Post.soldTo
   */
  export type Post$soldToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Post.comments
   */
  export type Post$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Post.likes
   */
  export type Post$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Post.tags
   */
  export type Post$tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    where?: PostTagWhereInput
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    cursor?: PostTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * Post.purchases
   */
  export type Post$purchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    where?: PostPurchaseWhereInput
    orderBy?: PostPurchaseOrderByWithRelationInput | PostPurchaseOrderByWithRelationInput[]
    cursor?: PostPurchaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostPurchaseScalarFieldEnum | PostPurchaseScalarFieldEnum[]
  }

  /**
   * Post.auctionDeposits
   */
  export type Post$auctionDepositsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    where?: AuctionDepositWhereInput
    orderBy?: AuctionDepositOrderByWithRelationInput | AuctionDepositOrderByWithRelationInput[]
    cursor?: AuctionDepositWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuctionDepositScalarFieldEnum | AuctionDepositScalarFieldEnum[]
  }

  /**
   * Post.auctionBids
   */
  export type Post$auctionBidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    where?: AuctionBidWhereInput
    orderBy?: AuctionBidOrderByWithRelationInput | AuctionBidOrderByWithRelationInput[]
    cursor?: AuctionBidWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuctionBidScalarFieldEnum | AuctionBidScalarFieldEnum[]
  }

  /**
   * Post.auctionPayment
   */
  export type Post$auctionPaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    where?: AuctionPaymentWhereInput
  }

  /**
   * Post.flashSales
   */
  export type Post$flashSalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    where?: FlashSaleWhereInput
    orderBy?: FlashSaleOrderByWithRelationInput | FlashSaleOrderByWithRelationInput[]
    cursor?: FlashSaleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlashSaleScalarFieldEnum | FlashSaleScalarFieldEnum[]
  }

  /**
   * Post without action
   */
  export type PostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
  }


  /**
   * Model Tag
   */

  export type AggregateTag = {
    _count: TagCountAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  export type TagMinAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type TagMaxAggregateOutputType = {
    id: string | null
    name: string | null
  }

  export type TagCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type TagMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type TagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tag to aggregate.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tags
    **/
    _count?: true | TagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagMaxAggregateInputType
  }

  export type GetTagAggregateType<T extends TagAggregateArgs> = {
        [P in keyof T & keyof AggregateTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTag[P]>
      : GetScalarType<T[P], AggregateTag[P]>
  }




  export type TagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagWhereInput
    orderBy?: TagOrderByWithAggregationInput | TagOrderByWithAggregationInput[]
    by: TagScalarFieldEnum[] | TagScalarFieldEnum
    having?: TagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagCountAggregateInputType | true
    _min?: TagMinAggregateInputType
    _max?: TagMaxAggregateInputType
  }

  export type TagGroupByOutputType = {
    id: string
    name: string
    _count: TagCountAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  type GetTagGroupByPayload<T extends TagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagGroupByOutputType[P]>
            : GetScalarType<T[P], TagGroupByOutputType[P]>
        }
      >
    >


  export type TagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    posts?: boolean | Tag$postsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tag"]>

  export type TagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["tag"]>

  export type TagSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type TagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | Tag$postsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tag"
    objects: {
      posts: Prisma.$PostTagPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
    }, ExtArgs["result"]["tag"]>
    composites: {}
  }

  type TagGetPayload<S extends boolean | null | undefined | TagDefaultArgs> = $Result.GetResult<Prisma.$TagPayload, S>

  type TagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TagFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TagCountAggregateInputType | true
    }

  export interface TagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tag'], meta: { name: 'Tag' } }
    /**
     * Find zero or one Tag that matches the filter.
     * @param {TagFindUniqueArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TagFindUniqueArgs>(args: SelectSubset<T, TagFindUniqueArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tag that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TagFindUniqueOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TagFindUniqueOrThrowArgs>(args: SelectSubset<T, TagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TagFindFirstArgs>(args?: SelectSubset<T, TagFindFirstArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TagFindFirstOrThrowArgs>(args?: SelectSubset<T, TagFindFirstOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tag.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagWithIdOnly = await prisma.tag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TagFindManyArgs>(args?: SelectSubset<T, TagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tag.
     * @param {TagCreateArgs} args - Arguments to create a Tag.
     * @example
     * // Create one Tag
     * const Tag = await prisma.tag.create({
     *   data: {
     *     // ... data to create a Tag
     *   }
     * })
     * 
     */
    create<T extends TagCreateArgs>(args: SelectSubset<T, TagCreateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tags.
     * @param {TagCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TagCreateManyArgs>(args?: SelectSubset<T, TagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tags and returns the data saved in the database.
     * @param {TagCreateManyAndReturnArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tags and only return the `id`
     * const tagWithIdOnly = await prisma.tag.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TagCreateManyAndReturnArgs>(args?: SelectSubset<T, TagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tag.
     * @param {TagDeleteArgs} args - Arguments to delete one Tag.
     * @example
     * // Delete one Tag
     * const Tag = await prisma.tag.delete({
     *   where: {
     *     // ... filter to delete one Tag
     *   }
     * })
     * 
     */
    delete<T extends TagDeleteArgs>(args: SelectSubset<T, TagDeleteArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tag.
     * @param {TagUpdateArgs} args - Arguments to update one Tag.
     * @example
     * // Update one Tag
     * const tag = await prisma.tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TagUpdateArgs>(args: SelectSubset<T, TagUpdateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tags.
     * @param {TagDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TagDeleteManyArgs>(args?: SelectSubset<T, TagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tag = await prisma.tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TagUpdateManyArgs>(args: SelectSubset<T, TagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tag.
     * @param {TagUpsertArgs} args - Arguments to update or create a Tag.
     * @example
     * // Update or create a Tag
     * const tag = await prisma.tag.upsert({
     *   create: {
     *     // ... data to create a Tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tag we want to update
     *   }
     * })
     */
    upsert<T extends TagUpsertArgs>(args: SelectSubset<T, TagUpsertArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tag.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends TagCountArgs>(
      args?: Subset<T, TagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagAggregateArgs>(args: Subset<T, TagAggregateArgs>): Prisma.PrismaPromise<GetTagAggregateType<T>>

    /**
     * Group by Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TagGroupByArgs['orderBy'] }
        : { orderBy?: TagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tag model
   */
  readonly fields: TagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends Tag$postsArgs<ExtArgs> = {}>(args?: Subset<T, Tag$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tag model
   */ 
  interface TagFieldRefs {
    readonly id: FieldRef<"Tag", 'String'>
    readonly name: FieldRef<"Tag", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Tag findUnique
   */
  export type TagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findUniqueOrThrow
   */
  export type TagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findFirst
   */
  export type TagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findFirstOrThrow
   */
  export type TagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findMany
   */
  export type TagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag create
   */
  export type TagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to create a Tag.
     */
    data: XOR<TagCreateInput, TagUncheckedCreateInput>
  }

  /**
   * Tag createMany
   */
  export type TagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tags.
     */
    data: TagCreateManyInput | TagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tag createManyAndReturn
   */
  export type TagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Tags.
     */
    data: TagCreateManyInput | TagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tag update
   */
  export type TagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to update a Tag.
     */
    data: XOR<TagUpdateInput, TagUncheckedUpdateInput>
    /**
     * Choose, which Tag to update.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag updateMany
   */
  export type TagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tags.
     */
    data: XOR<TagUpdateManyMutationInput, TagUncheckedUpdateManyInput>
    /**
     * Filter which Tags to update
     */
    where?: TagWhereInput
  }

  /**
   * Tag upsert
   */
  export type TagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The filter to search for the Tag to update in case it exists.
     */
    where: TagWhereUniqueInput
    /**
     * In case the Tag found by the `where` argument doesn't exist, create a new Tag with this data.
     */
    create: XOR<TagCreateInput, TagUncheckedCreateInput>
    /**
     * In case the Tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TagUpdateInput, TagUncheckedUpdateInput>
  }

  /**
   * Tag delete
   */
  export type TagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter which Tag to delete.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag deleteMany
   */
  export type TagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to delete
     */
    where?: TagWhereInput
  }

  /**
   * Tag.posts
   */
  export type Tag$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    where?: PostTagWhereInput
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    cursor?: PostTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * Tag without action
   */
  export type TagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
  }


  /**
   * Model PostTag
   */

  export type AggregatePostTag = {
    _count: PostTagCountAggregateOutputType | null
    _min: PostTagMinAggregateOutputType | null
    _max: PostTagMaxAggregateOutputType | null
  }

  export type PostTagMinAggregateOutputType = {
    postId: string | null
    tagId: string | null
  }

  export type PostTagMaxAggregateOutputType = {
    postId: string | null
    tagId: string | null
  }

  export type PostTagCountAggregateOutputType = {
    postId: number
    tagId: number
    _all: number
  }


  export type PostTagMinAggregateInputType = {
    postId?: true
    tagId?: true
  }

  export type PostTagMaxAggregateInputType = {
    postId?: true
    tagId?: true
  }

  export type PostTagCountAggregateInputType = {
    postId?: true
    tagId?: true
    _all?: true
  }

  export type PostTagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PostTag to aggregate.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PostTags
    **/
    _count?: true | PostTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostTagMaxAggregateInputType
  }

  export type GetPostTagAggregateType<T extends PostTagAggregateArgs> = {
        [P in keyof T & keyof AggregatePostTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePostTag[P]>
      : GetScalarType<T[P], AggregatePostTag[P]>
  }




  export type PostTagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostTagWhereInput
    orderBy?: PostTagOrderByWithAggregationInput | PostTagOrderByWithAggregationInput[]
    by: PostTagScalarFieldEnum[] | PostTagScalarFieldEnum
    having?: PostTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostTagCountAggregateInputType | true
    _min?: PostTagMinAggregateInputType
    _max?: PostTagMaxAggregateInputType
  }

  export type PostTagGroupByOutputType = {
    postId: string
    tagId: string
    _count: PostTagCountAggregateOutputType | null
    _min: PostTagMinAggregateOutputType | null
    _max: PostTagMaxAggregateOutputType | null
  }

  type GetPostTagGroupByPayload<T extends PostTagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostTagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostTagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostTagGroupByOutputType[P]>
            : GetScalarType<T[P], PostTagGroupByOutputType[P]>
        }
      >
    >


  export type PostTagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    postId?: boolean
    tagId?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["postTag"]>

  export type PostTagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    postId?: boolean
    tagId?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["postTag"]>

  export type PostTagSelectScalar = {
    postId?: boolean
    tagId?: boolean
  }

  export type PostTagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }
  export type PostTagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }

  export type $PostTagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PostTag"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      tag: Prisma.$TagPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      postId: string
      tagId: string
    }, ExtArgs["result"]["postTag"]>
    composites: {}
  }

  type PostTagGetPayload<S extends boolean | null | undefined | PostTagDefaultArgs> = $Result.GetResult<Prisma.$PostTagPayload, S>

  type PostTagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PostTagFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PostTagCountAggregateInputType | true
    }

  export interface PostTagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PostTag'], meta: { name: 'PostTag' } }
    /**
     * Find zero or one PostTag that matches the filter.
     * @param {PostTagFindUniqueArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostTagFindUniqueArgs>(args: SelectSubset<T, PostTagFindUniqueArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PostTag that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PostTagFindUniqueOrThrowArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostTagFindUniqueOrThrowArgs>(args: SelectSubset<T, PostTagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PostTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagFindFirstArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostTagFindFirstArgs>(args?: SelectSubset<T, PostTagFindFirstArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PostTag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagFindFirstOrThrowArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostTagFindFirstOrThrowArgs>(args?: SelectSubset<T, PostTagFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PostTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PostTags
     * const postTags = await prisma.postTag.findMany()
     * 
     * // Get first 10 PostTags
     * const postTags = await prisma.postTag.findMany({ take: 10 })
     * 
     * // Only select the `postId`
     * const postTagWithPostIdOnly = await prisma.postTag.findMany({ select: { postId: true } })
     * 
     */
    findMany<T extends PostTagFindManyArgs>(args?: SelectSubset<T, PostTagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PostTag.
     * @param {PostTagCreateArgs} args - Arguments to create a PostTag.
     * @example
     * // Create one PostTag
     * const PostTag = await prisma.postTag.create({
     *   data: {
     *     // ... data to create a PostTag
     *   }
     * })
     * 
     */
    create<T extends PostTagCreateArgs>(args: SelectSubset<T, PostTagCreateArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PostTags.
     * @param {PostTagCreateManyArgs} args - Arguments to create many PostTags.
     * @example
     * // Create many PostTags
     * const postTag = await prisma.postTag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostTagCreateManyArgs>(args?: SelectSubset<T, PostTagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PostTags and returns the data saved in the database.
     * @param {PostTagCreateManyAndReturnArgs} args - Arguments to create many PostTags.
     * @example
     * // Create many PostTags
     * const postTag = await prisma.postTag.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PostTags and only return the `postId`
     * const postTagWithPostIdOnly = await prisma.postTag.createManyAndReturn({ 
     *   select: { postId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostTagCreateManyAndReturnArgs>(args?: SelectSubset<T, PostTagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PostTag.
     * @param {PostTagDeleteArgs} args - Arguments to delete one PostTag.
     * @example
     * // Delete one PostTag
     * const PostTag = await prisma.postTag.delete({
     *   where: {
     *     // ... filter to delete one PostTag
     *   }
     * })
     * 
     */
    delete<T extends PostTagDeleteArgs>(args: SelectSubset<T, PostTagDeleteArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PostTag.
     * @param {PostTagUpdateArgs} args - Arguments to update one PostTag.
     * @example
     * // Update one PostTag
     * const postTag = await prisma.postTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostTagUpdateArgs>(args: SelectSubset<T, PostTagUpdateArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PostTags.
     * @param {PostTagDeleteManyArgs} args - Arguments to filter PostTags to delete.
     * @example
     * // Delete a few PostTags
     * const { count } = await prisma.postTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostTagDeleteManyArgs>(args?: SelectSubset<T, PostTagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PostTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PostTags
     * const postTag = await prisma.postTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostTagUpdateManyArgs>(args: SelectSubset<T, PostTagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PostTag.
     * @param {PostTagUpsertArgs} args - Arguments to update or create a PostTag.
     * @example
     * // Update or create a PostTag
     * const postTag = await prisma.postTag.upsert({
     *   create: {
     *     // ... data to create a PostTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PostTag we want to update
     *   }
     * })
     */
    upsert<T extends PostTagUpsertArgs>(args: SelectSubset<T, PostTagUpsertArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PostTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagCountArgs} args - Arguments to filter PostTags to count.
     * @example
     * // Count the number of PostTags
     * const count = await prisma.postTag.count({
     *   where: {
     *     // ... the filter for the PostTags we want to count
     *   }
     * })
    **/
    count<T extends PostTagCountArgs>(
      args?: Subset<T, PostTagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PostTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostTagAggregateArgs>(args: Subset<T, PostTagAggregateArgs>): Prisma.PrismaPromise<GetPostTagAggregateType<T>>

    /**
     * Group by PostTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostTagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostTagGroupByArgs['orderBy'] }
        : { orderBy?: PostTagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PostTag model
   */
  readonly fields: PostTagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PostTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostTagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tag<T extends TagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagDefaultArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PostTag model
   */ 
  interface PostTagFieldRefs {
    readonly postId: FieldRef<"PostTag", 'String'>
    readonly tagId: FieldRef<"PostTag", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PostTag findUnique
   */
  export type PostTagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag findUniqueOrThrow
   */
  export type PostTagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag findFirst
   */
  export type PostTagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PostTags.
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PostTags.
     */
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * PostTag findFirstOrThrow
   */
  export type PostTagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PostTags.
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PostTags.
     */
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * PostTag findMany
   */
  export type PostTagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTags to fetch.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PostTags.
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * PostTag create
   */
  export type PostTagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * The data needed to create a PostTag.
     */
    data: XOR<PostTagCreateInput, PostTagUncheckedCreateInput>
  }

  /**
   * PostTag createMany
   */
  export type PostTagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PostTags.
     */
    data: PostTagCreateManyInput | PostTagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PostTag createManyAndReturn
   */
  export type PostTagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PostTags.
     */
    data: PostTagCreateManyInput | PostTagCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PostTag update
   */
  export type PostTagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * The data needed to update a PostTag.
     */
    data: XOR<PostTagUpdateInput, PostTagUncheckedUpdateInput>
    /**
     * Choose, which PostTag to update.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag updateMany
   */
  export type PostTagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PostTags.
     */
    data: XOR<PostTagUpdateManyMutationInput, PostTagUncheckedUpdateManyInput>
    /**
     * Filter which PostTags to update
     */
    where?: PostTagWhereInput
  }

  /**
   * PostTag upsert
   */
  export type PostTagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * The filter to search for the PostTag to update in case it exists.
     */
    where: PostTagWhereUniqueInput
    /**
     * In case the PostTag found by the `where` argument doesn't exist, create a new PostTag with this data.
     */
    create: XOR<PostTagCreateInput, PostTagUncheckedCreateInput>
    /**
     * In case the PostTag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostTagUpdateInput, PostTagUncheckedUpdateInput>
  }

  /**
   * PostTag delete
   */
  export type PostTagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter which PostTag to delete.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag deleteMany
   */
  export type PostTagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PostTags to delete
     */
    where?: PostTagWhereInput
  }

  /**
   * PostTag without action
   */
  export type PostTagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
  }


  /**
   * Model Comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentAvgAggregateOutputType = {
    likesCount: number | null
  }

  export type CommentSumAggregateOutputType = {
    likesCount: number | null
  }

  export type CommentMinAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    content: string | null
    isAnonymous: boolean | null
    likesCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
    parentId: string | null
  }

  export type CommentMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    content: string | null
    isAnonymous: boolean | null
    likesCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
    parentId: string | null
  }

  export type CommentCountAggregateOutputType = {
    id: number
    postId: number
    userId: number
    content: number
    isAnonymous: number
    likesCount: number
    createdAt: number
    updatedAt: number
    parentId: number
    _all: number
  }


  export type CommentAvgAggregateInputType = {
    likesCount?: true
  }

  export type CommentSumAggregateInputType = {
    likesCount?: true
  }

  export type CommentMinAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    content?: true
    isAnonymous?: true
    likesCount?: true
    createdAt?: true
    updatedAt?: true
    parentId?: true
  }

  export type CommentMaxAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    content?: true
    isAnonymous?: true
    likesCount?: true
    createdAt?: true
    updatedAt?: true
    parentId?: true
  }

  export type CommentCountAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    content?: true
    isAnonymous?: true
    likesCount?: true
    createdAt?: true
    updatedAt?: true
    parentId?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comment to aggregate.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type CommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithAggregationInput | CommentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: CommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _avg?: CommentAvgAggregateInputType
    _sum?: CommentSumAggregateInputType
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    id: string
    postId: string
    userId: string
    content: string
    isAnonymous: boolean
    likesCount: number
    createdAt: Date
    updatedAt: Date
    parentId: string | null
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends CommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type CommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    content?: boolean
    isAnonymous?: boolean
    likesCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentId?: boolean
    parent?: boolean | Comment$parentArgs<ExtArgs>
    replies?: boolean | Comment$repliesArgs<ExtArgs>
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    likes?: boolean | Comment$likesArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    content?: boolean
    isAnonymous?: boolean
    likesCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentId?: boolean
    parent?: boolean | Comment$parentArgs<ExtArgs>
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectScalar = {
    id?: boolean
    postId?: boolean
    userId?: boolean
    content?: boolean
    isAnonymous?: boolean
    likesCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentId?: boolean
  }

  export type CommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Comment$parentArgs<ExtArgs>
    replies?: boolean | Comment$repliesArgs<ExtArgs>
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    likes?: boolean | Comment$likesArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | Comment$parentArgs<ExtArgs>
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comment"
    objects: {
      parent: Prisma.$CommentPayload<ExtArgs> | null
      replies: Prisma.$CommentPayload<ExtArgs>[]
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      likes: Prisma.$LikePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      userId: string
      content: string
      isAnonymous: boolean
      likesCount: number
      createdAt: Date
      updatedAt: Date
      parentId: string | null
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type CommentGetPayload<S extends boolean | null | undefined | CommentDefaultArgs> = $Result.GetResult<Prisma.$CommentPayload, S>

  type CommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CommentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface CommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comment'], meta: { name: 'Comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {CommentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentFindUniqueArgs>(args: SelectSubset<T, CommentFindUniqueArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CommentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentFindFirstArgs>(args?: SelectSubset<T, CommentFindFirstArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentWithIdOnly = await prisma.comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentFindManyArgs>(args?: SelectSubset<T, CommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Comment.
     * @param {CommentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends CommentCreateArgs>(args: SelectSubset<T, CommentCreateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Comments.
     * @param {CommentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCreateManyArgs>(args?: SelectSubset<T, CommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments and returns the data saved in the database.
     * @param {CommentCreateManyAndReturnArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommentCreateManyAndReturnArgs>(args?: SelectSubset<T, CommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Comment.
     * @param {CommentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends CommentDeleteArgs>(args: SelectSubset<T, CommentDeleteArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Comment.
     * @param {CommentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentUpdateArgs>(args: SelectSubset<T, CommentUpdateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Comments.
     * @param {CommentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentDeleteManyArgs>(args?: SelectSubset<T, CommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentUpdateManyArgs>(args: SelectSubset<T, CommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Comment.
     * @param {CommentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends CommentUpsertArgs>(args: SelectSubset<T, CommentUpsertArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentCountArgs>(
      args?: Subset<T, CommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentGroupByArgs['orderBy'] }
        : { orderBy?: CommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comment model
   */
  readonly fields: CommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends Comment$parentArgs<ExtArgs> = {}>(args?: Subset<T, Comment$parentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    replies<T extends Comment$repliesArgs<ExtArgs> = {}>(args?: Subset<T, Comment$repliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany"> | Null>
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    likes<T extends Comment$likesArgs<ExtArgs> = {}>(args?: Subset<T, Comment$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comment model
   */ 
  interface CommentFieldRefs {
    readonly id: FieldRef<"Comment", 'String'>
    readonly postId: FieldRef<"Comment", 'String'>
    readonly userId: FieldRef<"Comment", 'String'>
    readonly content: FieldRef<"Comment", 'String'>
    readonly isAnonymous: FieldRef<"Comment", 'Boolean'>
    readonly likesCount: FieldRef<"Comment", 'Int'>
    readonly createdAt: FieldRef<"Comment", 'DateTime'>
    readonly updatedAt: FieldRef<"Comment", 'DateTime'>
    readonly parentId: FieldRef<"Comment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Comment findUnique
   */
  export type CommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findUniqueOrThrow
   */
  export type CommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findFirst
   */
  export type CommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findFirstOrThrow
   */
  export type CommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findMany
   */
  export type CommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment create
   */
  export type CommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to create a Comment.
     */
    data: XOR<CommentCreateInput, CommentUncheckedCreateInput>
  }

  /**
   * Comment createMany
   */
  export type CommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comment createManyAndReturn
   */
  export type CommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment update
   */
  export type CommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to update a Comment.
     */
    data: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
    /**
     * Choose, which Comment to update.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment updateMany
   */
  export type CommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
  }

  /**
   * Comment upsert
   */
  export type CommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The filter to search for the Comment to update in case it exists.
     */
    where: CommentWhereUniqueInput
    /**
     * In case the Comment found by the `where` argument doesn't exist, create a new Comment with this data.
     */
    create: XOR<CommentCreateInput, CommentUncheckedCreateInput>
    /**
     * In case the Comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
  }

  /**
   * Comment delete
   */
  export type CommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter which Comment to delete.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment deleteMany
   */
  export type CommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentWhereInput
  }

  /**
   * Comment.parent
   */
  export type Comment$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * Comment.replies
   */
  export type Comment$repliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment.likes
   */
  export type Comment$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Comment without action
   */
  export type CommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
  }


  /**
   * Model Like
   */

  export type AggregateLike = {
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
  }

  export type LikeMinAggregateOutputType = {
    id: string | null
    userId: string | null
    postId: string | null
    commentId: string | null
    createdAt: Date | null
  }

  export type LikeMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    postId: string | null
    commentId: string | null
    createdAt: Date | null
  }

  export type LikeCountAggregateOutputType = {
    id: number
    userId: number
    postId: number
    commentId: number
    createdAt: number
    _all: number
  }


  export type LikeMinAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    commentId?: true
    createdAt?: true
  }

  export type LikeMaxAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    commentId?: true
    createdAt?: true
  }

  export type LikeCountAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    commentId?: true
    createdAt?: true
    _all?: true
  }

  export type LikeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Like to aggregate.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Likes
    **/
    _count?: true | LikeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LikeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LikeMaxAggregateInputType
  }

  export type GetLikeAggregateType<T extends LikeAggregateArgs> = {
        [P in keyof T & keyof AggregateLike]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLike[P]>
      : GetScalarType<T[P], AggregateLike[P]>
  }




  export type LikeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithAggregationInput | LikeOrderByWithAggregationInput[]
    by: LikeScalarFieldEnum[] | LikeScalarFieldEnum
    having?: LikeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikeCountAggregateInputType | true
    _min?: LikeMinAggregateInputType
    _max?: LikeMaxAggregateInputType
  }

  export type LikeGroupByOutputType = {
    id: string
    userId: string
    postId: string | null
    commentId: string | null
    createdAt: Date
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
  }

  type GetLikeGroupByPayload<T extends LikeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LikeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LikeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LikeGroupByOutputType[P]>
            : GetScalarType<T[P], LikeGroupByOutputType[P]>
        }
      >
    >


  export type LikeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    postId?: boolean
    commentId?: boolean
    createdAt?: boolean
    comment?: boolean | Like$commentArgs<ExtArgs>
    post?: boolean | Like$postArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    postId?: boolean
    commentId?: boolean
    createdAt?: boolean
    comment?: boolean | Like$commentArgs<ExtArgs>
    post?: boolean | Like$postArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectScalar = {
    id?: boolean
    userId?: boolean
    postId?: boolean
    commentId?: boolean
    createdAt?: boolean
  }

  export type LikeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comment?: boolean | Like$commentArgs<ExtArgs>
    post?: boolean | Like$postArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LikeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comment?: boolean | Like$commentArgs<ExtArgs>
    post?: boolean | Like$postArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LikePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Like"
    objects: {
      comment: Prisma.$CommentPayload<ExtArgs> | null
      post: Prisma.$PostPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      postId: string | null
      commentId: string | null
      createdAt: Date
    }, ExtArgs["result"]["like"]>
    composites: {}
  }

  type LikeGetPayload<S extends boolean | null | undefined | LikeDefaultArgs> = $Result.GetResult<Prisma.$LikePayload, S>

  type LikeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LikeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LikeCountAggregateInputType | true
    }

  export interface LikeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Like'], meta: { name: 'Like' } }
    /**
     * Find zero or one Like that matches the filter.
     * @param {LikeFindUniqueArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LikeFindUniqueArgs>(args: SelectSubset<T, LikeFindUniqueArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Like that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LikeFindUniqueOrThrowArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LikeFindUniqueOrThrowArgs>(args: SelectSubset<T, LikeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Like that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindFirstArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LikeFindFirstArgs>(args?: SelectSubset<T, LikeFindFirstArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Like that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindFirstOrThrowArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LikeFindFirstOrThrowArgs>(args?: SelectSubset<T, LikeFindFirstOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Likes
     * const likes = await prisma.like.findMany()
     * 
     * // Get first 10 Likes
     * const likes = await prisma.like.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const likeWithIdOnly = await prisma.like.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LikeFindManyArgs>(args?: SelectSubset<T, LikeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Like.
     * @param {LikeCreateArgs} args - Arguments to create a Like.
     * @example
     * // Create one Like
     * const Like = await prisma.like.create({
     *   data: {
     *     // ... data to create a Like
     *   }
     * })
     * 
     */
    create<T extends LikeCreateArgs>(args: SelectSubset<T, LikeCreateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Likes.
     * @param {LikeCreateManyArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const like = await prisma.like.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LikeCreateManyArgs>(args?: SelectSubset<T, LikeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Likes and returns the data saved in the database.
     * @param {LikeCreateManyAndReturnArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const like = await prisma.like.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Likes and only return the `id`
     * const likeWithIdOnly = await prisma.like.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LikeCreateManyAndReturnArgs>(args?: SelectSubset<T, LikeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Like.
     * @param {LikeDeleteArgs} args - Arguments to delete one Like.
     * @example
     * // Delete one Like
     * const Like = await prisma.like.delete({
     *   where: {
     *     // ... filter to delete one Like
     *   }
     * })
     * 
     */
    delete<T extends LikeDeleteArgs>(args: SelectSubset<T, LikeDeleteArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Like.
     * @param {LikeUpdateArgs} args - Arguments to update one Like.
     * @example
     * // Update one Like
     * const like = await prisma.like.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LikeUpdateArgs>(args: SelectSubset<T, LikeUpdateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Likes.
     * @param {LikeDeleteManyArgs} args - Arguments to filter Likes to delete.
     * @example
     * // Delete a few Likes
     * const { count } = await prisma.like.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LikeDeleteManyArgs>(args?: SelectSubset<T, LikeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Likes
     * const like = await prisma.like.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LikeUpdateManyArgs>(args: SelectSubset<T, LikeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Like.
     * @param {LikeUpsertArgs} args - Arguments to update or create a Like.
     * @example
     * // Update or create a Like
     * const like = await prisma.like.upsert({
     *   create: {
     *     // ... data to create a Like
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Like we want to update
     *   }
     * })
     */
    upsert<T extends LikeUpsertArgs>(args: SelectSubset<T, LikeUpsertArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeCountArgs} args - Arguments to filter Likes to count.
     * @example
     * // Count the number of Likes
     * const count = await prisma.like.count({
     *   where: {
     *     // ... the filter for the Likes we want to count
     *   }
     * })
    **/
    count<T extends LikeCountArgs>(
      args?: Subset<T, LikeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LikeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LikeAggregateArgs>(args: Subset<T, LikeAggregateArgs>): Prisma.PrismaPromise<GetLikeAggregateType<T>>

    /**
     * Group by Like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LikeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LikeGroupByArgs['orderBy'] }
        : { orderBy?: LikeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LikeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Like model
   */
  readonly fields: LikeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Like.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LikeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comment<T extends Like$commentArgs<ExtArgs> = {}>(args?: Subset<T, Like$commentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    post<T extends Like$postArgs<ExtArgs> = {}>(args?: Subset<T, Like$postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Like model
   */ 
  interface LikeFieldRefs {
    readonly id: FieldRef<"Like", 'String'>
    readonly userId: FieldRef<"Like", 'String'>
    readonly postId: FieldRef<"Like", 'String'>
    readonly commentId: FieldRef<"Like", 'String'>
    readonly createdAt: FieldRef<"Like", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Like findUnique
   */
  export type LikeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like findUniqueOrThrow
   */
  export type LikeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like findFirst
   */
  export type LikeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like findFirstOrThrow
   */
  export type LikeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like findMany
   */
  export type LikeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like create
   */
  export type LikeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The data needed to create a Like.
     */
    data: XOR<LikeCreateInput, LikeUncheckedCreateInput>
  }

  /**
   * Like createMany
   */
  export type LikeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Likes.
     */
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Like createManyAndReturn
   */
  export type LikeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Likes.
     */
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Like update
   */
  export type LikeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The data needed to update a Like.
     */
    data: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
    /**
     * Choose, which Like to update.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like updateMany
   */
  export type LikeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Likes.
     */
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyInput>
    /**
     * Filter which Likes to update
     */
    where?: LikeWhereInput
  }

  /**
   * Like upsert
   */
  export type LikeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The filter to search for the Like to update in case it exists.
     */
    where: LikeWhereUniqueInput
    /**
     * In case the Like found by the `where` argument doesn't exist, create a new Like with this data.
     */
    create: XOR<LikeCreateInput, LikeUncheckedCreateInput>
    /**
     * In case the Like was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
  }

  /**
   * Like delete
   */
  export type LikeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter which Like to delete.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like deleteMany
   */
  export type LikeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Likes to delete
     */
    where?: LikeWhereInput
  }

  /**
   * Like.comment
   */
  export type Like$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * Like.post
   */
  export type Like$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * Like without action
   */
  export type LikeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
  }


  /**
   * Model Subscription
   */

  export type AggregateSubscription = {
    _count: SubscriptionCountAggregateOutputType | null
    _avg: SubscriptionAvgAggregateOutputType | null
    _sum: SubscriptionSumAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  export type SubscriptionAvgAggregateOutputType = {
    price: number | null
    paymentAmount: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type SubscriptionSumAggregateOutputType = {
    price: number | null
    paymentAmount: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type SubscriptionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    creatorId: string | null
    plan: string | null
    price: number | null
    currency: string | null
    subscribedAt: Date | null
    validUntil: Date | null
    isActive: boolean | null
    txSignature: string | null
    paymentStatus: $Enums.PaymentStatus | null
    paymentAmount: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type SubscriptionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    creatorId: string | null
    plan: string | null
    price: number | null
    currency: string | null
    subscribedAt: Date | null
    validUntil: Date | null
    isActive: boolean | null
    txSignature: string | null
    paymentStatus: $Enums.PaymentStatus | null
    paymentAmount: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type SubscriptionCountAggregateOutputType = {
    id: number
    userId: number
    creatorId: number
    plan: number
    price: number
    currency: number
    subscribedAt: number
    validUntil: number
    isActive: number
    txSignature: number
    paymentStatus: number
    paymentAmount: number
    platformFee: number
    referrerFee: number
    creatorAmount: number
    _all: number
  }


  export type SubscriptionAvgAggregateInputType = {
    price?: true
    paymentAmount?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type SubscriptionSumAggregateInputType = {
    price?: true
    paymentAmount?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type SubscriptionMinAggregateInputType = {
    id?: true
    userId?: true
    creatorId?: true
    plan?: true
    price?: true
    currency?: true
    subscribedAt?: true
    validUntil?: true
    isActive?: true
    txSignature?: true
    paymentStatus?: true
    paymentAmount?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type SubscriptionMaxAggregateInputType = {
    id?: true
    userId?: true
    creatorId?: true
    plan?: true
    price?: true
    currency?: true
    subscribedAt?: true
    validUntil?: true
    isActive?: true
    txSignature?: true
    paymentStatus?: true
    paymentAmount?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type SubscriptionCountAggregateInputType = {
    id?: true
    userId?: true
    creatorId?: true
    plan?: true
    price?: true
    currency?: true
    subscribedAt?: true
    validUntil?: true
    isActive?: true
    txSignature?: true
    paymentStatus?: true
    paymentAmount?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
    _all?: true
  }

  export type SubscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscription to aggregate.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subscriptions
    **/
    _count?: true | SubscriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionMaxAggregateInputType
  }

  export type GetSubscriptionAggregateType<T extends SubscriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription[P]>
      : GetScalarType<T[P], AggregateSubscription[P]>
  }




  export type SubscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithAggregationInput | SubscriptionOrderByWithAggregationInput[]
    by: SubscriptionScalarFieldEnum[] | SubscriptionScalarFieldEnum
    having?: SubscriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionCountAggregateInputType | true
    _avg?: SubscriptionAvgAggregateInputType
    _sum?: SubscriptionSumAggregateInputType
    _min?: SubscriptionMinAggregateInputType
    _max?: SubscriptionMaxAggregateInputType
  }

  export type SubscriptionGroupByOutputType = {
    id: string
    userId: string
    creatorId: string
    plan: string
    price: number
    currency: string
    subscribedAt: Date
    validUntil: Date
    isActive: boolean
    txSignature: string | null
    paymentStatus: $Enums.PaymentStatus
    paymentAmount: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
    _count: SubscriptionCountAggregateOutputType | null
    _avg: SubscriptionAvgAggregateOutputType | null
    _sum: SubscriptionSumAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  type GetSubscriptionGroupByPayload<T extends SubscriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    creatorId?: boolean
    plan?: boolean
    price?: boolean
    currency?: boolean
    subscribedAt?: boolean
    validUntil?: boolean
    isActive?: boolean
    txSignature?: boolean
    paymentStatus?: boolean
    paymentAmount?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    creatorAmount?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | Subscription$transactionsArgs<ExtArgs>
    _count?: boolean | SubscriptionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    creatorId?: boolean
    plan?: boolean
    price?: boolean
    currency?: boolean
    subscribedAt?: boolean
    validUntil?: boolean
    isActive?: boolean
    txSignature?: boolean
    paymentStatus?: boolean
    paymentAmount?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    creatorAmount?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectScalar = {
    id?: boolean
    userId?: boolean
    creatorId?: boolean
    plan?: boolean
    price?: boolean
    currency?: boolean
    subscribedAt?: boolean
    validUntil?: boolean
    isActive?: boolean
    txSignature?: boolean
    paymentStatus?: boolean
    paymentAmount?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    creatorAmount?: boolean
  }

  export type SubscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
    transactions?: boolean | Subscription$transactionsArgs<ExtArgs>
    _count?: boolean | SubscriptionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SubscriptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SubscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subscription"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      creator: Prisma.$UserPayload<ExtArgs>
      transactions: Prisma.$TransactionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      creatorId: string
      plan: string
      price: number
      currency: string
      subscribedAt: Date
      validUntil: Date
      isActive: boolean
      txSignature: string | null
      paymentStatus: $Enums.PaymentStatus
      paymentAmount: number | null
      platformFee: number | null
      referrerFee: number | null
      creatorAmount: number | null
    }, ExtArgs["result"]["subscription"]>
    composites: {}
  }

  type SubscriptionGetPayload<S extends boolean | null | undefined | SubscriptionDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionPayload, S>

  type SubscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubscriptionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubscriptionCountAggregateInputType | true
    }

  export interface SubscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subscription'], meta: { name: 'Subscription' } }
    /**
     * Find zero or one Subscription that matches the filter.
     * @param {SubscriptionFindUniqueArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionFindUniqueArgs>(args: SelectSubset<T, SubscriptionFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Subscription that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubscriptionFindUniqueOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Subscription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionFindFirstArgs>(args?: SelectSubset<T, SubscriptionFindFirstArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Subscription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscription.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionFindManyArgs>(args?: SelectSubset<T, SubscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Subscription.
     * @param {SubscriptionCreateArgs} args - Arguments to create a Subscription.
     * @example
     * // Create one Subscription
     * const Subscription = await prisma.subscription.create({
     *   data: {
     *     // ... data to create a Subscription
     *   }
     * })
     * 
     */
    create<T extends SubscriptionCreateArgs>(args: SelectSubset<T, SubscriptionCreateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Subscriptions.
     * @param {SubscriptionCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionCreateManyArgs>(args?: SelectSubset<T, SubscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {SubscriptionCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Subscription.
     * @param {SubscriptionDeleteArgs} args - Arguments to delete one Subscription.
     * @example
     * // Delete one Subscription
     * const Subscription = await prisma.subscription.delete({
     *   where: {
     *     // ... filter to delete one Subscription
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionDeleteArgs>(args: SelectSubset<T, SubscriptionDeleteArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Subscription.
     * @param {SubscriptionUpdateArgs} args - Arguments to update one Subscription.
     * @example
     * // Update one Subscription
     * const subscription = await prisma.subscription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionUpdateArgs>(args: SelectSubset<T, SubscriptionUpdateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Subscriptions.
     * @param {SubscriptionDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionDeleteManyArgs>(args?: SelectSubset<T, SubscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionUpdateManyArgs>(args: SelectSubset<T, SubscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subscription.
     * @param {SubscriptionUpsertArgs} args - Arguments to update or create a Subscription.
     * @example
     * // Update or create a Subscription
     * const subscription = await prisma.subscription.upsert({
     *   create: {
     *     // ... data to create a Subscription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionUpsertArgs>(args: SelectSubset<T, SubscriptionUpsertArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscription.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionCountArgs>(
      args?: Subset<T, SubscriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionAggregateArgs>(args: Subset<T, SubscriptionAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionAggregateType<T>>

    /**
     * Group by Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subscription model
   */
  readonly fields: SubscriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subscription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    transactions<T extends Subscription$transactionsArgs<ExtArgs> = {}>(args?: Subset<T, Subscription$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subscription model
   */ 
  interface SubscriptionFieldRefs {
    readonly id: FieldRef<"Subscription", 'String'>
    readonly userId: FieldRef<"Subscription", 'String'>
    readonly creatorId: FieldRef<"Subscription", 'String'>
    readonly plan: FieldRef<"Subscription", 'String'>
    readonly price: FieldRef<"Subscription", 'Float'>
    readonly currency: FieldRef<"Subscription", 'String'>
    readonly subscribedAt: FieldRef<"Subscription", 'DateTime'>
    readonly validUntil: FieldRef<"Subscription", 'DateTime'>
    readonly isActive: FieldRef<"Subscription", 'Boolean'>
    readonly txSignature: FieldRef<"Subscription", 'String'>
    readonly paymentStatus: FieldRef<"Subscription", 'PaymentStatus'>
    readonly paymentAmount: FieldRef<"Subscription", 'Float'>
    readonly platformFee: FieldRef<"Subscription", 'Float'>
    readonly referrerFee: FieldRef<"Subscription", 'Float'>
    readonly creatorAmount: FieldRef<"Subscription", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Subscription findUnique
   */
  export type SubscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findUniqueOrThrow
   */
  export type SubscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findFirst
   */
  export type SubscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findFirstOrThrow
   */
  export type SubscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findMany
   */
  export type SubscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription create
   */
  export type SubscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to create a Subscription.
     */
    data: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
  }

  /**
   * Subscription createMany
   */
  export type SubscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subscription createManyAndReturn
   */
  export type SubscriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscription update
   */
  export type SubscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to update a Subscription.
     */
    data: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
    /**
     * Choose, which Subscription to update.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription updateMany
   */
  export type SubscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subscriptions.
     */
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyInput>
    /**
     * Filter which Subscriptions to update
     */
    where?: SubscriptionWhereInput
  }

  /**
   * Subscription upsert
   */
  export type SubscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The filter to search for the Subscription to update in case it exists.
     */
    where: SubscriptionWhereUniqueInput
    /**
     * In case the Subscription found by the `where` argument doesn't exist, create a new Subscription with this data.
     */
    create: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
    /**
     * In case the Subscription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
  }

  /**
   * Subscription delete
   */
  export type SubscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter which Subscription to delete.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription deleteMany
   */
  export type SubscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscriptions to delete
     */
    where?: SubscriptionWhereInput
  }

  /**
   * Subscription.transactions
   */
  export type Subscription$transactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    cursor?: TransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Subscription without action
   */
  export type SubscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
  }


  /**
   * Model Follow
   */

  export type AggregateFollow = {
    _count: FollowCountAggregateOutputType | null
    _min: FollowMinAggregateOutputType | null
    _max: FollowMaxAggregateOutputType | null
  }

  export type FollowMinAggregateOutputType = {
    id: string | null
    followerId: string | null
    followingId: string | null
    createdAt: Date | null
  }

  export type FollowMaxAggregateOutputType = {
    id: string | null
    followerId: string | null
    followingId: string | null
    createdAt: Date | null
  }

  export type FollowCountAggregateOutputType = {
    id: number
    followerId: number
    followingId: number
    createdAt: number
    _all: number
  }


  export type FollowMinAggregateInputType = {
    id?: true
    followerId?: true
    followingId?: true
    createdAt?: true
  }

  export type FollowMaxAggregateInputType = {
    id?: true
    followerId?: true
    followingId?: true
    createdAt?: true
  }

  export type FollowCountAggregateInputType = {
    id?: true
    followerId?: true
    followingId?: true
    createdAt?: true
    _all?: true
  }

  export type FollowAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Follow to aggregate.
     */
    where?: FollowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Follows to fetch.
     */
    orderBy?: FollowOrderByWithRelationInput | FollowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FollowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Follows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Follows
    **/
    _count?: true | FollowCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FollowMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FollowMaxAggregateInputType
  }

  export type GetFollowAggregateType<T extends FollowAggregateArgs> = {
        [P in keyof T & keyof AggregateFollow]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFollow[P]>
      : GetScalarType<T[P], AggregateFollow[P]>
  }




  export type FollowGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FollowWhereInput
    orderBy?: FollowOrderByWithAggregationInput | FollowOrderByWithAggregationInput[]
    by: FollowScalarFieldEnum[] | FollowScalarFieldEnum
    having?: FollowScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FollowCountAggregateInputType | true
    _min?: FollowMinAggregateInputType
    _max?: FollowMaxAggregateInputType
  }

  export type FollowGroupByOutputType = {
    id: string
    followerId: string
    followingId: string
    createdAt: Date
    _count: FollowCountAggregateOutputType | null
    _min: FollowMinAggregateOutputType | null
    _max: FollowMaxAggregateOutputType | null
  }

  type GetFollowGroupByPayload<T extends FollowGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FollowGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FollowGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FollowGroupByOutputType[P]>
            : GetScalarType<T[P], FollowGroupByOutputType[P]>
        }
      >
    >


  export type FollowSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    followerId?: boolean
    followingId?: boolean
    createdAt?: boolean
    follower?: boolean | UserDefaultArgs<ExtArgs>
    following?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow"]>

  export type FollowSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    followerId?: boolean
    followingId?: boolean
    createdAt?: boolean
    follower?: boolean | UserDefaultArgs<ExtArgs>
    following?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow"]>

  export type FollowSelectScalar = {
    id?: boolean
    followerId?: boolean
    followingId?: boolean
    createdAt?: boolean
  }

  export type FollowInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follower?: boolean | UserDefaultArgs<ExtArgs>
    following?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FollowIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follower?: boolean | UserDefaultArgs<ExtArgs>
    following?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FollowPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Follow"
    objects: {
      follower: Prisma.$UserPayload<ExtArgs>
      following: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      followerId: string
      followingId: string
      createdAt: Date
    }, ExtArgs["result"]["follow"]>
    composites: {}
  }

  type FollowGetPayload<S extends boolean | null | undefined | FollowDefaultArgs> = $Result.GetResult<Prisma.$FollowPayload, S>

  type FollowCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FollowFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FollowCountAggregateInputType | true
    }

  export interface FollowDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Follow'], meta: { name: 'Follow' } }
    /**
     * Find zero or one Follow that matches the filter.
     * @param {FollowFindUniqueArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FollowFindUniqueArgs>(args: SelectSubset<T, FollowFindUniqueArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Follow that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FollowFindUniqueOrThrowArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FollowFindUniqueOrThrowArgs>(args: SelectSubset<T, FollowFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Follow that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowFindFirstArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FollowFindFirstArgs>(args?: SelectSubset<T, FollowFindFirstArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Follow that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowFindFirstOrThrowArgs} args - Arguments to find a Follow
     * @example
     * // Get one Follow
     * const follow = await prisma.follow.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FollowFindFirstOrThrowArgs>(args?: SelectSubset<T, FollowFindFirstOrThrowArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Follows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Follows
     * const follows = await prisma.follow.findMany()
     * 
     * // Get first 10 Follows
     * const follows = await prisma.follow.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const followWithIdOnly = await prisma.follow.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FollowFindManyArgs>(args?: SelectSubset<T, FollowFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Follow.
     * @param {FollowCreateArgs} args - Arguments to create a Follow.
     * @example
     * // Create one Follow
     * const Follow = await prisma.follow.create({
     *   data: {
     *     // ... data to create a Follow
     *   }
     * })
     * 
     */
    create<T extends FollowCreateArgs>(args: SelectSubset<T, FollowCreateArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Follows.
     * @param {FollowCreateManyArgs} args - Arguments to create many Follows.
     * @example
     * // Create many Follows
     * const follow = await prisma.follow.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FollowCreateManyArgs>(args?: SelectSubset<T, FollowCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Follows and returns the data saved in the database.
     * @param {FollowCreateManyAndReturnArgs} args - Arguments to create many Follows.
     * @example
     * // Create many Follows
     * const follow = await prisma.follow.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Follows and only return the `id`
     * const followWithIdOnly = await prisma.follow.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FollowCreateManyAndReturnArgs>(args?: SelectSubset<T, FollowCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Follow.
     * @param {FollowDeleteArgs} args - Arguments to delete one Follow.
     * @example
     * // Delete one Follow
     * const Follow = await prisma.follow.delete({
     *   where: {
     *     // ... filter to delete one Follow
     *   }
     * })
     * 
     */
    delete<T extends FollowDeleteArgs>(args: SelectSubset<T, FollowDeleteArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Follow.
     * @param {FollowUpdateArgs} args - Arguments to update one Follow.
     * @example
     * // Update one Follow
     * const follow = await prisma.follow.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FollowUpdateArgs>(args: SelectSubset<T, FollowUpdateArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Follows.
     * @param {FollowDeleteManyArgs} args - Arguments to filter Follows to delete.
     * @example
     * // Delete a few Follows
     * const { count } = await prisma.follow.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FollowDeleteManyArgs>(args?: SelectSubset<T, FollowDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Follows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Follows
     * const follow = await prisma.follow.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FollowUpdateManyArgs>(args: SelectSubset<T, FollowUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Follow.
     * @param {FollowUpsertArgs} args - Arguments to update or create a Follow.
     * @example
     * // Update or create a Follow
     * const follow = await prisma.follow.upsert({
     *   create: {
     *     // ... data to create a Follow
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Follow we want to update
     *   }
     * })
     */
    upsert<T extends FollowUpsertArgs>(args: SelectSubset<T, FollowUpsertArgs<ExtArgs>>): Prisma__FollowClient<$Result.GetResult<Prisma.$FollowPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Follows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowCountArgs} args - Arguments to filter Follows to count.
     * @example
     * // Count the number of Follows
     * const count = await prisma.follow.count({
     *   where: {
     *     // ... the filter for the Follows we want to count
     *   }
     * })
    **/
    count<T extends FollowCountArgs>(
      args?: Subset<T, FollowCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FollowCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Follow.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FollowAggregateArgs>(args: Subset<T, FollowAggregateArgs>): Prisma.PrismaPromise<GetFollowAggregateType<T>>

    /**
     * Group by Follow.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FollowGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FollowGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FollowGroupByArgs['orderBy'] }
        : { orderBy?: FollowGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FollowGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFollowGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Follow model
   */
  readonly fields: FollowFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Follow.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FollowClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    follower<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    following<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Follow model
   */ 
  interface FollowFieldRefs {
    readonly id: FieldRef<"Follow", 'String'>
    readonly followerId: FieldRef<"Follow", 'String'>
    readonly followingId: FieldRef<"Follow", 'String'>
    readonly createdAt: FieldRef<"Follow", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Follow findUnique
   */
  export type FollowFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * Filter, which Follow to fetch.
     */
    where: FollowWhereUniqueInput
  }

  /**
   * Follow findUniqueOrThrow
   */
  export type FollowFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * Filter, which Follow to fetch.
     */
    where: FollowWhereUniqueInput
  }

  /**
   * Follow findFirst
   */
  export type FollowFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * Filter, which Follow to fetch.
     */
    where?: FollowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Follows to fetch.
     */
    orderBy?: FollowOrderByWithRelationInput | FollowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Follows.
     */
    cursor?: FollowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Follows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Follows.
     */
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * Follow findFirstOrThrow
   */
  export type FollowFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * Filter, which Follow to fetch.
     */
    where?: FollowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Follows to fetch.
     */
    orderBy?: FollowOrderByWithRelationInput | FollowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Follows.
     */
    cursor?: FollowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Follows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Follows.
     */
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * Follow findMany
   */
  export type FollowFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * Filter, which Follows to fetch.
     */
    where?: FollowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Follows to fetch.
     */
    orderBy?: FollowOrderByWithRelationInput | FollowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Follows.
     */
    cursor?: FollowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Follows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Follows.
     */
    skip?: number
    distinct?: FollowScalarFieldEnum | FollowScalarFieldEnum[]
  }

  /**
   * Follow create
   */
  export type FollowCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * The data needed to create a Follow.
     */
    data: XOR<FollowCreateInput, FollowUncheckedCreateInput>
  }

  /**
   * Follow createMany
   */
  export type FollowCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Follows.
     */
    data: FollowCreateManyInput | FollowCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Follow createManyAndReturn
   */
  export type FollowCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Follows.
     */
    data: FollowCreateManyInput | FollowCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Follow update
   */
  export type FollowUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * The data needed to update a Follow.
     */
    data: XOR<FollowUpdateInput, FollowUncheckedUpdateInput>
    /**
     * Choose, which Follow to update.
     */
    where: FollowWhereUniqueInput
  }

  /**
   * Follow updateMany
   */
  export type FollowUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Follows.
     */
    data: XOR<FollowUpdateManyMutationInput, FollowUncheckedUpdateManyInput>
    /**
     * Filter which Follows to update
     */
    where?: FollowWhereInput
  }

  /**
   * Follow upsert
   */
  export type FollowUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * The filter to search for the Follow to update in case it exists.
     */
    where: FollowWhereUniqueInput
    /**
     * In case the Follow found by the `where` argument doesn't exist, create a new Follow with this data.
     */
    create: XOR<FollowCreateInput, FollowUncheckedCreateInput>
    /**
     * In case the Follow was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FollowUpdateInput, FollowUncheckedUpdateInput>
  }

  /**
   * Follow delete
   */
  export type FollowDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
    /**
     * Filter which Follow to delete.
     */
    where: FollowWhereUniqueInput
  }

  /**
   * Follow deleteMany
   */
  export type FollowDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Follows to delete
     */
    where?: FollowWhereInput
  }

  /**
   * Follow without action
   */
  export type FollowDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow
     */
    select?: FollowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FollowInclude<ExtArgs> | null
  }


  /**
   * Model Transaction
   */

  export type AggregateTransaction = {
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  export type TransactionAvgAggregateOutputType = {
    amount: number | null
    platformFee: number | null
    referrerFee: number | null
  }

  export type TransactionSumAggregateOutputType = {
    amount: number | null
    platformFee: number | null
    referrerFee: number | null
  }

  export type TransactionMinAggregateOutputType = {
    id: string | null
    subscriptionId: string | null
    postPurchaseId: string | null
    txSignature: string | null
    fromWallet: string | null
    toWallet: string | null
    amount: number | null
    currency: string | null
    type: $Enums.TransactionType | null
    status: $Enums.TransactionStatus | null
    senderId: string | null
    receiverId: string | null
    platformFee: number | null
    referrerFee: number | null
    referrerWallet: string | null
    errorMessage: string | null
    confirmedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransactionMaxAggregateOutputType = {
    id: string | null
    subscriptionId: string | null
    postPurchaseId: string | null
    txSignature: string | null
    fromWallet: string | null
    toWallet: string | null
    amount: number | null
    currency: string | null
    type: $Enums.TransactionType | null
    status: $Enums.TransactionStatus | null
    senderId: string | null
    receiverId: string | null
    platformFee: number | null
    referrerFee: number | null
    referrerWallet: string | null
    errorMessage: string | null
    confirmedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TransactionCountAggregateOutputType = {
    id: number
    subscriptionId: number
    postPurchaseId: number
    txSignature: number
    fromWallet: number
    toWallet: number
    amount: number
    currency: number
    type: number
    status: number
    senderId: number
    receiverId: number
    platformFee: number
    referrerFee: number
    referrerWallet: number
    metadata: number
    errorMessage: number
    confirmedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TransactionAvgAggregateInputType = {
    amount?: true
    platformFee?: true
    referrerFee?: true
  }

  export type TransactionSumAggregateInputType = {
    amount?: true
    platformFee?: true
    referrerFee?: true
  }

  export type TransactionMinAggregateInputType = {
    id?: true
    subscriptionId?: true
    postPurchaseId?: true
    txSignature?: true
    fromWallet?: true
    toWallet?: true
    amount?: true
    currency?: true
    type?: true
    status?: true
    senderId?: true
    receiverId?: true
    platformFee?: true
    referrerFee?: true
    referrerWallet?: true
    errorMessage?: true
    confirmedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransactionMaxAggregateInputType = {
    id?: true
    subscriptionId?: true
    postPurchaseId?: true
    txSignature?: true
    fromWallet?: true
    toWallet?: true
    amount?: true
    currency?: true
    type?: true
    status?: true
    senderId?: true
    receiverId?: true
    platformFee?: true
    referrerFee?: true
    referrerWallet?: true
    errorMessage?: true
    confirmedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TransactionCountAggregateInputType = {
    id?: true
    subscriptionId?: true
    postPurchaseId?: true
    txSignature?: true
    fromWallet?: true
    toWallet?: true
    amount?: true
    currency?: true
    type?: true
    status?: true
    senderId?: true
    receiverId?: true
    platformFee?: true
    referrerFee?: true
    referrerWallet?: true
    metadata?: true
    errorMessage?: true
    confirmedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transaction to aggregate.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transactions
    **/
    _count?: true | TransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransactionMaxAggregateInputType
  }

  export type GetTransactionAggregateType<T extends TransactionAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaction[P]>
      : GetScalarType<T[P], AggregateTransaction[P]>
  }




  export type TransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransactionWhereInput
    orderBy?: TransactionOrderByWithAggregationInput | TransactionOrderByWithAggregationInput[]
    by: TransactionScalarFieldEnum[] | TransactionScalarFieldEnum
    having?: TransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransactionCountAggregateInputType | true
    _avg?: TransactionAvgAggregateInputType
    _sum?: TransactionSumAggregateInputType
    _min?: TransactionMinAggregateInputType
    _max?: TransactionMaxAggregateInputType
  }

  export type TransactionGroupByOutputType = {
    id: string
    subscriptionId: string | null
    postPurchaseId: string | null
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency: string
    type: $Enums.TransactionType
    status: $Enums.TransactionStatus
    senderId: string | null
    receiverId: string | null
    platformFee: number | null
    referrerFee: number | null
    referrerWallet: string | null
    metadata: JsonValue | null
    errorMessage: string | null
    confirmedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: TransactionCountAggregateOutputType | null
    _avg: TransactionAvgAggregateOutputType | null
    _sum: TransactionSumAggregateOutputType | null
    _min: TransactionMinAggregateOutputType | null
    _max: TransactionMaxAggregateOutputType | null
  }

  type GetTransactionGroupByPayload<T extends TransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransactionGroupByOutputType[P]>
            : GetScalarType<T[P], TransactionGroupByOutputType[P]>
        }
      >
    >


  export type TransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscriptionId?: boolean
    postPurchaseId?: boolean
    txSignature?: boolean
    fromWallet?: boolean
    toWallet?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    senderId?: boolean
    receiverId?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    referrerWallet?: boolean
    metadata?: boolean
    errorMessage?: boolean
    confirmedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    subscription?: boolean | Transaction$subscriptionArgs<ExtArgs>
    postPurchase?: boolean | Transaction$postPurchaseArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscriptionId?: boolean
    postPurchaseId?: boolean
    txSignature?: boolean
    fromWallet?: boolean
    toWallet?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    senderId?: boolean
    receiverId?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    referrerWallet?: boolean
    metadata?: boolean
    errorMessage?: boolean
    confirmedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    subscription?: boolean | Transaction$subscriptionArgs<ExtArgs>
    postPurchase?: boolean | Transaction$postPurchaseArgs<ExtArgs>
  }, ExtArgs["result"]["transaction"]>

  export type TransactionSelectScalar = {
    id?: boolean
    subscriptionId?: boolean
    postPurchaseId?: boolean
    txSignature?: boolean
    fromWallet?: boolean
    toWallet?: boolean
    amount?: boolean
    currency?: boolean
    type?: boolean
    status?: boolean
    senderId?: boolean
    receiverId?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    referrerWallet?: boolean
    metadata?: boolean
    errorMessage?: boolean
    confirmedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | Transaction$subscriptionArgs<ExtArgs>
    postPurchase?: boolean | Transaction$postPurchaseArgs<ExtArgs>
  }
  export type TransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription?: boolean | Transaction$subscriptionArgs<ExtArgs>
    postPurchase?: boolean | Transaction$postPurchaseArgs<ExtArgs>
  }

  export type $TransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transaction"
    objects: {
      subscription: Prisma.$SubscriptionPayload<ExtArgs> | null
      postPurchase: Prisma.$PostPurchasePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      subscriptionId: string | null
      postPurchaseId: string | null
      txSignature: string
      fromWallet: string
      toWallet: string
      amount: number
      currency: string
      type: $Enums.TransactionType
      status: $Enums.TransactionStatus
      senderId: string | null
      receiverId: string | null
      platformFee: number | null
      referrerFee: number | null
      referrerWallet: string | null
      metadata: Prisma.JsonValue | null
      errorMessage: string | null
      confirmedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["transaction"]>
    composites: {}
  }

  type TransactionGetPayload<S extends boolean | null | undefined | TransactionDefaultArgs> = $Result.GetResult<Prisma.$TransactionPayload, S>

  type TransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TransactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TransactionCountAggregateInputType | true
    }

  export interface TransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transaction'], meta: { name: 'Transaction' } }
    /**
     * Find zero or one Transaction that matches the filter.
     * @param {TransactionFindUniqueArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransactionFindUniqueArgs>(args: SelectSubset<T, TransactionFindUniqueArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Transaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TransactionFindUniqueOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, TransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Transaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindFirstArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransactionFindFirstArgs>(args?: SelectSubset<T, TransactionFindFirstArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Transaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindFirstOrThrowArgs} args - Arguments to find a Transaction
     * @example
     * // Get one Transaction
     * const transaction = await prisma.transaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, TransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Transactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transactions
     * const transactions = await prisma.transaction.findMany()
     * 
     * // Get first 10 Transactions
     * const transactions = await prisma.transaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transactionWithIdOnly = await prisma.transaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransactionFindManyArgs>(args?: SelectSubset<T, TransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Transaction.
     * @param {TransactionCreateArgs} args - Arguments to create a Transaction.
     * @example
     * // Create one Transaction
     * const Transaction = await prisma.transaction.create({
     *   data: {
     *     // ... data to create a Transaction
     *   }
     * })
     * 
     */
    create<T extends TransactionCreateArgs>(args: SelectSubset<T, TransactionCreateArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Transactions.
     * @param {TransactionCreateManyArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransactionCreateManyArgs>(args?: SelectSubset<T, TransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transactions and returns the data saved in the database.
     * @param {TransactionCreateManyAndReturnArgs} args - Arguments to create many Transactions.
     * @example
     * // Create many Transactions
     * const transaction = await prisma.transaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transactions and only return the `id`
     * const transactionWithIdOnly = await prisma.transaction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, TransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Transaction.
     * @param {TransactionDeleteArgs} args - Arguments to delete one Transaction.
     * @example
     * // Delete one Transaction
     * const Transaction = await prisma.transaction.delete({
     *   where: {
     *     // ... filter to delete one Transaction
     *   }
     * })
     * 
     */
    delete<T extends TransactionDeleteArgs>(args: SelectSubset<T, TransactionDeleteArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Transaction.
     * @param {TransactionUpdateArgs} args - Arguments to update one Transaction.
     * @example
     * // Update one Transaction
     * const transaction = await prisma.transaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransactionUpdateArgs>(args: SelectSubset<T, TransactionUpdateArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Transactions.
     * @param {TransactionDeleteManyArgs} args - Arguments to filter Transactions to delete.
     * @example
     * // Delete a few Transactions
     * const { count } = await prisma.transaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransactionDeleteManyArgs>(args?: SelectSubset<T, TransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transactions
     * const transaction = await prisma.transaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransactionUpdateManyArgs>(args: SelectSubset<T, TransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Transaction.
     * @param {TransactionUpsertArgs} args - Arguments to update or create a Transaction.
     * @example
     * // Update or create a Transaction
     * const transaction = await prisma.transaction.upsert({
     *   create: {
     *     // ... data to create a Transaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaction we want to update
     *   }
     * })
     */
    upsert<T extends TransactionUpsertArgs>(args: SelectSubset<T, TransactionUpsertArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Transactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionCountArgs} args - Arguments to filter Transactions to count.
     * @example
     * // Count the number of Transactions
     * const count = await prisma.transaction.count({
     *   where: {
     *     // ... the filter for the Transactions we want to count
     *   }
     * })
    **/
    count<T extends TransactionCountArgs>(
      args?: Subset<T, TransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransactionAggregateArgs>(args: Subset<T, TransactionAggregateArgs>): Prisma.PrismaPromise<GetTransactionAggregateType<T>>

    /**
     * Group by Transaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransactionGroupByArgs['orderBy'] }
        : { orderBy?: TransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transaction model
   */
  readonly fields: TransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscription<T extends Transaction$subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$subscriptionArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    postPurchase<T extends Transaction$postPurchaseArgs<ExtArgs> = {}>(args?: Subset<T, Transaction$postPurchaseArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transaction model
   */ 
  interface TransactionFieldRefs {
    readonly id: FieldRef<"Transaction", 'String'>
    readonly subscriptionId: FieldRef<"Transaction", 'String'>
    readonly postPurchaseId: FieldRef<"Transaction", 'String'>
    readonly txSignature: FieldRef<"Transaction", 'String'>
    readonly fromWallet: FieldRef<"Transaction", 'String'>
    readonly toWallet: FieldRef<"Transaction", 'String'>
    readonly amount: FieldRef<"Transaction", 'Float'>
    readonly currency: FieldRef<"Transaction", 'String'>
    readonly type: FieldRef<"Transaction", 'TransactionType'>
    readonly status: FieldRef<"Transaction", 'TransactionStatus'>
    readonly senderId: FieldRef<"Transaction", 'String'>
    readonly receiverId: FieldRef<"Transaction", 'String'>
    readonly platformFee: FieldRef<"Transaction", 'Float'>
    readonly referrerFee: FieldRef<"Transaction", 'Float'>
    readonly referrerWallet: FieldRef<"Transaction", 'String'>
    readonly metadata: FieldRef<"Transaction", 'Json'>
    readonly errorMessage: FieldRef<"Transaction", 'String'>
    readonly confirmedAt: FieldRef<"Transaction", 'DateTime'>
    readonly createdAt: FieldRef<"Transaction", 'DateTime'>
    readonly updatedAt: FieldRef<"Transaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Transaction findUnique
   */
  export type TransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction findUniqueOrThrow
   */
  export type TransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction findFirst
   */
  export type TransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction findFirstOrThrow
   */
  export type TransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transaction to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transactions.
     */
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction findMany
   */
  export type TransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter, which Transactions to fetch.
     */
    where?: TransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transactions to fetch.
     */
    orderBy?: TransactionOrderByWithRelationInput | TransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transactions.
     */
    cursor?: TransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transactions.
     */
    skip?: number
    distinct?: TransactionScalarFieldEnum | TransactionScalarFieldEnum[]
  }

  /**
   * Transaction create
   */
  export type TransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a Transaction.
     */
    data: XOR<TransactionCreateInput, TransactionUncheckedCreateInput>
  }

  /**
   * Transaction createMany
   */
  export type TransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transactions.
     */
    data: TransactionCreateManyInput | TransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transaction createManyAndReturn
   */
  export type TransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Transactions.
     */
    data: TransactionCreateManyInput | TransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transaction update
   */
  export type TransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a Transaction.
     */
    data: XOR<TransactionUpdateInput, TransactionUncheckedUpdateInput>
    /**
     * Choose, which Transaction to update.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction updateMany
   */
  export type TransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transactions.
     */
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyInput>
    /**
     * Filter which Transactions to update
     */
    where?: TransactionWhereInput
  }

  /**
   * Transaction upsert
   */
  export type TransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the Transaction to update in case it exists.
     */
    where: TransactionWhereUniqueInput
    /**
     * In case the Transaction found by the `where` argument doesn't exist, create a new Transaction with this data.
     */
    create: XOR<TransactionCreateInput, TransactionUncheckedCreateInput>
    /**
     * In case the Transaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransactionUpdateInput, TransactionUncheckedUpdateInput>
  }

  /**
   * Transaction delete
   */
  export type TransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    /**
     * Filter which Transaction to delete.
     */
    where: TransactionWhereUniqueInput
  }

  /**
   * Transaction deleteMany
   */
  export type TransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transactions to delete
     */
    where?: TransactionWhereInput
  }

  /**
   * Transaction.subscription
   */
  export type Transaction$subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
  }

  /**
   * Transaction.postPurchase
   */
  export type Transaction$postPurchaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    where?: PostPurchaseWhereInput
  }

  /**
   * Transaction without action
   */
  export type TransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountSumAggregateOutputType = {
    expires_at: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refresh_token: number
    access_token: number
    expires_at: number
    token_type: number
    scope: number
    id_token: number
    session_state: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expires_at?: true
  }

  export type AccountSumAggregateInputType = {
    expires_at?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refresh_token?: true
    access_token?: true
    expires_at?: true
    token_type?: true
    scope?: true
    id_token?: true
    session_state?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token: string | null
    access_token: string | null
    expires_at: number | null
    token_type: string | null
    scope: string | null
    id_token: string | null
    session_state: string | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refresh_token?: boolean
    access_token?: boolean
    expires_at?: boolean
    token_type?: boolean
    scope?: boolean
    id_token?: boolean
    session_state?: boolean
  }

  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refresh_token: string | null
      access_token: string | null
      expires_at: number | null
      token_type: string | null
      scope: string | null
      id_token: string | null
      session_state: string | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */ 
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refresh_token: FieldRef<"Account", 'String'>
    readonly access_token: FieldRef<"Account", 'String'>
    readonly expires_at: FieldRef<"Account", 'Int'>
    readonly token_type: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly id_token: FieldRef<"Account", 'String'>
    readonly session_state: FieldRef<"Account", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expires: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: string
    expires: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
  }

  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: string
      expires: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */ 
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model PostPurchase
   */

  export type AggregatePostPurchase = {
    _count: PostPurchaseCountAggregateOutputType | null
    _avg: PostPurchaseAvgAggregateOutputType | null
    _sum: PostPurchaseSumAggregateOutputType | null
    _min: PostPurchaseMinAggregateOutputType | null
    _max: PostPurchaseMaxAggregateOutputType | null
  }

  export type PostPurchaseAvgAggregateOutputType = {
    price: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type PostPurchaseSumAggregateOutputType = {
    price: number | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type PostPurchaseMinAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    price: number | null
    currency: string | null
    txSignature: string | null
    purchasedAt: Date | null
    paymentStatus: $Enums.PaymentStatus | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type PostPurchaseMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    price: number | null
    currency: string | null
    txSignature: string | null
    purchasedAt: Date | null
    paymentStatus: $Enums.PaymentStatus | null
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
  }

  export type PostPurchaseCountAggregateOutputType = {
    id: number
    postId: number
    userId: number
    price: number
    currency: number
    txSignature: number
    purchasedAt: number
    paymentStatus: number
    platformFee: number
    referrerFee: number
    creatorAmount: number
    _all: number
  }


  export type PostPurchaseAvgAggregateInputType = {
    price?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type PostPurchaseSumAggregateInputType = {
    price?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type PostPurchaseMinAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    price?: true
    currency?: true
    txSignature?: true
    purchasedAt?: true
    paymentStatus?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type PostPurchaseMaxAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    price?: true
    currency?: true
    txSignature?: true
    purchasedAt?: true
    paymentStatus?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
  }

  export type PostPurchaseCountAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    price?: true
    currency?: true
    txSignature?: true
    purchasedAt?: true
    paymentStatus?: true
    platformFee?: true
    referrerFee?: true
    creatorAmount?: true
    _all?: true
  }

  export type PostPurchaseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PostPurchase to aggregate.
     */
    where?: PostPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostPurchases to fetch.
     */
    orderBy?: PostPurchaseOrderByWithRelationInput | PostPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostPurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PostPurchases
    **/
    _count?: true | PostPurchaseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostPurchaseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostPurchaseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostPurchaseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostPurchaseMaxAggregateInputType
  }

  export type GetPostPurchaseAggregateType<T extends PostPurchaseAggregateArgs> = {
        [P in keyof T & keyof AggregatePostPurchase]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePostPurchase[P]>
      : GetScalarType<T[P], AggregatePostPurchase[P]>
  }




  export type PostPurchaseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostPurchaseWhereInput
    orderBy?: PostPurchaseOrderByWithAggregationInput | PostPurchaseOrderByWithAggregationInput[]
    by: PostPurchaseScalarFieldEnum[] | PostPurchaseScalarFieldEnum
    having?: PostPurchaseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostPurchaseCountAggregateInputType | true
    _avg?: PostPurchaseAvgAggregateInputType
    _sum?: PostPurchaseSumAggregateInputType
    _min?: PostPurchaseMinAggregateInputType
    _max?: PostPurchaseMaxAggregateInputType
  }

  export type PostPurchaseGroupByOutputType = {
    id: string
    postId: string
    userId: string
    price: number
    currency: string
    txSignature: string | null
    purchasedAt: Date
    paymentStatus: $Enums.PaymentStatus
    platformFee: number | null
    referrerFee: number | null
    creatorAmount: number | null
    _count: PostPurchaseCountAggregateOutputType | null
    _avg: PostPurchaseAvgAggregateOutputType | null
    _sum: PostPurchaseSumAggregateOutputType | null
    _min: PostPurchaseMinAggregateOutputType | null
    _max: PostPurchaseMaxAggregateOutputType | null
  }

  type GetPostPurchaseGroupByPayload<T extends PostPurchaseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostPurchaseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostPurchaseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostPurchaseGroupByOutputType[P]>
            : GetScalarType<T[P], PostPurchaseGroupByOutputType[P]>
        }
      >
    >


  export type PostPurchaseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    price?: boolean
    currency?: boolean
    txSignature?: boolean
    purchasedAt?: boolean
    paymentStatus?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    creatorAmount?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transaction?: boolean | PostPurchase$transactionArgs<ExtArgs>
  }, ExtArgs["result"]["postPurchase"]>

  export type PostPurchaseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    price?: boolean
    currency?: boolean
    txSignature?: boolean
    purchasedAt?: boolean
    paymentStatus?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    creatorAmount?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["postPurchase"]>

  export type PostPurchaseSelectScalar = {
    id?: boolean
    postId?: boolean
    userId?: boolean
    price?: boolean
    currency?: boolean
    txSignature?: boolean
    purchasedAt?: boolean
    paymentStatus?: boolean
    platformFee?: boolean
    referrerFee?: boolean
    creatorAmount?: boolean
  }

  export type PostPurchaseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    transaction?: boolean | PostPurchase$transactionArgs<ExtArgs>
  }
  export type PostPurchaseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PostPurchasePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PostPurchase"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      transaction: Prisma.$TransactionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      userId: string
      price: number
      currency: string
      txSignature: string | null
      purchasedAt: Date
      paymentStatus: $Enums.PaymentStatus
      platformFee: number | null
      referrerFee: number | null
      creatorAmount: number | null
    }, ExtArgs["result"]["postPurchase"]>
    composites: {}
  }

  type PostPurchaseGetPayload<S extends boolean | null | undefined | PostPurchaseDefaultArgs> = $Result.GetResult<Prisma.$PostPurchasePayload, S>

  type PostPurchaseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PostPurchaseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PostPurchaseCountAggregateInputType | true
    }

  export interface PostPurchaseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PostPurchase'], meta: { name: 'PostPurchase' } }
    /**
     * Find zero or one PostPurchase that matches the filter.
     * @param {PostPurchaseFindUniqueArgs} args - Arguments to find a PostPurchase
     * @example
     * // Get one PostPurchase
     * const postPurchase = await prisma.postPurchase.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostPurchaseFindUniqueArgs>(args: SelectSubset<T, PostPurchaseFindUniqueArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PostPurchase that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PostPurchaseFindUniqueOrThrowArgs} args - Arguments to find a PostPurchase
     * @example
     * // Get one PostPurchase
     * const postPurchase = await prisma.postPurchase.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostPurchaseFindUniqueOrThrowArgs>(args: SelectSubset<T, PostPurchaseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PostPurchase that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseFindFirstArgs} args - Arguments to find a PostPurchase
     * @example
     * // Get one PostPurchase
     * const postPurchase = await prisma.postPurchase.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostPurchaseFindFirstArgs>(args?: SelectSubset<T, PostPurchaseFindFirstArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PostPurchase that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseFindFirstOrThrowArgs} args - Arguments to find a PostPurchase
     * @example
     * // Get one PostPurchase
     * const postPurchase = await prisma.postPurchase.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostPurchaseFindFirstOrThrowArgs>(args?: SelectSubset<T, PostPurchaseFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PostPurchases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PostPurchases
     * const postPurchases = await prisma.postPurchase.findMany()
     * 
     * // Get first 10 PostPurchases
     * const postPurchases = await prisma.postPurchase.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postPurchaseWithIdOnly = await prisma.postPurchase.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostPurchaseFindManyArgs>(args?: SelectSubset<T, PostPurchaseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PostPurchase.
     * @param {PostPurchaseCreateArgs} args - Arguments to create a PostPurchase.
     * @example
     * // Create one PostPurchase
     * const PostPurchase = await prisma.postPurchase.create({
     *   data: {
     *     // ... data to create a PostPurchase
     *   }
     * })
     * 
     */
    create<T extends PostPurchaseCreateArgs>(args: SelectSubset<T, PostPurchaseCreateArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PostPurchases.
     * @param {PostPurchaseCreateManyArgs} args - Arguments to create many PostPurchases.
     * @example
     * // Create many PostPurchases
     * const postPurchase = await prisma.postPurchase.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostPurchaseCreateManyArgs>(args?: SelectSubset<T, PostPurchaseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PostPurchases and returns the data saved in the database.
     * @param {PostPurchaseCreateManyAndReturnArgs} args - Arguments to create many PostPurchases.
     * @example
     * // Create many PostPurchases
     * const postPurchase = await prisma.postPurchase.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PostPurchases and only return the `id`
     * const postPurchaseWithIdOnly = await prisma.postPurchase.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostPurchaseCreateManyAndReturnArgs>(args?: SelectSubset<T, PostPurchaseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PostPurchase.
     * @param {PostPurchaseDeleteArgs} args - Arguments to delete one PostPurchase.
     * @example
     * // Delete one PostPurchase
     * const PostPurchase = await prisma.postPurchase.delete({
     *   where: {
     *     // ... filter to delete one PostPurchase
     *   }
     * })
     * 
     */
    delete<T extends PostPurchaseDeleteArgs>(args: SelectSubset<T, PostPurchaseDeleteArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PostPurchase.
     * @param {PostPurchaseUpdateArgs} args - Arguments to update one PostPurchase.
     * @example
     * // Update one PostPurchase
     * const postPurchase = await prisma.postPurchase.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostPurchaseUpdateArgs>(args: SelectSubset<T, PostPurchaseUpdateArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PostPurchases.
     * @param {PostPurchaseDeleteManyArgs} args - Arguments to filter PostPurchases to delete.
     * @example
     * // Delete a few PostPurchases
     * const { count } = await prisma.postPurchase.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostPurchaseDeleteManyArgs>(args?: SelectSubset<T, PostPurchaseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PostPurchases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PostPurchases
     * const postPurchase = await prisma.postPurchase.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostPurchaseUpdateManyArgs>(args: SelectSubset<T, PostPurchaseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PostPurchase.
     * @param {PostPurchaseUpsertArgs} args - Arguments to update or create a PostPurchase.
     * @example
     * // Update or create a PostPurchase
     * const postPurchase = await prisma.postPurchase.upsert({
     *   create: {
     *     // ... data to create a PostPurchase
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PostPurchase we want to update
     *   }
     * })
     */
    upsert<T extends PostPurchaseUpsertArgs>(args: SelectSubset<T, PostPurchaseUpsertArgs<ExtArgs>>): Prisma__PostPurchaseClient<$Result.GetResult<Prisma.$PostPurchasePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PostPurchases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseCountArgs} args - Arguments to filter PostPurchases to count.
     * @example
     * // Count the number of PostPurchases
     * const count = await prisma.postPurchase.count({
     *   where: {
     *     // ... the filter for the PostPurchases we want to count
     *   }
     * })
    **/
    count<T extends PostPurchaseCountArgs>(
      args?: Subset<T, PostPurchaseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostPurchaseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PostPurchase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostPurchaseAggregateArgs>(args: Subset<T, PostPurchaseAggregateArgs>): Prisma.PrismaPromise<GetPostPurchaseAggregateType<T>>

    /**
     * Group by PostPurchase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostPurchaseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostPurchaseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostPurchaseGroupByArgs['orderBy'] }
        : { orderBy?: PostPurchaseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostPurchaseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostPurchaseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PostPurchase model
   */
  readonly fields: PostPurchaseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PostPurchase.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostPurchaseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    transaction<T extends PostPurchase$transactionArgs<ExtArgs> = {}>(args?: Subset<T, PostPurchase$transactionArgs<ExtArgs>>): Prisma__TransactionClient<$Result.GetResult<Prisma.$TransactionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PostPurchase model
   */ 
  interface PostPurchaseFieldRefs {
    readonly id: FieldRef<"PostPurchase", 'String'>
    readonly postId: FieldRef<"PostPurchase", 'String'>
    readonly userId: FieldRef<"PostPurchase", 'String'>
    readonly price: FieldRef<"PostPurchase", 'Float'>
    readonly currency: FieldRef<"PostPurchase", 'String'>
    readonly txSignature: FieldRef<"PostPurchase", 'String'>
    readonly purchasedAt: FieldRef<"PostPurchase", 'DateTime'>
    readonly paymentStatus: FieldRef<"PostPurchase", 'PaymentStatus'>
    readonly platformFee: FieldRef<"PostPurchase", 'Float'>
    readonly referrerFee: FieldRef<"PostPurchase", 'Float'>
    readonly creatorAmount: FieldRef<"PostPurchase", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * PostPurchase findUnique
   */
  export type PostPurchaseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PostPurchase to fetch.
     */
    where: PostPurchaseWhereUniqueInput
  }

  /**
   * PostPurchase findUniqueOrThrow
   */
  export type PostPurchaseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PostPurchase to fetch.
     */
    where: PostPurchaseWhereUniqueInput
  }

  /**
   * PostPurchase findFirst
   */
  export type PostPurchaseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PostPurchase to fetch.
     */
    where?: PostPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostPurchases to fetch.
     */
    orderBy?: PostPurchaseOrderByWithRelationInput | PostPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PostPurchases.
     */
    cursor?: PostPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostPurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PostPurchases.
     */
    distinct?: PostPurchaseScalarFieldEnum | PostPurchaseScalarFieldEnum[]
  }

  /**
   * PostPurchase findFirstOrThrow
   */
  export type PostPurchaseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PostPurchase to fetch.
     */
    where?: PostPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostPurchases to fetch.
     */
    orderBy?: PostPurchaseOrderByWithRelationInput | PostPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PostPurchases.
     */
    cursor?: PostPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostPurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PostPurchases.
     */
    distinct?: PostPurchaseScalarFieldEnum | PostPurchaseScalarFieldEnum[]
  }

  /**
   * PostPurchase findMany
   */
  export type PostPurchaseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PostPurchases to fetch.
     */
    where?: PostPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostPurchases to fetch.
     */
    orderBy?: PostPurchaseOrderByWithRelationInput | PostPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PostPurchases.
     */
    cursor?: PostPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostPurchases.
     */
    skip?: number
    distinct?: PostPurchaseScalarFieldEnum | PostPurchaseScalarFieldEnum[]
  }

  /**
   * PostPurchase create
   */
  export type PostPurchaseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * The data needed to create a PostPurchase.
     */
    data: XOR<PostPurchaseCreateInput, PostPurchaseUncheckedCreateInput>
  }

  /**
   * PostPurchase createMany
   */
  export type PostPurchaseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PostPurchases.
     */
    data: PostPurchaseCreateManyInput | PostPurchaseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PostPurchase createManyAndReturn
   */
  export type PostPurchaseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PostPurchases.
     */
    data: PostPurchaseCreateManyInput | PostPurchaseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PostPurchase update
   */
  export type PostPurchaseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * The data needed to update a PostPurchase.
     */
    data: XOR<PostPurchaseUpdateInput, PostPurchaseUncheckedUpdateInput>
    /**
     * Choose, which PostPurchase to update.
     */
    where: PostPurchaseWhereUniqueInput
  }

  /**
   * PostPurchase updateMany
   */
  export type PostPurchaseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PostPurchases.
     */
    data: XOR<PostPurchaseUpdateManyMutationInput, PostPurchaseUncheckedUpdateManyInput>
    /**
     * Filter which PostPurchases to update
     */
    where?: PostPurchaseWhereInput
  }

  /**
   * PostPurchase upsert
   */
  export type PostPurchaseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * The filter to search for the PostPurchase to update in case it exists.
     */
    where: PostPurchaseWhereUniqueInput
    /**
     * In case the PostPurchase found by the `where` argument doesn't exist, create a new PostPurchase with this data.
     */
    create: XOR<PostPurchaseCreateInput, PostPurchaseUncheckedCreateInput>
    /**
     * In case the PostPurchase was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostPurchaseUpdateInput, PostPurchaseUncheckedUpdateInput>
  }

  /**
   * PostPurchase delete
   */
  export type PostPurchaseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
    /**
     * Filter which PostPurchase to delete.
     */
    where: PostPurchaseWhereUniqueInput
  }

  /**
   * PostPurchase deleteMany
   */
  export type PostPurchaseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PostPurchases to delete
     */
    where?: PostPurchaseWhereInput
  }

  /**
   * PostPurchase.transaction
   */
  export type PostPurchase$transactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transaction
     */
    select?: TransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransactionInclude<ExtArgs> | null
    where?: TransactionWhereInput
  }

  /**
   * PostPurchase without action
   */
  export type PostPurchaseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostPurchase
     */
    select?: PostPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostPurchaseInclude<ExtArgs> | null
  }


  /**
   * Model UserSettings
   */

  export type AggregateUserSettings = {
    _count: UserSettingsCountAggregateOutputType | null
    _min: UserSettingsMinAggregateOutputType | null
    _max: UserSettingsMaxAggregateOutputType | null
  }

  export type UserSettingsMinAggregateOutputType = {
    id: string | null
    userId: string | null
    notifyComments: boolean | null
    notifyLikes: boolean | null
    notifyNewPosts: boolean | null
    notifySubscriptions: boolean | null
    showActivity: boolean | null
    allowMessages: boolean | null
    showOnlineStatus: boolean | null
    theme: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSettingsMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    notifyComments: boolean | null
    notifyLikes: boolean | null
    notifyNewPosts: boolean | null
    notifySubscriptions: boolean | null
    showActivity: boolean | null
    allowMessages: boolean | null
    showOnlineStatus: boolean | null
    theme: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSettingsCountAggregateOutputType = {
    id: number
    userId: number
    notifyComments: number
    notifyLikes: number
    notifyNewPosts: number
    notifySubscriptions: number
    showActivity: number
    allowMessages: number
    showOnlineStatus: number
    theme: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserSettingsMinAggregateInputType = {
    id?: true
    userId?: true
    notifyComments?: true
    notifyLikes?: true
    notifyNewPosts?: true
    notifySubscriptions?: true
    showActivity?: true
    allowMessages?: true
    showOnlineStatus?: true
    theme?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSettingsMaxAggregateInputType = {
    id?: true
    userId?: true
    notifyComments?: true
    notifyLikes?: true
    notifyNewPosts?: true
    notifySubscriptions?: true
    showActivity?: true
    allowMessages?: true
    showOnlineStatus?: true
    theme?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSettingsCountAggregateInputType = {
    id?: true
    userId?: true
    notifyComments?: true
    notifyLikes?: true
    notifyNewPosts?: true
    notifySubscriptions?: true
    showActivity?: true
    allowMessages?: true
    showOnlineStatus?: true
    theme?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSettings to aggregate.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSettings
    **/
    _count?: true | UserSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSettingsMaxAggregateInputType
  }

  export type GetUserSettingsAggregateType<T extends UserSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSettings[P]>
      : GetScalarType<T[P], AggregateUserSettings[P]>
  }




  export type UserSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSettingsWhereInput
    orderBy?: UserSettingsOrderByWithAggregationInput | UserSettingsOrderByWithAggregationInput[]
    by: UserSettingsScalarFieldEnum[] | UserSettingsScalarFieldEnum
    having?: UserSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSettingsCountAggregateInputType | true
    _min?: UserSettingsMinAggregateInputType
    _max?: UserSettingsMaxAggregateInputType
  }

  export type UserSettingsGroupByOutputType = {
    id: string
    userId: string
    notifyComments: boolean
    notifyLikes: boolean
    notifyNewPosts: boolean
    notifySubscriptions: boolean
    showActivity: boolean
    allowMessages: boolean
    showOnlineStatus: boolean
    theme: string
    createdAt: Date
    updatedAt: Date
    _count: UserSettingsCountAggregateOutputType | null
    _min: UserSettingsMinAggregateOutputType | null
    _max: UserSettingsMaxAggregateOutputType | null
  }

  type GetUserSettingsGroupByPayload<T extends UserSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], UserSettingsGroupByOutputType[P]>
        }
      >
    >


  export type UserSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSettings"]>

  export type UserSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSettings"]>

  export type UserSettingsSelectScalar = {
    id?: boolean
    userId?: boolean
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSettings"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      notifyComments: boolean
      notifyLikes: boolean
      notifyNewPosts: boolean
      notifySubscriptions: boolean
      showActivity: boolean
      allowMessages: boolean
      showOnlineStatus: boolean
      theme: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userSettings"]>
    composites: {}
  }

  type UserSettingsGetPayload<S extends boolean | null | undefined | UserSettingsDefaultArgs> = $Result.GetResult<Prisma.$UserSettingsPayload, S>

  type UserSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserSettingsCountAggregateInputType | true
    }

  export interface UserSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSettings'], meta: { name: 'UserSettings' } }
    /**
     * Find zero or one UserSettings that matches the filter.
     * @param {UserSettingsFindUniqueArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSettingsFindUniqueArgs>(args: SelectSubset<T, UserSettingsFindUniqueArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserSettingsFindUniqueOrThrowArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindFirstArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSettingsFindFirstArgs>(args?: SelectSubset<T, UserSettingsFindFirstArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindFirstOrThrowArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSettings
     * const userSettings = await prisma.userSettings.findMany()
     * 
     * // Get first 10 UserSettings
     * const userSettings = await prisma.userSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSettingsWithIdOnly = await prisma.userSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSettingsFindManyArgs>(args?: SelectSubset<T, UserSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserSettings.
     * @param {UserSettingsCreateArgs} args - Arguments to create a UserSettings.
     * @example
     * // Create one UserSettings
     * const UserSettings = await prisma.userSettings.create({
     *   data: {
     *     // ... data to create a UserSettings
     *   }
     * })
     * 
     */
    create<T extends UserSettingsCreateArgs>(args: SelectSubset<T, UserSettingsCreateArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserSettings.
     * @param {UserSettingsCreateManyArgs} args - Arguments to create many UserSettings.
     * @example
     * // Create many UserSettings
     * const userSettings = await prisma.userSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSettingsCreateManyArgs>(args?: SelectSubset<T, UserSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSettings and returns the data saved in the database.
     * @param {UserSettingsCreateManyAndReturnArgs} args - Arguments to create many UserSettings.
     * @example
     * // Create many UserSettings
     * const userSettings = await prisma.userSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSettings and only return the `id`
     * const userSettingsWithIdOnly = await prisma.userSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserSettings.
     * @param {UserSettingsDeleteArgs} args - Arguments to delete one UserSettings.
     * @example
     * // Delete one UserSettings
     * const UserSettings = await prisma.userSettings.delete({
     *   where: {
     *     // ... filter to delete one UserSettings
     *   }
     * })
     * 
     */
    delete<T extends UserSettingsDeleteArgs>(args: SelectSubset<T, UserSettingsDeleteArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserSettings.
     * @param {UserSettingsUpdateArgs} args - Arguments to update one UserSettings.
     * @example
     * // Update one UserSettings
     * const userSettings = await prisma.userSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSettingsUpdateArgs>(args: SelectSubset<T, UserSettingsUpdateArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserSettings.
     * @param {UserSettingsDeleteManyArgs} args - Arguments to filter UserSettings to delete.
     * @example
     * // Delete a few UserSettings
     * const { count } = await prisma.userSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSettingsDeleteManyArgs>(args?: SelectSubset<T, UserSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSettings
     * const userSettings = await prisma.userSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSettingsUpdateManyArgs>(args: SelectSubset<T, UserSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSettings.
     * @param {UserSettingsUpsertArgs} args - Arguments to update or create a UserSettings.
     * @example
     * // Update or create a UserSettings
     * const userSettings = await prisma.userSettings.upsert({
     *   create: {
     *     // ... data to create a UserSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSettings we want to update
     *   }
     * })
     */
    upsert<T extends UserSettingsUpsertArgs>(args: SelectSubset<T, UserSettingsUpsertArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsCountArgs} args - Arguments to filter UserSettings to count.
     * @example
     * // Count the number of UserSettings
     * const count = await prisma.userSettings.count({
     *   where: {
     *     // ... the filter for the UserSettings we want to count
     *   }
     * })
    **/
    count<T extends UserSettingsCountArgs>(
      args?: Subset<T, UserSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSettingsAggregateArgs>(args: Subset<T, UserSettingsAggregateArgs>): Prisma.PrismaPromise<GetUserSettingsAggregateType<T>>

    /**
     * Group by UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSettingsGroupByArgs['orderBy'] }
        : { orderBy?: UserSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSettings model
   */
  readonly fields: UserSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSettings model
   */ 
  interface UserSettingsFieldRefs {
    readonly id: FieldRef<"UserSettings", 'String'>
    readonly userId: FieldRef<"UserSettings", 'String'>
    readonly notifyComments: FieldRef<"UserSettings", 'Boolean'>
    readonly notifyLikes: FieldRef<"UserSettings", 'Boolean'>
    readonly notifyNewPosts: FieldRef<"UserSettings", 'Boolean'>
    readonly notifySubscriptions: FieldRef<"UserSettings", 'Boolean'>
    readonly showActivity: FieldRef<"UserSettings", 'Boolean'>
    readonly allowMessages: FieldRef<"UserSettings", 'Boolean'>
    readonly showOnlineStatus: FieldRef<"UserSettings", 'Boolean'>
    readonly theme: FieldRef<"UserSettings", 'String'>
    readonly createdAt: FieldRef<"UserSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSettings findUnique
   */
  export type UserSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings findUniqueOrThrow
   */
  export type UserSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings findFirst
   */
  export type UserSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSettings.
     */
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings findFirstOrThrow
   */
  export type UserSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSettings.
     */
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings findMany
   */
  export type UserSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings create
   */
  export type UserSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSettings.
     */
    data: XOR<UserSettingsCreateInput, UserSettingsUncheckedCreateInput>
  }

  /**
   * UserSettings createMany
   */
  export type UserSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSettings.
     */
    data: UserSettingsCreateManyInput | UserSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSettings createManyAndReturn
   */
  export type UserSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserSettings.
     */
    data: UserSettingsCreateManyInput | UserSettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSettings update
   */
  export type UserSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSettings.
     */
    data: XOR<UserSettingsUpdateInput, UserSettingsUncheckedUpdateInput>
    /**
     * Choose, which UserSettings to update.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings updateMany
   */
  export type UserSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSettings.
     */
    data: XOR<UserSettingsUpdateManyMutationInput, UserSettingsUncheckedUpdateManyInput>
    /**
     * Filter which UserSettings to update
     */
    where?: UserSettingsWhereInput
  }

  /**
   * UserSettings upsert
   */
  export type UserSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSettings to update in case it exists.
     */
    where: UserSettingsWhereUniqueInput
    /**
     * In case the UserSettings found by the `where` argument doesn't exist, create a new UserSettings with this data.
     */
    create: XOR<UserSettingsCreateInput, UserSettingsUncheckedCreateInput>
    /**
     * In case the UserSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSettingsUpdateInput, UserSettingsUncheckedUpdateInput>
  }

  /**
   * UserSettings delete
   */
  export type UserSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter which UserSettings to delete.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings deleteMany
   */
  export type UserSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSettings to delete
     */
    where?: UserSettingsWhereInput
  }

  /**
   * UserSettings without action
   */
  export type UserSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
  }


  /**
   * Model CreatorTierSettings
   */

  export type AggregateCreatorTierSettings = {
    _count: CreatorTierSettingsCountAggregateOutputType | null
    _min: CreatorTierSettingsMinAggregateOutputType | null
    _max: CreatorTierSettingsMaxAggregateOutputType | null
  }

  export type CreatorTierSettingsMinAggregateOutputType = {
    id: string | null
    creatorId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CreatorTierSettingsMaxAggregateOutputType = {
    id: string | null
    creatorId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CreatorTierSettingsCountAggregateOutputType = {
    id: number
    creatorId: number
    basicTier: number
    premiumTier: number
    vipTier: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CreatorTierSettingsMinAggregateInputType = {
    id?: true
    creatorId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CreatorTierSettingsMaxAggregateInputType = {
    id?: true
    creatorId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CreatorTierSettingsCountAggregateInputType = {
    id?: true
    creatorId?: true
    basicTier?: true
    premiumTier?: true
    vipTier?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CreatorTierSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CreatorTierSettings to aggregate.
     */
    where?: CreatorTierSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreatorTierSettings to fetch.
     */
    orderBy?: CreatorTierSettingsOrderByWithRelationInput | CreatorTierSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CreatorTierSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreatorTierSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreatorTierSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CreatorTierSettings
    **/
    _count?: true | CreatorTierSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CreatorTierSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CreatorTierSettingsMaxAggregateInputType
  }

  export type GetCreatorTierSettingsAggregateType<T extends CreatorTierSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateCreatorTierSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCreatorTierSettings[P]>
      : GetScalarType<T[P], AggregateCreatorTierSettings[P]>
  }




  export type CreatorTierSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CreatorTierSettingsWhereInput
    orderBy?: CreatorTierSettingsOrderByWithAggregationInput | CreatorTierSettingsOrderByWithAggregationInput[]
    by: CreatorTierSettingsScalarFieldEnum[] | CreatorTierSettingsScalarFieldEnum
    having?: CreatorTierSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CreatorTierSettingsCountAggregateInputType | true
    _min?: CreatorTierSettingsMinAggregateInputType
    _max?: CreatorTierSettingsMaxAggregateInputType
  }

  export type CreatorTierSettingsGroupByOutputType = {
    id: string
    creatorId: string
    basicTier: JsonValue | null
    premiumTier: JsonValue | null
    vipTier: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: CreatorTierSettingsCountAggregateOutputType | null
    _min: CreatorTierSettingsMinAggregateOutputType | null
    _max: CreatorTierSettingsMaxAggregateOutputType | null
  }

  type GetCreatorTierSettingsGroupByPayload<T extends CreatorTierSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CreatorTierSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CreatorTierSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CreatorTierSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], CreatorTierSettingsGroupByOutputType[P]>
        }
      >
    >


  export type CreatorTierSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creatorId?: boolean
    basicTier?: boolean
    premiumTier?: boolean
    vipTier?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["creatorTierSettings"]>

  export type CreatorTierSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creatorId?: boolean
    basicTier?: boolean
    premiumTier?: boolean
    vipTier?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["creatorTierSettings"]>

  export type CreatorTierSettingsSelectScalar = {
    id?: boolean
    creatorId?: boolean
    basicTier?: boolean
    premiumTier?: boolean
    vipTier?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CreatorTierSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CreatorTierSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CreatorTierSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CreatorTierSettings"
    objects: {
      creator: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      creatorId: string
      basicTier: Prisma.JsonValue | null
      premiumTier: Prisma.JsonValue | null
      vipTier: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["creatorTierSettings"]>
    composites: {}
  }

  type CreatorTierSettingsGetPayload<S extends boolean | null | undefined | CreatorTierSettingsDefaultArgs> = $Result.GetResult<Prisma.$CreatorTierSettingsPayload, S>

  type CreatorTierSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CreatorTierSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CreatorTierSettingsCountAggregateInputType | true
    }

  export interface CreatorTierSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CreatorTierSettings'], meta: { name: 'CreatorTierSettings' } }
    /**
     * Find zero or one CreatorTierSettings that matches the filter.
     * @param {CreatorTierSettingsFindUniqueArgs} args - Arguments to find a CreatorTierSettings
     * @example
     * // Get one CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CreatorTierSettingsFindUniqueArgs>(args: SelectSubset<T, CreatorTierSettingsFindUniqueArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CreatorTierSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CreatorTierSettingsFindUniqueOrThrowArgs} args - Arguments to find a CreatorTierSettings
     * @example
     * // Get one CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CreatorTierSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, CreatorTierSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CreatorTierSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsFindFirstArgs} args - Arguments to find a CreatorTierSettings
     * @example
     * // Get one CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CreatorTierSettingsFindFirstArgs>(args?: SelectSubset<T, CreatorTierSettingsFindFirstArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CreatorTierSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsFindFirstOrThrowArgs} args - Arguments to find a CreatorTierSettings
     * @example
     * // Get one CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CreatorTierSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, CreatorTierSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CreatorTierSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.findMany()
     * 
     * // Get first 10 CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const creatorTierSettingsWithIdOnly = await prisma.creatorTierSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CreatorTierSettingsFindManyArgs>(args?: SelectSubset<T, CreatorTierSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CreatorTierSettings.
     * @param {CreatorTierSettingsCreateArgs} args - Arguments to create a CreatorTierSettings.
     * @example
     * // Create one CreatorTierSettings
     * const CreatorTierSettings = await prisma.creatorTierSettings.create({
     *   data: {
     *     // ... data to create a CreatorTierSettings
     *   }
     * })
     * 
     */
    create<T extends CreatorTierSettingsCreateArgs>(args: SelectSubset<T, CreatorTierSettingsCreateArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CreatorTierSettings.
     * @param {CreatorTierSettingsCreateManyArgs} args - Arguments to create many CreatorTierSettings.
     * @example
     * // Create many CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CreatorTierSettingsCreateManyArgs>(args?: SelectSubset<T, CreatorTierSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CreatorTierSettings and returns the data saved in the database.
     * @param {CreatorTierSettingsCreateManyAndReturnArgs} args - Arguments to create many CreatorTierSettings.
     * @example
     * // Create many CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CreatorTierSettings and only return the `id`
     * const creatorTierSettingsWithIdOnly = await prisma.creatorTierSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CreatorTierSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, CreatorTierSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CreatorTierSettings.
     * @param {CreatorTierSettingsDeleteArgs} args - Arguments to delete one CreatorTierSettings.
     * @example
     * // Delete one CreatorTierSettings
     * const CreatorTierSettings = await prisma.creatorTierSettings.delete({
     *   where: {
     *     // ... filter to delete one CreatorTierSettings
     *   }
     * })
     * 
     */
    delete<T extends CreatorTierSettingsDeleteArgs>(args: SelectSubset<T, CreatorTierSettingsDeleteArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CreatorTierSettings.
     * @param {CreatorTierSettingsUpdateArgs} args - Arguments to update one CreatorTierSettings.
     * @example
     * // Update one CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CreatorTierSettingsUpdateArgs>(args: SelectSubset<T, CreatorTierSettingsUpdateArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CreatorTierSettings.
     * @param {CreatorTierSettingsDeleteManyArgs} args - Arguments to filter CreatorTierSettings to delete.
     * @example
     * // Delete a few CreatorTierSettings
     * const { count } = await prisma.creatorTierSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CreatorTierSettingsDeleteManyArgs>(args?: SelectSubset<T, CreatorTierSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CreatorTierSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CreatorTierSettingsUpdateManyArgs>(args: SelectSubset<T, CreatorTierSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CreatorTierSettings.
     * @param {CreatorTierSettingsUpsertArgs} args - Arguments to update or create a CreatorTierSettings.
     * @example
     * // Update or create a CreatorTierSettings
     * const creatorTierSettings = await prisma.creatorTierSettings.upsert({
     *   create: {
     *     // ... data to create a CreatorTierSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CreatorTierSettings we want to update
     *   }
     * })
     */
    upsert<T extends CreatorTierSettingsUpsertArgs>(args: SelectSubset<T, CreatorTierSettingsUpsertArgs<ExtArgs>>): Prisma__CreatorTierSettingsClient<$Result.GetResult<Prisma.$CreatorTierSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CreatorTierSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsCountArgs} args - Arguments to filter CreatorTierSettings to count.
     * @example
     * // Count the number of CreatorTierSettings
     * const count = await prisma.creatorTierSettings.count({
     *   where: {
     *     // ... the filter for the CreatorTierSettings we want to count
     *   }
     * })
    **/
    count<T extends CreatorTierSettingsCountArgs>(
      args?: Subset<T, CreatorTierSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CreatorTierSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CreatorTierSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CreatorTierSettingsAggregateArgs>(args: Subset<T, CreatorTierSettingsAggregateArgs>): Prisma.PrismaPromise<GetCreatorTierSettingsAggregateType<T>>

    /**
     * Group by CreatorTierSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorTierSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CreatorTierSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CreatorTierSettingsGroupByArgs['orderBy'] }
        : { orderBy?: CreatorTierSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CreatorTierSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCreatorTierSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CreatorTierSettings model
   */
  readonly fields: CreatorTierSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CreatorTierSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CreatorTierSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CreatorTierSettings model
   */ 
  interface CreatorTierSettingsFieldRefs {
    readonly id: FieldRef<"CreatorTierSettings", 'String'>
    readonly creatorId: FieldRef<"CreatorTierSettings", 'String'>
    readonly basicTier: FieldRef<"CreatorTierSettings", 'Json'>
    readonly premiumTier: FieldRef<"CreatorTierSettings", 'Json'>
    readonly vipTier: FieldRef<"CreatorTierSettings", 'Json'>
    readonly createdAt: FieldRef<"CreatorTierSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"CreatorTierSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CreatorTierSettings findUnique
   */
  export type CreatorTierSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * Filter, which CreatorTierSettings to fetch.
     */
    where: CreatorTierSettingsWhereUniqueInput
  }

  /**
   * CreatorTierSettings findUniqueOrThrow
   */
  export type CreatorTierSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * Filter, which CreatorTierSettings to fetch.
     */
    where: CreatorTierSettingsWhereUniqueInput
  }

  /**
   * CreatorTierSettings findFirst
   */
  export type CreatorTierSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * Filter, which CreatorTierSettings to fetch.
     */
    where?: CreatorTierSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreatorTierSettings to fetch.
     */
    orderBy?: CreatorTierSettingsOrderByWithRelationInput | CreatorTierSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CreatorTierSettings.
     */
    cursor?: CreatorTierSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreatorTierSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreatorTierSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CreatorTierSettings.
     */
    distinct?: CreatorTierSettingsScalarFieldEnum | CreatorTierSettingsScalarFieldEnum[]
  }

  /**
   * CreatorTierSettings findFirstOrThrow
   */
  export type CreatorTierSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * Filter, which CreatorTierSettings to fetch.
     */
    where?: CreatorTierSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreatorTierSettings to fetch.
     */
    orderBy?: CreatorTierSettingsOrderByWithRelationInput | CreatorTierSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CreatorTierSettings.
     */
    cursor?: CreatorTierSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreatorTierSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreatorTierSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CreatorTierSettings.
     */
    distinct?: CreatorTierSettingsScalarFieldEnum | CreatorTierSettingsScalarFieldEnum[]
  }

  /**
   * CreatorTierSettings findMany
   */
  export type CreatorTierSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * Filter, which CreatorTierSettings to fetch.
     */
    where?: CreatorTierSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CreatorTierSettings to fetch.
     */
    orderBy?: CreatorTierSettingsOrderByWithRelationInput | CreatorTierSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CreatorTierSettings.
     */
    cursor?: CreatorTierSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CreatorTierSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CreatorTierSettings.
     */
    skip?: number
    distinct?: CreatorTierSettingsScalarFieldEnum | CreatorTierSettingsScalarFieldEnum[]
  }

  /**
   * CreatorTierSettings create
   */
  export type CreatorTierSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a CreatorTierSettings.
     */
    data: XOR<CreatorTierSettingsCreateInput, CreatorTierSettingsUncheckedCreateInput>
  }

  /**
   * CreatorTierSettings createMany
   */
  export type CreatorTierSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CreatorTierSettings.
     */
    data: CreatorTierSettingsCreateManyInput | CreatorTierSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CreatorTierSettings createManyAndReturn
   */
  export type CreatorTierSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CreatorTierSettings.
     */
    data: CreatorTierSettingsCreateManyInput | CreatorTierSettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CreatorTierSettings update
   */
  export type CreatorTierSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a CreatorTierSettings.
     */
    data: XOR<CreatorTierSettingsUpdateInput, CreatorTierSettingsUncheckedUpdateInput>
    /**
     * Choose, which CreatorTierSettings to update.
     */
    where: CreatorTierSettingsWhereUniqueInput
  }

  /**
   * CreatorTierSettings updateMany
   */
  export type CreatorTierSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CreatorTierSettings.
     */
    data: XOR<CreatorTierSettingsUpdateManyMutationInput, CreatorTierSettingsUncheckedUpdateManyInput>
    /**
     * Filter which CreatorTierSettings to update
     */
    where?: CreatorTierSettingsWhereInput
  }

  /**
   * CreatorTierSettings upsert
   */
  export type CreatorTierSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the CreatorTierSettings to update in case it exists.
     */
    where: CreatorTierSettingsWhereUniqueInput
    /**
     * In case the CreatorTierSettings found by the `where` argument doesn't exist, create a new CreatorTierSettings with this data.
     */
    create: XOR<CreatorTierSettingsCreateInput, CreatorTierSettingsUncheckedCreateInput>
    /**
     * In case the CreatorTierSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CreatorTierSettingsUpdateInput, CreatorTierSettingsUncheckedUpdateInput>
  }

  /**
   * CreatorTierSettings delete
   */
  export type CreatorTierSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
    /**
     * Filter which CreatorTierSettings to delete.
     */
    where: CreatorTierSettingsWhereUniqueInput
  }

  /**
   * CreatorTierSettings deleteMany
   */
  export type CreatorTierSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CreatorTierSettings to delete
     */
    where?: CreatorTierSettingsWhereInput
  }

  /**
   * CreatorTierSettings without action
   */
  export type CreatorTierSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CreatorTierSettings
     */
    select?: CreatorTierSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CreatorTierSettingsInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: $Enums.NotificationType | null
    title: string | null
    message: string | null
    isRead: boolean | null
    createdAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: $Enums.NotificationType | null
    title: string | null
    message: string | null
    isRead: boolean | null
    createdAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    title: number
    message: number
    isRead: number
    metadata: number
    createdAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    title?: true
    message?: true
    isRead?: true
    createdAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    title?: true
    message?: true
    isRead?: true
    createdAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    title?: true
    message?: true
    isRead?: true
    metadata?: true
    createdAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    userId: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead: boolean
    metadata: JsonValue | null
    createdAt: Date
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    metadata?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    metadata?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    title?: boolean
    message?: boolean
    isRead?: boolean
    metadata?: boolean
    createdAt?: boolean
  }

  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: $Enums.NotificationType
      title: string
      message: string
      isRead: boolean
      metadata: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */ 
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly metadata: FieldRef<"Notification", 'Json'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model AuctionDeposit
   */

  export type AggregateAuctionDeposit = {
    _count: AuctionDepositCountAggregateOutputType | null
    _avg: AuctionDepositAvgAggregateOutputType | null
    _sum: AuctionDepositSumAggregateOutputType | null
    _min: AuctionDepositMinAggregateOutputType | null
    _max: AuctionDepositMaxAggregateOutputType | null
  }

  export type AuctionDepositAvgAggregateOutputType = {
    amount: number | null
  }

  export type AuctionDepositSumAggregateOutputType = {
    amount: number | null
  }

  export type AuctionDepositMinAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    amount: number | null
    txSignature: string | null
    status: $Enums.DepositStatus | null
    createdAt: Date | null
    refundedAt: Date | null
    refundTxSignature: string | null
    forfeitedAt: Date | null
  }

  export type AuctionDepositMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    amount: number | null
    txSignature: string | null
    status: $Enums.DepositStatus | null
    createdAt: Date | null
    refundedAt: Date | null
    refundTxSignature: string | null
    forfeitedAt: Date | null
  }

  export type AuctionDepositCountAggregateOutputType = {
    id: number
    postId: number
    userId: number
    amount: number
    txSignature: number
    status: number
    createdAt: number
    refundedAt: number
    refundTxSignature: number
    forfeitedAt: number
    _all: number
  }


  export type AuctionDepositAvgAggregateInputType = {
    amount?: true
  }

  export type AuctionDepositSumAggregateInputType = {
    amount?: true
  }

  export type AuctionDepositMinAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    txSignature?: true
    status?: true
    createdAt?: true
    refundedAt?: true
    refundTxSignature?: true
    forfeitedAt?: true
  }

  export type AuctionDepositMaxAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    txSignature?: true
    status?: true
    createdAt?: true
    refundedAt?: true
    refundTxSignature?: true
    forfeitedAt?: true
  }

  export type AuctionDepositCountAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    txSignature?: true
    status?: true
    createdAt?: true
    refundedAt?: true
    refundTxSignature?: true
    forfeitedAt?: true
    _all?: true
  }

  export type AuctionDepositAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuctionDeposit to aggregate.
     */
    where?: AuctionDepositWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionDeposits to fetch.
     */
    orderBy?: AuctionDepositOrderByWithRelationInput | AuctionDepositOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuctionDepositWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionDeposits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionDeposits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuctionDeposits
    **/
    _count?: true | AuctionDepositCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AuctionDepositAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AuctionDepositSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuctionDepositMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuctionDepositMaxAggregateInputType
  }

  export type GetAuctionDepositAggregateType<T extends AuctionDepositAggregateArgs> = {
        [P in keyof T & keyof AggregateAuctionDeposit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuctionDeposit[P]>
      : GetScalarType<T[P], AggregateAuctionDeposit[P]>
  }




  export type AuctionDepositGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionDepositWhereInput
    orderBy?: AuctionDepositOrderByWithAggregationInput | AuctionDepositOrderByWithAggregationInput[]
    by: AuctionDepositScalarFieldEnum[] | AuctionDepositScalarFieldEnum
    having?: AuctionDepositScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuctionDepositCountAggregateInputType | true
    _avg?: AuctionDepositAvgAggregateInputType
    _sum?: AuctionDepositSumAggregateInputType
    _min?: AuctionDepositMinAggregateInputType
    _max?: AuctionDepositMaxAggregateInputType
  }

  export type AuctionDepositGroupByOutputType = {
    id: string
    postId: string
    userId: string
    amount: number
    txSignature: string
    status: $Enums.DepositStatus
    createdAt: Date
    refundedAt: Date | null
    refundTxSignature: string | null
    forfeitedAt: Date | null
    _count: AuctionDepositCountAggregateOutputType | null
    _avg: AuctionDepositAvgAggregateOutputType | null
    _sum: AuctionDepositSumAggregateOutputType | null
    _min: AuctionDepositMinAggregateOutputType | null
    _max: AuctionDepositMaxAggregateOutputType | null
  }

  type GetAuctionDepositGroupByPayload<T extends AuctionDepositGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuctionDepositGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuctionDepositGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuctionDepositGroupByOutputType[P]>
            : GetScalarType<T[P], AuctionDepositGroupByOutputType[P]>
        }
      >
    >


  export type AuctionDepositSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    status?: boolean
    createdAt?: boolean
    refundedAt?: boolean
    refundTxSignature?: boolean
    forfeitedAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auctionDeposit"]>

  export type AuctionDepositSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    status?: boolean
    createdAt?: boolean
    refundedAt?: boolean
    refundTxSignature?: boolean
    forfeitedAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auctionDeposit"]>

  export type AuctionDepositSelectScalar = {
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    status?: boolean
    createdAt?: boolean
    refundedAt?: boolean
    refundTxSignature?: boolean
    forfeitedAt?: boolean
  }

  export type AuctionDepositInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuctionDepositIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuctionDepositPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuctionDeposit"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      userId: string
      amount: number
      txSignature: string
      status: $Enums.DepositStatus
      createdAt: Date
      refundedAt: Date | null
      refundTxSignature: string | null
      forfeitedAt: Date | null
    }, ExtArgs["result"]["auctionDeposit"]>
    composites: {}
  }

  type AuctionDepositGetPayload<S extends boolean | null | undefined | AuctionDepositDefaultArgs> = $Result.GetResult<Prisma.$AuctionDepositPayload, S>

  type AuctionDepositCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuctionDepositFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuctionDepositCountAggregateInputType | true
    }

  export interface AuctionDepositDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuctionDeposit'], meta: { name: 'AuctionDeposit' } }
    /**
     * Find zero or one AuctionDeposit that matches the filter.
     * @param {AuctionDepositFindUniqueArgs} args - Arguments to find a AuctionDeposit
     * @example
     * // Get one AuctionDeposit
     * const auctionDeposit = await prisma.auctionDeposit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuctionDepositFindUniqueArgs>(args: SelectSubset<T, AuctionDepositFindUniqueArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuctionDeposit that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuctionDepositFindUniqueOrThrowArgs} args - Arguments to find a AuctionDeposit
     * @example
     * // Get one AuctionDeposit
     * const auctionDeposit = await prisma.auctionDeposit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuctionDepositFindUniqueOrThrowArgs>(args: SelectSubset<T, AuctionDepositFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuctionDeposit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositFindFirstArgs} args - Arguments to find a AuctionDeposit
     * @example
     * // Get one AuctionDeposit
     * const auctionDeposit = await prisma.auctionDeposit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuctionDepositFindFirstArgs>(args?: SelectSubset<T, AuctionDepositFindFirstArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuctionDeposit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositFindFirstOrThrowArgs} args - Arguments to find a AuctionDeposit
     * @example
     * // Get one AuctionDeposit
     * const auctionDeposit = await prisma.auctionDeposit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuctionDepositFindFirstOrThrowArgs>(args?: SelectSubset<T, AuctionDepositFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuctionDeposits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuctionDeposits
     * const auctionDeposits = await prisma.auctionDeposit.findMany()
     * 
     * // Get first 10 AuctionDeposits
     * const auctionDeposits = await prisma.auctionDeposit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auctionDepositWithIdOnly = await prisma.auctionDeposit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuctionDepositFindManyArgs>(args?: SelectSubset<T, AuctionDepositFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuctionDeposit.
     * @param {AuctionDepositCreateArgs} args - Arguments to create a AuctionDeposit.
     * @example
     * // Create one AuctionDeposit
     * const AuctionDeposit = await prisma.auctionDeposit.create({
     *   data: {
     *     // ... data to create a AuctionDeposit
     *   }
     * })
     * 
     */
    create<T extends AuctionDepositCreateArgs>(args: SelectSubset<T, AuctionDepositCreateArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuctionDeposits.
     * @param {AuctionDepositCreateManyArgs} args - Arguments to create many AuctionDeposits.
     * @example
     * // Create many AuctionDeposits
     * const auctionDeposit = await prisma.auctionDeposit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuctionDepositCreateManyArgs>(args?: SelectSubset<T, AuctionDepositCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuctionDeposits and returns the data saved in the database.
     * @param {AuctionDepositCreateManyAndReturnArgs} args - Arguments to create many AuctionDeposits.
     * @example
     * // Create many AuctionDeposits
     * const auctionDeposit = await prisma.auctionDeposit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuctionDeposits and only return the `id`
     * const auctionDepositWithIdOnly = await prisma.auctionDeposit.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuctionDepositCreateManyAndReturnArgs>(args?: SelectSubset<T, AuctionDepositCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuctionDeposit.
     * @param {AuctionDepositDeleteArgs} args - Arguments to delete one AuctionDeposit.
     * @example
     * // Delete one AuctionDeposit
     * const AuctionDeposit = await prisma.auctionDeposit.delete({
     *   where: {
     *     // ... filter to delete one AuctionDeposit
     *   }
     * })
     * 
     */
    delete<T extends AuctionDepositDeleteArgs>(args: SelectSubset<T, AuctionDepositDeleteArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuctionDeposit.
     * @param {AuctionDepositUpdateArgs} args - Arguments to update one AuctionDeposit.
     * @example
     * // Update one AuctionDeposit
     * const auctionDeposit = await prisma.auctionDeposit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuctionDepositUpdateArgs>(args: SelectSubset<T, AuctionDepositUpdateArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuctionDeposits.
     * @param {AuctionDepositDeleteManyArgs} args - Arguments to filter AuctionDeposits to delete.
     * @example
     * // Delete a few AuctionDeposits
     * const { count } = await prisma.auctionDeposit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuctionDepositDeleteManyArgs>(args?: SelectSubset<T, AuctionDepositDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuctionDeposits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuctionDeposits
     * const auctionDeposit = await prisma.auctionDeposit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuctionDepositUpdateManyArgs>(args: SelectSubset<T, AuctionDepositUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuctionDeposit.
     * @param {AuctionDepositUpsertArgs} args - Arguments to update or create a AuctionDeposit.
     * @example
     * // Update or create a AuctionDeposit
     * const auctionDeposit = await prisma.auctionDeposit.upsert({
     *   create: {
     *     // ... data to create a AuctionDeposit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuctionDeposit we want to update
     *   }
     * })
     */
    upsert<T extends AuctionDepositUpsertArgs>(args: SelectSubset<T, AuctionDepositUpsertArgs<ExtArgs>>): Prisma__AuctionDepositClient<$Result.GetResult<Prisma.$AuctionDepositPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuctionDeposits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositCountArgs} args - Arguments to filter AuctionDeposits to count.
     * @example
     * // Count the number of AuctionDeposits
     * const count = await prisma.auctionDeposit.count({
     *   where: {
     *     // ... the filter for the AuctionDeposits we want to count
     *   }
     * })
    **/
    count<T extends AuctionDepositCountArgs>(
      args?: Subset<T, AuctionDepositCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuctionDepositCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuctionDeposit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuctionDepositAggregateArgs>(args: Subset<T, AuctionDepositAggregateArgs>): Prisma.PrismaPromise<GetAuctionDepositAggregateType<T>>

    /**
     * Group by AuctionDeposit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionDepositGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuctionDepositGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuctionDepositGroupByArgs['orderBy'] }
        : { orderBy?: AuctionDepositGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuctionDepositGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuctionDepositGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuctionDeposit model
   */
  readonly fields: AuctionDepositFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuctionDeposit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuctionDepositClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuctionDeposit model
   */ 
  interface AuctionDepositFieldRefs {
    readonly id: FieldRef<"AuctionDeposit", 'String'>
    readonly postId: FieldRef<"AuctionDeposit", 'String'>
    readonly userId: FieldRef<"AuctionDeposit", 'String'>
    readonly amount: FieldRef<"AuctionDeposit", 'Float'>
    readonly txSignature: FieldRef<"AuctionDeposit", 'String'>
    readonly status: FieldRef<"AuctionDeposit", 'DepositStatus'>
    readonly createdAt: FieldRef<"AuctionDeposit", 'DateTime'>
    readonly refundedAt: FieldRef<"AuctionDeposit", 'DateTime'>
    readonly refundTxSignature: FieldRef<"AuctionDeposit", 'String'>
    readonly forfeitedAt: FieldRef<"AuctionDeposit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuctionDeposit findUnique
   */
  export type AuctionDepositFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * Filter, which AuctionDeposit to fetch.
     */
    where: AuctionDepositWhereUniqueInput
  }

  /**
   * AuctionDeposit findUniqueOrThrow
   */
  export type AuctionDepositFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * Filter, which AuctionDeposit to fetch.
     */
    where: AuctionDepositWhereUniqueInput
  }

  /**
   * AuctionDeposit findFirst
   */
  export type AuctionDepositFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * Filter, which AuctionDeposit to fetch.
     */
    where?: AuctionDepositWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionDeposits to fetch.
     */
    orderBy?: AuctionDepositOrderByWithRelationInput | AuctionDepositOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuctionDeposits.
     */
    cursor?: AuctionDepositWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionDeposits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionDeposits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuctionDeposits.
     */
    distinct?: AuctionDepositScalarFieldEnum | AuctionDepositScalarFieldEnum[]
  }

  /**
   * AuctionDeposit findFirstOrThrow
   */
  export type AuctionDepositFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * Filter, which AuctionDeposit to fetch.
     */
    where?: AuctionDepositWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionDeposits to fetch.
     */
    orderBy?: AuctionDepositOrderByWithRelationInput | AuctionDepositOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuctionDeposits.
     */
    cursor?: AuctionDepositWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionDeposits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionDeposits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuctionDeposits.
     */
    distinct?: AuctionDepositScalarFieldEnum | AuctionDepositScalarFieldEnum[]
  }

  /**
   * AuctionDeposit findMany
   */
  export type AuctionDepositFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * Filter, which AuctionDeposits to fetch.
     */
    where?: AuctionDepositWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionDeposits to fetch.
     */
    orderBy?: AuctionDepositOrderByWithRelationInput | AuctionDepositOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuctionDeposits.
     */
    cursor?: AuctionDepositWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionDeposits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionDeposits.
     */
    skip?: number
    distinct?: AuctionDepositScalarFieldEnum | AuctionDepositScalarFieldEnum[]
  }

  /**
   * AuctionDeposit create
   */
  export type AuctionDepositCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * The data needed to create a AuctionDeposit.
     */
    data: XOR<AuctionDepositCreateInput, AuctionDepositUncheckedCreateInput>
  }

  /**
   * AuctionDeposit createMany
   */
  export type AuctionDepositCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuctionDeposits.
     */
    data: AuctionDepositCreateManyInput | AuctionDepositCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuctionDeposit createManyAndReturn
   */
  export type AuctionDepositCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuctionDeposits.
     */
    data: AuctionDepositCreateManyInput | AuctionDepositCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuctionDeposit update
   */
  export type AuctionDepositUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * The data needed to update a AuctionDeposit.
     */
    data: XOR<AuctionDepositUpdateInput, AuctionDepositUncheckedUpdateInput>
    /**
     * Choose, which AuctionDeposit to update.
     */
    where: AuctionDepositWhereUniqueInput
  }

  /**
   * AuctionDeposit updateMany
   */
  export type AuctionDepositUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuctionDeposits.
     */
    data: XOR<AuctionDepositUpdateManyMutationInput, AuctionDepositUncheckedUpdateManyInput>
    /**
     * Filter which AuctionDeposits to update
     */
    where?: AuctionDepositWhereInput
  }

  /**
   * AuctionDeposit upsert
   */
  export type AuctionDepositUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * The filter to search for the AuctionDeposit to update in case it exists.
     */
    where: AuctionDepositWhereUniqueInput
    /**
     * In case the AuctionDeposit found by the `where` argument doesn't exist, create a new AuctionDeposit with this data.
     */
    create: XOR<AuctionDepositCreateInput, AuctionDepositUncheckedCreateInput>
    /**
     * In case the AuctionDeposit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuctionDepositUpdateInput, AuctionDepositUncheckedUpdateInput>
  }

  /**
   * AuctionDeposit delete
   */
  export type AuctionDepositDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
    /**
     * Filter which AuctionDeposit to delete.
     */
    where: AuctionDepositWhereUniqueInput
  }

  /**
   * AuctionDeposit deleteMany
   */
  export type AuctionDepositDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuctionDeposits to delete
     */
    where?: AuctionDepositWhereInput
  }

  /**
   * AuctionDeposit without action
   */
  export type AuctionDepositDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionDeposit
     */
    select?: AuctionDepositSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionDepositInclude<ExtArgs> | null
  }


  /**
   * Model AuctionBid
   */

  export type AggregateAuctionBid = {
    _count: AuctionBidCountAggregateOutputType | null
    _avg: AuctionBidAvgAggregateOutputType | null
    _sum: AuctionBidSumAggregateOutputType | null
    _min: AuctionBidMinAggregateOutputType | null
    _max: AuctionBidMaxAggregateOutputType | null
  }

  export type AuctionBidAvgAggregateOutputType = {
    amount: number | null
  }

  export type AuctionBidSumAggregateOutputType = {
    amount: number | null
  }

  export type AuctionBidMinAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    amount: number | null
    isWinning: boolean | null
    createdAt: Date | null
  }

  export type AuctionBidMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    amount: number | null
    isWinning: boolean | null
    createdAt: Date | null
  }

  export type AuctionBidCountAggregateOutputType = {
    id: number
    postId: number
    userId: number
    amount: number
    isWinning: number
    createdAt: number
    _all: number
  }


  export type AuctionBidAvgAggregateInputType = {
    amount?: true
  }

  export type AuctionBidSumAggregateInputType = {
    amount?: true
  }

  export type AuctionBidMinAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    isWinning?: true
    createdAt?: true
  }

  export type AuctionBidMaxAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    isWinning?: true
    createdAt?: true
  }

  export type AuctionBidCountAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    isWinning?: true
    createdAt?: true
    _all?: true
  }

  export type AuctionBidAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuctionBid to aggregate.
     */
    where?: AuctionBidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionBids to fetch.
     */
    orderBy?: AuctionBidOrderByWithRelationInput | AuctionBidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuctionBidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionBids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionBids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuctionBids
    **/
    _count?: true | AuctionBidCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AuctionBidAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AuctionBidSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuctionBidMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuctionBidMaxAggregateInputType
  }

  export type GetAuctionBidAggregateType<T extends AuctionBidAggregateArgs> = {
        [P in keyof T & keyof AggregateAuctionBid]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuctionBid[P]>
      : GetScalarType<T[P], AggregateAuctionBid[P]>
  }




  export type AuctionBidGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionBidWhereInput
    orderBy?: AuctionBidOrderByWithAggregationInput | AuctionBidOrderByWithAggregationInput[]
    by: AuctionBidScalarFieldEnum[] | AuctionBidScalarFieldEnum
    having?: AuctionBidScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuctionBidCountAggregateInputType | true
    _avg?: AuctionBidAvgAggregateInputType
    _sum?: AuctionBidSumAggregateInputType
    _min?: AuctionBidMinAggregateInputType
    _max?: AuctionBidMaxAggregateInputType
  }

  export type AuctionBidGroupByOutputType = {
    id: string
    postId: string
    userId: string
    amount: number
    isWinning: boolean
    createdAt: Date
    _count: AuctionBidCountAggregateOutputType | null
    _avg: AuctionBidAvgAggregateOutputType | null
    _sum: AuctionBidSumAggregateOutputType | null
    _min: AuctionBidMinAggregateOutputType | null
    _max: AuctionBidMaxAggregateOutputType | null
  }

  type GetAuctionBidGroupByPayload<T extends AuctionBidGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuctionBidGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuctionBidGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuctionBidGroupByOutputType[P]>
            : GetScalarType<T[P], AuctionBidGroupByOutputType[P]>
        }
      >
    >


  export type AuctionBidSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    isWinning?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auctionBid"]>

  export type AuctionBidSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    isWinning?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auctionBid"]>

  export type AuctionBidSelectScalar = {
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    isWinning?: boolean
    createdAt?: boolean
  }

  export type AuctionBidInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuctionBidIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuctionBidPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuctionBid"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      userId: string
      amount: number
      isWinning: boolean
      createdAt: Date
    }, ExtArgs["result"]["auctionBid"]>
    composites: {}
  }

  type AuctionBidGetPayload<S extends boolean | null | undefined | AuctionBidDefaultArgs> = $Result.GetResult<Prisma.$AuctionBidPayload, S>

  type AuctionBidCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuctionBidFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuctionBidCountAggregateInputType | true
    }

  export interface AuctionBidDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuctionBid'], meta: { name: 'AuctionBid' } }
    /**
     * Find zero or one AuctionBid that matches the filter.
     * @param {AuctionBidFindUniqueArgs} args - Arguments to find a AuctionBid
     * @example
     * // Get one AuctionBid
     * const auctionBid = await prisma.auctionBid.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuctionBidFindUniqueArgs>(args: SelectSubset<T, AuctionBidFindUniqueArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuctionBid that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuctionBidFindUniqueOrThrowArgs} args - Arguments to find a AuctionBid
     * @example
     * // Get one AuctionBid
     * const auctionBid = await prisma.auctionBid.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuctionBidFindUniqueOrThrowArgs>(args: SelectSubset<T, AuctionBidFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuctionBid that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidFindFirstArgs} args - Arguments to find a AuctionBid
     * @example
     * // Get one AuctionBid
     * const auctionBid = await prisma.auctionBid.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuctionBidFindFirstArgs>(args?: SelectSubset<T, AuctionBidFindFirstArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuctionBid that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidFindFirstOrThrowArgs} args - Arguments to find a AuctionBid
     * @example
     * // Get one AuctionBid
     * const auctionBid = await prisma.auctionBid.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuctionBidFindFirstOrThrowArgs>(args?: SelectSubset<T, AuctionBidFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuctionBids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuctionBids
     * const auctionBids = await prisma.auctionBid.findMany()
     * 
     * // Get first 10 AuctionBids
     * const auctionBids = await prisma.auctionBid.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auctionBidWithIdOnly = await prisma.auctionBid.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuctionBidFindManyArgs>(args?: SelectSubset<T, AuctionBidFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuctionBid.
     * @param {AuctionBidCreateArgs} args - Arguments to create a AuctionBid.
     * @example
     * // Create one AuctionBid
     * const AuctionBid = await prisma.auctionBid.create({
     *   data: {
     *     // ... data to create a AuctionBid
     *   }
     * })
     * 
     */
    create<T extends AuctionBidCreateArgs>(args: SelectSubset<T, AuctionBidCreateArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuctionBids.
     * @param {AuctionBidCreateManyArgs} args - Arguments to create many AuctionBids.
     * @example
     * // Create many AuctionBids
     * const auctionBid = await prisma.auctionBid.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuctionBidCreateManyArgs>(args?: SelectSubset<T, AuctionBidCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuctionBids and returns the data saved in the database.
     * @param {AuctionBidCreateManyAndReturnArgs} args - Arguments to create many AuctionBids.
     * @example
     * // Create many AuctionBids
     * const auctionBid = await prisma.auctionBid.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuctionBids and only return the `id`
     * const auctionBidWithIdOnly = await prisma.auctionBid.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuctionBidCreateManyAndReturnArgs>(args?: SelectSubset<T, AuctionBidCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuctionBid.
     * @param {AuctionBidDeleteArgs} args - Arguments to delete one AuctionBid.
     * @example
     * // Delete one AuctionBid
     * const AuctionBid = await prisma.auctionBid.delete({
     *   where: {
     *     // ... filter to delete one AuctionBid
     *   }
     * })
     * 
     */
    delete<T extends AuctionBidDeleteArgs>(args: SelectSubset<T, AuctionBidDeleteArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuctionBid.
     * @param {AuctionBidUpdateArgs} args - Arguments to update one AuctionBid.
     * @example
     * // Update one AuctionBid
     * const auctionBid = await prisma.auctionBid.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuctionBidUpdateArgs>(args: SelectSubset<T, AuctionBidUpdateArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuctionBids.
     * @param {AuctionBidDeleteManyArgs} args - Arguments to filter AuctionBids to delete.
     * @example
     * // Delete a few AuctionBids
     * const { count } = await prisma.auctionBid.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuctionBidDeleteManyArgs>(args?: SelectSubset<T, AuctionBidDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuctionBids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuctionBids
     * const auctionBid = await prisma.auctionBid.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuctionBidUpdateManyArgs>(args: SelectSubset<T, AuctionBidUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuctionBid.
     * @param {AuctionBidUpsertArgs} args - Arguments to update or create a AuctionBid.
     * @example
     * // Update or create a AuctionBid
     * const auctionBid = await prisma.auctionBid.upsert({
     *   create: {
     *     // ... data to create a AuctionBid
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuctionBid we want to update
     *   }
     * })
     */
    upsert<T extends AuctionBidUpsertArgs>(args: SelectSubset<T, AuctionBidUpsertArgs<ExtArgs>>): Prisma__AuctionBidClient<$Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuctionBids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidCountArgs} args - Arguments to filter AuctionBids to count.
     * @example
     * // Count the number of AuctionBids
     * const count = await prisma.auctionBid.count({
     *   where: {
     *     // ... the filter for the AuctionBids we want to count
     *   }
     * })
    **/
    count<T extends AuctionBidCountArgs>(
      args?: Subset<T, AuctionBidCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuctionBidCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuctionBid.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuctionBidAggregateArgs>(args: Subset<T, AuctionBidAggregateArgs>): Prisma.PrismaPromise<GetAuctionBidAggregateType<T>>

    /**
     * Group by AuctionBid.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionBidGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuctionBidGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuctionBidGroupByArgs['orderBy'] }
        : { orderBy?: AuctionBidGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuctionBidGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuctionBidGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuctionBid model
   */
  readonly fields: AuctionBidFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuctionBid.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuctionBidClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuctionBid model
   */ 
  interface AuctionBidFieldRefs {
    readonly id: FieldRef<"AuctionBid", 'String'>
    readonly postId: FieldRef<"AuctionBid", 'String'>
    readonly userId: FieldRef<"AuctionBid", 'String'>
    readonly amount: FieldRef<"AuctionBid", 'Float'>
    readonly isWinning: FieldRef<"AuctionBid", 'Boolean'>
    readonly createdAt: FieldRef<"AuctionBid", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuctionBid findUnique
   */
  export type AuctionBidFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * Filter, which AuctionBid to fetch.
     */
    where: AuctionBidWhereUniqueInput
  }

  /**
   * AuctionBid findUniqueOrThrow
   */
  export type AuctionBidFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * Filter, which AuctionBid to fetch.
     */
    where: AuctionBidWhereUniqueInput
  }

  /**
   * AuctionBid findFirst
   */
  export type AuctionBidFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * Filter, which AuctionBid to fetch.
     */
    where?: AuctionBidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionBids to fetch.
     */
    orderBy?: AuctionBidOrderByWithRelationInput | AuctionBidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuctionBids.
     */
    cursor?: AuctionBidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionBids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionBids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuctionBids.
     */
    distinct?: AuctionBidScalarFieldEnum | AuctionBidScalarFieldEnum[]
  }

  /**
   * AuctionBid findFirstOrThrow
   */
  export type AuctionBidFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * Filter, which AuctionBid to fetch.
     */
    where?: AuctionBidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionBids to fetch.
     */
    orderBy?: AuctionBidOrderByWithRelationInput | AuctionBidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuctionBids.
     */
    cursor?: AuctionBidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionBids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionBids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuctionBids.
     */
    distinct?: AuctionBidScalarFieldEnum | AuctionBidScalarFieldEnum[]
  }

  /**
   * AuctionBid findMany
   */
  export type AuctionBidFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * Filter, which AuctionBids to fetch.
     */
    where?: AuctionBidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionBids to fetch.
     */
    orderBy?: AuctionBidOrderByWithRelationInput | AuctionBidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuctionBids.
     */
    cursor?: AuctionBidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionBids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionBids.
     */
    skip?: number
    distinct?: AuctionBidScalarFieldEnum | AuctionBidScalarFieldEnum[]
  }

  /**
   * AuctionBid create
   */
  export type AuctionBidCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * The data needed to create a AuctionBid.
     */
    data: XOR<AuctionBidCreateInput, AuctionBidUncheckedCreateInput>
  }

  /**
   * AuctionBid createMany
   */
  export type AuctionBidCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuctionBids.
     */
    data: AuctionBidCreateManyInput | AuctionBidCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuctionBid createManyAndReturn
   */
  export type AuctionBidCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuctionBids.
     */
    data: AuctionBidCreateManyInput | AuctionBidCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuctionBid update
   */
  export type AuctionBidUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * The data needed to update a AuctionBid.
     */
    data: XOR<AuctionBidUpdateInput, AuctionBidUncheckedUpdateInput>
    /**
     * Choose, which AuctionBid to update.
     */
    where: AuctionBidWhereUniqueInput
  }

  /**
   * AuctionBid updateMany
   */
  export type AuctionBidUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuctionBids.
     */
    data: XOR<AuctionBidUpdateManyMutationInput, AuctionBidUncheckedUpdateManyInput>
    /**
     * Filter which AuctionBids to update
     */
    where?: AuctionBidWhereInput
  }

  /**
   * AuctionBid upsert
   */
  export type AuctionBidUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * The filter to search for the AuctionBid to update in case it exists.
     */
    where: AuctionBidWhereUniqueInput
    /**
     * In case the AuctionBid found by the `where` argument doesn't exist, create a new AuctionBid with this data.
     */
    create: XOR<AuctionBidCreateInput, AuctionBidUncheckedCreateInput>
    /**
     * In case the AuctionBid was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuctionBidUpdateInput, AuctionBidUncheckedUpdateInput>
  }

  /**
   * AuctionBid delete
   */
  export type AuctionBidDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
    /**
     * Filter which AuctionBid to delete.
     */
    where: AuctionBidWhereUniqueInput
  }

  /**
   * AuctionBid deleteMany
   */
  export type AuctionBidDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuctionBids to delete
     */
    where?: AuctionBidWhereInput
  }

  /**
   * AuctionBid without action
   */
  export type AuctionBidDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionBid
     */
    select?: AuctionBidSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionBidInclude<ExtArgs> | null
  }


  /**
   * Model AuctionPayment
   */

  export type AggregateAuctionPayment = {
    _count: AuctionPaymentCountAggregateOutputType | null
    _avg: AuctionPaymentAvgAggregateOutputType | null
    _sum: AuctionPaymentSumAggregateOutputType | null
    _min: AuctionPaymentMinAggregateOutputType | null
    _max: AuctionPaymentMaxAggregateOutputType | null
  }

  export type AuctionPaymentAvgAggregateOutputType = {
    amount: number | null
  }

  export type AuctionPaymentSumAggregateOutputType = {
    amount: number | null
  }

  export type AuctionPaymentMinAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    amount: number | null
    txSignature: string | null
    status: $Enums.AuctionPaymentStatus | null
    dueAt: Date | null
    paidAt: Date | null
    sellerConfirmedAt: Date | null
    createdAt: Date | null
  }

  export type AuctionPaymentMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    userId: string | null
    amount: number | null
    txSignature: string | null
    status: $Enums.AuctionPaymentStatus | null
    dueAt: Date | null
    paidAt: Date | null
    sellerConfirmedAt: Date | null
    createdAt: Date | null
  }

  export type AuctionPaymentCountAggregateOutputType = {
    id: number
    postId: number
    userId: number
    amount: number
    txSignature: number
    status: number
    dueAt: number
    paidAt: number
    sellerConfirmedAt: number
    createdAt: number
    _all: number
  }


  export type AuctionPaymentAvgAggregateInputType = {
    amount?: true
  }

  export type AuctionPaymentSumAggregateInputType = {
    amount?: true
  }

  export type AuctionPaymentMinAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    txSignature?: true
    status?: true
    dueAt?: true
    paidAt?: true
    sellerConfirmedAt?: true
    createdAt?: true
  }

  export type AuctionPaymentMaxAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    txSignature?: true
    status?: true
    dueAt?: true
    paidAt?: true
    sellerConfirmedAt?: true
    createdAt?: true
  }

  export type AuctionPaymentCountAggregateInputType = {
    id?: true
    postId?: true
    userId?: true
    amount?: true
    txSignature?: true
    status?: true
    dueAt?: true
    paidAt?: true
    sellerConfirmedAt?: true
    createdAt?: true
    _all?: true
  }

  export type AuctionPaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuctionPayment to aggregate.
     */
    where?: AuctionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionPayments to fetch.
     */
    orderBy?: AuctionPaymentOrderByWithRelationInput | AuctionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuctionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuctionPayments
    **/
    _count?: true | AuctionPaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AuctionPaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AuctionPaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuctionPaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuctionPaymentMaxAggregateInputType
  }

  export type GetAuctionPaymentAggregateType<T extends AuctionPaymentAggregateArgs> = {
        [P in keyof T & keyof AggregateAuctionPayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuctionPayment[P]>
      : GetScalarType<T[P], AggregateAuctionPayment[P]>
  }




  export type AuctionPaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuctionPaymentWhereInput
    orderBy?: AuctionPaymentOrderByWithAggregationInput | AuctionPaymentOrderByWithAggregationInput[]
    by: AuctionPaymentScalarFieldEnum[] | AuctionPaymentScalarFieldEnum
    having?: AuctionPaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuctionPaymentCountAggregateInputType | true
    _avg?: AuctionPaymentAvgAggregateInputType
    _sum?: AuctionPaymentSumAggregateInputType
    _min?: AuctionPaymentMinAggregateInputType
    _max?: AuctionPaymentMaxAggregateInputType
  }

  export type AuctionPaymentGroupByOutputType = {
    id: string
    postId: string
    userId: string
    amount: number
    txSignature: string | null
    status: $Enums.AuctionPaymentStatus
    dueAt: Date
    paidAt: Date | null
    sellerConfirmedAt: Date | null
    createdAt: Date
    _count: AuctionPaymentCountAggregateOutputType | null
    _avg: AuctionPaymentAvgAggregateOutputType | null
    _sum: AuctionPaymentSumAggregateOutputType | null
    _min: AuctionPaymentMinAggregateOutputType | null
    _max: AuctionPaymentMaxAggregateOutputType | null
  }

  type GetAuctionPaymentGroupByPayload<T extends AuctionPaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuctionPaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuctionPaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuctionPaymentGroupByOutputType[P]>
            : GetScalarType<T[P], AuctionPaymentGroupByOutputType[P]>
        }
      >
    >


  export type AuctionPaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    status?: boolean
    dueAt?: boolean
    paidAt?: boolean
    sellerConfirmedAt?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auctionPayment"]>

  export type AuctionPaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    status?: boolean
    dueAt?: boolean
    paidAt?: boolean
    sellerConfirmedAt?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auctionPayment"]>

  export type AuctionPaymentSelectScalar = {
    id?: boolean
    postId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    status?: boolean
    dueAt?: boolean
    paidAt?: boolean
    sellerConfirmedAt?: boolean
    createdAt?: boolean
  }

  export type AuctionPaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuctionPaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuctionPaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuctionPayment"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      userId: string
      amount: number
      txSignature: string | null
      status: $Enums.AuctionPaymentStatus
      dueAt: Date
      paidAt: Date | null
      sellerConfirmedAt: Date | null
      createdAt: Date
    }, ExtArgs["result"]["auctionPayment"]>
    composites: {}
  }

  type AuctionPaymentGetPayload<S extends boolean | null | undefined | AuctionPaymentDefaultArgs> = $Result.GetResult<Prisma.$AuctionPaymentPayload, S>

  type AuctionPaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuctionPaymentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuctionPaymentCountAggregateInputType | true
    }

  export interface AuctionPaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuctionPayment'], meta: { name: 'AuctionPayment' } }
    /**
     * Find zero or one AuctionPayment that matches the filter.
     * @param {AuctionPaymentFindUniqueArgs} args - Arguments to find a AuctionPayment
     * @example
     * // Get one AuctionPayment
     * const auctionPayment = await prisma.auctionPayment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuctionPaymentFindUniqueArgs>(args: SelectSubset<T, AuctionPaymentFindUniqueArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuctionPayment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuctionPaymentFindUniqueOrThrowArgs} args - Arguments to find a AuctionPayment
     * @example
     * // Get one AuctionPayment
     * const auctionPayment = await prisma.auctionPayment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuctionPaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, AuctionPaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuctionPayment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentFindFirstArgs} args - Arguments to find a AuctionPayment
     * @example
     * // Get one AuctionPayment
     * const auctionPayment = await prisma.auctionPayment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuctionPaymentFindFirstArgs>(args?: SelectSubset<T, AuctionPaymentFindFirstArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuctionPayment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentFindFirstOrThrowArgs} args - Arguments to find a AuctionPayment
     * @example
     * // Get one AuctionPayment
     * const auctionPayment = await prisma.auctionPayment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuctionPaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, AuctionPaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuctionPayments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuctionPayments
     * const auctionPayments = await prisma.auctionPayment.findMany()
     * 
     * // Get first 10 AuctionPayments
     * const auctionPayments = await prisma.auctionPayment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auctionPaymentWithIdOnly = await prisma.auctionPayment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuctionPaymentFindManyArgs>(args?: SelectSubset<T, AuctionPaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuctionPayment.
     * @param {AuctionPaymentCreateArgs} args - Arguments to create a AuctionPayment.
     * @example
     * // Create one AuctionPayment
     * const AuctionPayment = await prisma.auctionPayment.create({
     *   data: {
     *     // ... data to create a AuctionPayment
     *   }
     * })
     * 
     */
    create<T extends AuctionPaymentCreateArgs>(args: SelectSubset<T, AuctionPaymentCreateArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuctionPayments.
     * @param {AuctionPaymentCreateManyArgs} args - Arguments to create many AuctionPayments.
     * @example
     * // Create many AuctionPayments
     * const auctionPayment = await prisma.auctionPayment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuctionPaymentCreateManyArgs>(args?: SelectSubset<T, AuctionPaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuctionPayments and returns the data saved in the database.
     * @param {AuctionPaymentCreateManyAndReturnArgs} args - Arguments to create many AuctionPayments.
     * @example
     * // Create many AuctionPayments
     * const auctionPayment = await prisma.auctionPayment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuctionPayments and only return the `id`
     * const auctionPaymentWithIdOnly = await prisma.auctionPayment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuctionPaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, AuctionPaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuctionPayment.
     * @param {AuctionPaymentDeleteArgs} args - Arguments to delete one AuctionPayment.
     * @example
     * // Delete one AuctionPayment
     * const AuctionPayment = await prisma.auctionPayment.delete({
     *   where: {
     *     // ... filter to delete one AuctionPayment
     *   }
     * })
     * 
     */
    delete<T extends AuctionPaymentDeleteArgs>(args: SelectSubset<T, AuctionPaymentDeleteArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuctionPayment.
     * @param {AuctionPaymentUpdateArgs} args - Arguments to update one AuctionPayment.
     * @example
     * // Update one AuctionPayment
     * const auctionPayment = await prisma.auctionPayment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuctionPaymentUpdateArgs>(args: SelectSubset<T, AuctionPaymentUpdateArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuctionPayments.
     * @param {AuctionPaymentDeleteManyArgs} args - Arguments to filter AuctionPayments to delete.
     * @example
     * // Delete a few AuctionPayments
     * const { count } = await prisma.auctionPayment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuctionPaymentDeleteManyArgs>(args?: SelectSubset<T, AuctionPaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuctionPayments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuctionPayments
     * const auctionPayment = await prisma.auctionPayment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuctionPaymentUpdateManyArgs>(args: SelectSubset<T, AuctionPaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuctionPayment.
     * @param {AuctionPaymentUpsertArgs} args - Arguments to update or create a AuctionPayment.
     * @example
     * // Update or create a AuctionPayment
     * const auctionPayment = await prisma.auctionPayment.upsert({
     *   create: {
     *     // ... data to create a AuctionPayment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuctionPayment we want to update
     *   }
     * })
     */
    upsert<T extends AuctionPaymentUpsertArgs>(args: SelectSubset<T, AuctionPaymentUpsertArgs<ExtArgs>>): Prisma__AuctionPaymentClient<$Result.GetResult<Prisma.$AuctionPaymentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuctionPayments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentCountArgs} args - Arguments to filter AuctionPayments to count.
     * @example
     * // Count the number of AuctionPayments
     * const count = await prisma.auctionPayment.count({
     *   where: {
     *     // ... the filter for the AuctionPayments we want to count
     *   }
     * })
    **/
    count<T extends AuctionPaymentCountArgs>(
      args?: Subset<T, AuctionPaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuctionPaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuctionPayment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuctionPaymentAggregateArgs>(args: Subset<T, AuctionPaymentAggregateArgs>): Prisma.PrismaPromise<GetAuctionPaymentAggregateType<T>>

    /**
     * Group by AuctionPayment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuctionPaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuctionPaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuctionPaymentGroupByArgs['orderBy'] }
        : { orderBy?: AuctionPaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuctionPaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuctionPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuctionPayment model
   */
  readonly fields: AuctionPaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuctionPayment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuctionPaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuctionPayment model
   */ 
  interface AuctionPaymentFieldRefs {
    readonly id: FieldRef<"AuctionPayment", 'String'>
    readonly postId: FieldRef<"AuctionPayment", 'String'>
    readonly userId: FieldRef<"AuctionPayment", 'String'>
    readonly amount: FieldRef<"AuctionPayment", 'Float'>
    readonly txSignature: FieldRef<"AuctionPayment", 'String'>
    readonly status: FieldRef<"AuctionPayment", 'AuctionPaymentStatus'>
    readonly dueAt: FieldRef<"AuctionPayment", 'DateTime'>
    readonly paidAt: FieldRef<"AuctionPayment", 'DateTime'>
    readonly sellerConfirmedAt: FieldRef<"AuctionPayment", 'DateTime'>
    readonly createdAt: FieldRef<"AuctionPayment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuctionPayment findUnique
   */
  export type AuctionPaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which AuctionPayment to fetch.
     */
    where: AuctionPaymentWhereUniqueInput
  }

  /**
   * AuctionPayment findUniqueOrThrow
   */
  export type AuctionPaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which AuctionPayment to fetch.
     */
    where: AuctionPaymentWhereUniqueInput
  }

  /**
   * AuctionPayment findFirst
   */
  export type AuctionPaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which AuctionPayment to fetch.
     */
    where?: AuctionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionPayments to fetch.
     */
    orderBy?: AuctionPaymentOrderByWithRelationInput | AuctionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuctionPayments.
     */
    cursor?: AuctionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuctionPayments.
     */
    distinct?: AuctionPaymentScalarFieldEnum | AuctionPaymentScalarFieldEnum[]
  }

  /**
   * AuctionPayment findFirstOrThrow
   */
  export type AuctionPaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which AuctionPayment to fetch.
     */
    where?: AuctionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionPayments to fetch.
     */
    orderBy?: AuctionPaymentOrderByWithRelationInput | AuctionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuctionPayments.
     */
    cursor?: AuctionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionPayments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuctionPayments.
     */
    distinct?: AuctionPaymentScalarFieldEnum | AuctionPaymentScalarFieldEnum[]
  }

  /**
   * AuctionPayment findMany
   */
  export type AuctionPaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * Filter, which AuctionPayments to fetch.
     */
    where?: AuctionPaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuctionPayments to fetch.
     */
    orderBy?: AuctionPaymentOrderByWithRelationInput | AuctionPaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuctionPayments.
     */
    cursor?: AuctionPaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuctionPayments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuctionPayments.
     */
    skip?: number
    distinct?: AuctionPaymentScalarFieldEnum | AuctionPaymentScalarFieldEnum[]
  }

  /**
   * AuctionPayment create
   */
  export type AuctionPaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a AuctionPayment.
     */
    data: XOR<AuctionPaymentCreateInput, AuctionPaymentUncheckedCreateInput>
  }

  /**
   * AuctionPayment createMany
   */
  export type AuctionPaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuctionPayments.
     */
    data: AuctionPaymentCreateManyInput | AuctionPaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuctionPayment createManyAndReturn
   */
  export type AuctionPaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuctionPayments.
     */
    data: AuctionPaymentCreateManyInput | AuctionPaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuctionPayment update
   */
  export type AuctionPaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a AuctionPayment.
     */
    data: XOR<AuctionPaymentUpdateInput, AuctionPaymentUncheckedUpdateInput>
    /**
     * Choose, which AuctionPayment to update.
     */
    where: AuctionPaymentWhereUniqueInput
  }

  /**
   * AuctionPayment updateMany
   */
  export type AuctionPaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuctionPayments.
     */
    data: XOR<AuctionPaymentUpdateManyMutationInput, AuctionPaymentUncheckedUpdateManyInput>
    /**
     * Filter which AuctionPayments to update
     */
    where?: AuctionPaymentWhereInput
  }

  /**
   * AuctionPayment upsert
   */
  export type AuctionPaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the AuctionPayment to update in case it exists.
     */
    where: AuctionPaymentWhereUniqueInput
    /**
     * In case the AuctionPayment found by the `where` argument doesn't exist, create a new AuctionPayment with this data.
     */
    create: XOR<AuctionPaymentCreateInput, AuctionPaymentUncheckedCreateInput>
    /**
     * In case the AuctionPayment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuctionPaymentUpdateInput, AuctionPaymentUncheckedUpdateInput>
  }

  /**
   * AuctionPayment delete
   */
  export type AuctionPaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
    /**
     * Filter which AuctionPayment to delete.
     */
    where: AuctionPaymentWhereUniqueInput
  }

  /**
   * AuctionPayment deleteMany
   */
  export type AuctionPaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuctionPayments to delete
     */
    where?: AuctionPaymentWhereInput
  }

  /**
   * AuctionPayment without action
   */
  export type AuctionPaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuctionPayment
     */
    select?: AuctionPaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuctionPaymentInclude<ExtArgs> | null
  }


  /**
   * Model FlashSale
   */

  export type AggregateFlashSale = {
    _count: FlashSaleCountAggregateOutputType | null
    _avg: FlashSaleAvgAggregateOutputType | null
    _sum: FlashSaleSumAggregateOutputType | null
    _min: FlashSaleMinAggregateOutputType | null
    _max: FlashSaleMaxAggregateOutputType | null
  }

  export type FlashSaleAvgAggregateOutputType = {
    discount: number | null
    maxRedemptions: number | null
    usedCount: number | null
  }

  export type FlashSaleSumAggregateOutputType = {
    discount: number | null
    maxRedemptions: number | null
    usedCount: number | null
  }

  export type FlashSaleMinAggregateOutputType = {
    id: string | null
    creatorId: string | null
    postId: string | null
    subscriptionPlan: string | null
    discount: number | null
    maxRedemptions: number | null
    usedCount: number | null
    startAt: Date | null
    endAt: Date | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FlashSaleMaxAggregateOutputType = {
    id: string | null
    creatorId: string | null
    postId: string | null
    subscriptionPlan: string | null
    discount: number | null
    maxRedemptions: number | null
    usedCount: number | null
    startAt: Date | null
    endAt: Date | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FlashSaleCountAggregateOutputType = {
    id: number
    creatorId: number
    postId: number
    subscriptionPlan: number
    discount: number
    maxRedemptions: number
    usedCount: number
    startAt: number
    endAt: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FlashSaleAvgAggregateInputType = {
    discount?: true
    maxRedemptions?: true
    usedCount?: true
  }

  export type FlashSaleSumAggregateInputType = {
    discount?: true
    maxRedemptions?: true
    usedCount?: true
  }

  export type FlashSaleMinAggregateInputType = {
    id?: true
    creatorId?: true
    postId?: true
    subscriptionPlan?: true
    discount?: true
    maxRedemptions?: true
    usedCount?: true
    startAt?: true
    endAt?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FlashSaleMaxAggregateInputType = {
    id?: true
    creatorId?: true
    postId?: true
    subscriptionPlan?: true
    discount?: true
    maxRedemptions?: true
    usedCount?: true
    startAt?: true
    endAt?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FlashSaleCountAggregateInputType = {
    id?: true
    creatorId?: true
    postId?: true
    subscriptionPlan?: true
    discount?: true
    maxRedemptions?: true
    usedCount?: true
    startAt?: true
    endAt?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FlashSaleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FlashSale to aggregate.
     */
    where?: FlashSaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSales to fetch.
     */
    orderBy?: FlashSaleOrderByWithRelationInput | FlashSaleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FlashSaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FlashSales
    **/
    _count?: true | FlashSaleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FlashSaleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FlashSaleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FlashSaleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FlashSaleMaxAggregateInputType
  }

  export type GetFlashSaleAggregateType<T extends FlashSaleAggregateArgs> = {
        [P in keyof T & keyof AggregateFlashSale]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlashSale[P]>
      : GetScalarType<T[P], AggregateFlashSale[P]>
  }




  export type FlashSaleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlashSaleWhereInput
    orderBy?: FlashSaleOrderByWithAggregationInput | FlashSaleOrderByWithAggregationInput[]
    by: FlashSaleScalarFieldEnum[] | FlashSaleScalarFieldEnum
    having?: FlashSaleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FlashSaleCountAggregateInputType | true
    _avg?: FlashSaleAvgAggregateInputType
    _sum?: FlashSaleSumAggregateInputType
    _min?: FlashSaleMinAggregateInputType
    _max?: FlashSaleMaxAggregateInputType
  }

  export type FlashSaleGroupByOutputType = {
    id: string
    creatorId: string | null
    postId: string | null
    subscriptionPlan: string | null
    discount: number
    maxRedemptions: number | null
    usedCount: number
    startAt: Date
    endAt: Date
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: FlashSaleCountAggregateOutputType | null
    _avg: FlashSaleAvgAggregateOutputType | null
    _sum: FlashSaleSumAggregateOutputType | null
    _min: FlashSaleMinAggregateOutputType | null
    _max: FlashSaleMaxAggregateOutputType | null
  }

  type GetFlashSaleGroupByPayload<T extends FlashSaleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FlashSaleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FlashSaleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FlashSaleGroupByOutputType[P]>
            : GetScalarType<T[P], FlashSaleGroupByOutputType[P]>
        }
      >
    >


  export type FlashSaleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creatorId?: boolean
    postId?: boolean
    subscriptionPlan?: boolean
    discount?: boolean
    maxRedemptions?: boolean
    usedCount?: boolean
    startAt?: boolean
    endAt?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | FlashSale$creatorArgs<ExtArgs>
    post?: boolean | FlashSale$postArgs<ExtArgs>
    redemptions?: boolean | FlashSale$redemptionsArgs<ExtArgs>
    _count?: boolean | FlashSaleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flashSale"]>

  export type FlashSaleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    creatorId?: boolean
    postId?: boolean
    subscriptionPlan?: boolean
    discount?: boolean
    maxRedemptions?: boolean
    usedCount?: boolean
    startAt?: boolean
    endAt?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    creator?: boolean | FlashSale$creatorArgs<ExtArgs>
    post?: boolean | FlashSale$postArgs<ExtArgs>
  }, ExtArgs["result"]["flashSale"]>

  export type FlashSaleSelectScalar = {
    id?: boolean
    creatorId?: boolean
    postId?: boolean
    subscriptionPlan?: boolean
    discount?: boolean
    maxRedemptions?: boolean
    usedCount?: boolean
    startAt?: boolean
    endAt?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FlashSaleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | FlashSale$creatorArgs<ExtArgs>
    post?: boolean | FlashSale$postArgs<ExtArgs>
    redemptions?: boolean | FlashSale$redemptionsArgs<ExtArgs>
    _count?: boolean | FlashSaleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FlashSaleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | FlashSale$creatorArgs<ExtArgs>
    post?: boolean | FlashSale$postArgs<ExtArgs>
  }

  export type $FlashSalePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FlashSale"
    objects: {
      creator: Prisma.$UserPayload<ExtArgs> | null
      post: Prisma.$PostPayload<ExtArgs> | null
      redemptions: Prisma.$FlashSaleRedemptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      creatorId: string | null
      postId: string | null
      subscriptionPlan: string | null
      discount: number
      maxRedemptions: number | null
      usedCount: number
      startAt: Date
      endAt: Date
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["flashSale"]>
    composites: {}
  }

  type FlashSaleGetPayload<S extends boolean | null | undefined | FlashSaleDefaultArgs> = $Result.GetResult<Prisma.$FlashSalePayload, S>

  type FlashSaleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FlashSaleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FlashSaleCountAggregateInputType | true
    }

  export interface FlashSaleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FlashSale'], meta: { name: 'FlashSale' } }
    /**
     * Find zero or one FlashSale that matches the filter.
     * @param {FlashSaleFindUniqueArgs} args - Arguments to find a FlashSale
     * @example
     * // Get one FlashSale
     * const flashSale = await prisma.flashSale.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FlashSaleFindUniqueArgs>(args: SelectSubset<T, FlashSaleFindUniqueArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FlashSale that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FlashSaleFindUniqueOrThrowArgs} args - Arguments to find a FlashSale
     * @example
     * // Get one FlashSale
     * const flashSale = await prisma.flashSale.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FlashSaleFindUniqueOrThrowArgs>(args: SelectSubset<T, FlashSaleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FlashSale that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleFindFirstArgs} args - Arguments to find a FlashSale
     * @example
     * // Get one FlashSale
     * const flashSale = await prisma.flashSale.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FlashSaleFindFirstArgs>(args?: SelectSubset<T, FlashSaleFindFirstArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FlashSale that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleFindFirstOrThrowArgs} args - Arguments to find a FlashSale
     * @example
     * // Get one FlashSale
     * const flashSale = await prisma.flashSale.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FlashSaleFindFirstOrThrowArgs>(args?: SelectSubset<T, FlashSaleFindFirstOrThrowArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FlashSales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FlashSales
     * const flashSales = await prisma.flashSale.findMany()
     * 
     * // Get first 10 FlashSales
     * const flashSales = await prisma.flashSale.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const flashSaleWithIdOnly = await prisma.flashSale.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FlashSaleFindManyArgs>(args?: SelectSubset<T, FlashSaleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FlashSale.
     * @param {FlashSaleCreateArgs} args - Arguments to create a FlashSale.
     * @example
     * // Create one FlashSale
     * const FlashSale = await prisma.flashSale.create({
     *   data: {
     *     // ... data to create a FlashSale
     *   }
     * })
     * 
     */
    create<T extends FlashSaleCreateArgs>(args: SelectSubset<T, FlashSaleCreateArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FlashSales.
     * @param {FlashSaleCreateManyArgs} args - Arguments to create many FlashSales.
     * @example
     * // Create many FlashSales
     * const flashSale = await prisma.flashSale.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FlashSaleCreateManyArgs>(args?: SelectSubset<T, FlashSaleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FlashSales and returns the data saved in the database.
     * @param {FlashSaleCreateManyAndReturnArgs} args - Arguments to create many FlashSales.
     * @example
     * // Create many FlashSales
     * const flashSale = await prisma.flashSale.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FlashSales and only return the `id`
     * const flashSaleWithIdOnly = await prisma.flashSale.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FlashSaleCreateManyAndReturnArgs>(args?: SelectSubset<T, FlashSaleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FlashSale.
     * @param {FlashSaleDeleteArgs} args - Arguments to delete one FlashSale.
     * @example
     * // Delete one FlashSale
     * const FlashSale = await prisma.flashSale.delete({
     *   where: {
     *     // ... filter to delete one FlashSale
     *   }
     * })
     * 
     */
    delete<T extends FlashSaleDeleteArgs>(args: SelectSubset<T, FlashSaleDeleteArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FlashSale.
     * @param {FlashSaleUpdateArgs} args - Arguments to update one FlashSale.
     * @example
     * // Update one FlashSale
     * const flashSale = await prisma.flashSale.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FlashSaleUpdateArgs>(args: SelectSubset<T, FlashSaleUpdateArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FlashSales.
     * @param {FlashSaleDeleteManyArgs} args - Arguments to filter FlashSales to delete.
     * @example
     * // Delete a few FlashSales
     * const { count } = await prisma.flashSale.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FlashSaleDeleteManyArgs>(args?: SelectSubset<T, FlashSaleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FlashSales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FlashSales
     * const flashSale = await prisma.flashSale.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FlashSaleUpdateManyArgs>(args: SelectSubset<T, FlashSaleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FlashSale.
     * @param {FlashSaleUpsertArgs} args - Arguments to update or create a FlashSale.
     * @example
     * // Update or create a FlashSale
     * const flashSale = await prisma.flashSale.upsert({
     *   create: {
     *     // ... data to create a FlashSale
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FlashSale we want to update
     *   }
     * })
     */
    upsert<T extends FlashSaleUpsertArgs>(args: SelectSubset<T, FlashSaleUpsertArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FlashSales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleCountArgs} args - Arguments to filter FlashSales to count.
     * @example
     * // Count the number of FlashSales
     * const count = await prisma.flashSale.count({
     *   where: {
     *     // ... the filter for the FlashSales we want to count
     *   }
     * })
    **/
    count<T extends FlashSaleCountArgs>(
      args?: Subset<T, FlashSaleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FlashSaleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FlashSale.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FlashSaleAggregateArgs>(args: Subset<T, FlashSaleAggregateArgs>): Prisma.PrismaPromise<GetFlashSaleAggregateType<T>>

    /**
     * Group by FlashSale.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FlashSaleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FlashSaleGroupByArgs['orderBy'] }
        : { orderBy?: FlashSaleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FlashSaleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlashSaleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FlashSale model
   */
  readonly fields: FlashSaleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FlashSale.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FlashSaleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends FlashSale$creatorArgs<ExtArgs> = {}>(args?: Subset<T, FlashSale$creatorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    post<T extends FlashSale$postArgs<ExtArgs> = {}>(args?: Subset<T, FlashSale$postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    redemptions<T extends FlashSale$redemptionsArgs<ExtArgs> = {}>(args?: Subset<T, FlashSale$redemptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FlashSale model
   */ 
  interface FlashSaleFieldRefs {
    readonly id: FieldRef<"FlashSale", 'String'>
    readonly creatorId: FieldRef<"FlashSale", 'String'>
    readonly postId: FieldRef<"FlashSale", 'String'>
    readonly subscriptionPlan: FieldRef<"FlashSale", 'String'>
    readonly discount: FieldRef<"FlashSale", 'Float'>
    readonly maxRedemptions: FieldRef<"FlashSale", 'Int'>
    readonly usedCount: FieldRef<"FlashSale", 'Int'>
    readonly startAt: FieldRef<"FlashSale", 'DateTime'>
    readonly endAt: FieldRef<"FlashSale", 'DateTime'>
    readonly isActive: FieldRef<"FlashSale", 'Boolean'>
    readonly createdAt: FieldRef<"FlashSale", 'DateTime'>
    readonly updatedAt: FieldRef<"FlashSale", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FlashSale findUnique
   */
  export type FlashSaleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * Filter, which FlashSale to fetch.
     */
    where: FlashSaleWhereUniqueInput
  }

  /**
   * FlashSale findUniqueOrThrow
   */
  export type FlashSaleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * Filter, which FlashSale to fetch.
     */
    where: FlashSaleWhereUniqueInput
  }

  /**
   * FlashSale findFirst
   */
  export type FlashSaleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * Filter, which FlashSale to fetch.
     */
    where?: FlashSaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSales to fetch.
     */
    orderBy?: FlashSaleOrderByWithRelationInput | FlashSaleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FlashSales.
     */
    cursor?: FlashSaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FlashSales.
     */
    distinct?: FlashSaleScalarFieldEnum | FlashSaleScalarFieldEnum[]
  }

  /**
   * FlashSale findFirstOrThrow
   */
  export type FlashSaleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * Filter, which FlashSale to fetch.
     */
    where?: FlashSaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSales to fetch.
     */
    orderBy?: FlashSaleOrderByWithRelationInput | FlashSaleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FlashSales.
     */
    cursor?: FlashSaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FlashSales.
     */
    distinct?: FlashSaleScalarFieldEnum | FlashSaleScalarFieldEnum[]
  }

  /**
   * FlashSale findMany
   */
  export type FlashSaleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * Filter, which FlashSales to fetch.
     */
    where?: FlashSaleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSales to fetch.
     */
    orderBy?: FlashSaleOrderByWithRelationInput | FlashSaleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FlashSales.
     */
    cursor?: FlashSaleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSales.
     */
    skip?: number
    distinct?: FlashSaleScalarFieldEnum | FlashSaleScalarFieldEnum[]
  }

  /**
   * FlashSale create
   */
  export type FlashSaleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * The data needed to create a FlashSale.
     */
    data: XOR<FlashSaleCreateInput, FlashSaleUncheckedCreateInput>
  }

  /**
   * FlashSale createMany
   */
  export type FlashSaleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FlashSales.
     */
    data: FlashSaleCreateManyInput | FlashSaleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FlashSale createManyAndReturn
   */
  export type FlashSaleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FlashSales.
     */
    data: FlashSaleCreateManyInput | FlashSaleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FlashSale update
   */
  export type FlashSaleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * The data needed to update a FlashSale.
     */
    data: XOR<FlashSaleUpdateInput, FlashSaleUncheckedUpdateInput>
    /**
     * Choose, which FlashSale to update.
     */
    where: FlashSaleWhereUniqueInput
  }

  /**
   * FlashSale updateMany
   */
  export type FlashSaleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FlashSales.
     */
    data: XOR<FlashSaleUpdateManyMutationInput, FlashSaleUncheckedUpdateManyInput>
    /**
     * Filter which FlashSales to update
     */
    where?: FlashSaleWhereInput
  }

  /**
   * FlashSale upsert
   */
  export type FlashSaleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * The filter to search for the FlashSale to update in case it exists.
     */
    where: FlashSaleWhereUniqueInput
    /**
     * In case the FlashSale found by the `where` argument doesn't exist, create a new FlashSale with this data.
     */
    create: XOR<FlashSaleCreateInput, FlashSaleUncheckedCreateInput>
    /**
     * In case the FlashSale was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FlashSaleUpdateInput, FlashSaleUncheckedUpdateInput>
  }

  /**
   * FlashSale delete
   */
  export type FlashSaleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
    /**
     * Filter which FlashSale to delete.
     */
    where: FlashSaleWhereUniqueInput
  }

  /**
   * FlashSale deleteMany
   */
  export type FlashSaleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FlashSales to delete
     */
    where?: FlashSaleWhereInput
  }

  /**
   * FlashSale.creator
   */
  export type FlashSale$creatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FlashSale.post
   */
  export type FlashSale$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * FlashSale.redemptions
   */
  export type FlashSale$redemptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    where?: FlashSaleRedemptionWhereInput
    orderBy?: FlashSaleRedemptionOrderByWithRelationInput | FlashSaleRedemptionOrderByWithRelationInput[]
    cursor?: FlashSaleRedemptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FlashSaleRedemptionScalarFieldEnum | FlashSaleRedemptionScalarFieldEnum[]
  }

  /**
   * FlashSale without action
   */
  export type FlashSaleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSale
     */
    select?: FlashSaleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleInclude<ExtArgs> | null
  }


  /**
   * Model FlashSaleRedemption
   */

  export type AggregateFlashSaleRedemption = {
    _count: FlashSaleRedemptionCountAggregateOutputType | null
    _avg: FlashSaleRedemptionAvgAggregateOutputType | null
    _sum: FlashSaleRedemptionSumAggregateOutputType | null
    _min: FlashSaleRedemptionMinAggregateOutputType | null
    _max: FlashSaleRedemptionMaxAggregateOutputType | null
  }

  export type FlashSaleRedemptionAvgAggregateOutputType = {
    originalPrice: number | null
    discountAmount: number | null
    finalPrice: number | null
  }

  export type FlashSaleRedemptionSumAggregateOutputType = {
    originalPrice: number | null
    discountAmount: number | null
    finalPrice: number | null
  }

  export type FlashSaleRedemptionMinAggregateOutputType = {
    id: string | null
    flashSaleId: string | null
    userId: string | null
    originalPrice: number | null
    discountAmount: number | null
    finalPrice: number | null
    redeemedAt: Date | null
  }

  export type FlashSaleRedemptionMaxAggregateOutputType = {
    id: string | null
    flashSaleId: string | null
    userId: string | null
    originalPrice: number | null
    discountAmount: number | null
    finalPrice: number | null
    redeemedAt: Date | null
  }

  export type FlashSaleRedemptionCountAggregateOutputType = {
    id: number
    flashSaleId: number
    userId: number
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt: number
    _all: number
  }


  export type FlashSaleRedemptionAvgAggregateInputType = {
    originalPrice?: true
    discountAmount?: true
    finalPrice?: true
  }

  export type FlashSaleRedemptionSumAggregateInputType = {
    originalPrice?: true
    discountAmount?: true
    finalPrice?: true
  }

  export type FlashSaleRedemptionMinAggregateInputType = {
    id?: true
    flashSaleId?: true
    userId?: true
    originalPrice?: true
    discountAmount?: true
    finalPrice?: true
    redeemedAt?: true
  }

  export type FlashSaleRedemptionMaxAggregateInputType = {
    id?: true
    flashSaleId?: true
    userId?: true
    originalPrice?: true
    discountAmount?: true
    finalPrice?: true
    redeemedAt?: true
  }

  export type FlashSaleRedemptionCountAggregateInputType = {
    id?: true
    flashSaleId?: true
    userId?: true
    originalPrice?: true
    discountAmount?: true
    finalPrice?: true
    redeemedAt?: true
    _all?: true
  }

  export type FlashSaleRedemptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FlashSaleRedemption to aggregate.
     */
    where?: FlashSaleRedemptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSaleRedemptions to fetch.
     */
    orderBy?: FlashSaleRedemptionOrderByWithRelationInput | FlashSaleRedemptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FlashSaleRedemptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSaleRedemptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSaleRedemptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FlashSaleRedemptions
    **/
    _count?: true | FlashSaleRedemptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FlashSaleRedemptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FlashSaleRedemptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FlashSaleRedemptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FlashSaleRedemptionMaxAggregateInputType
  }

  export type GetFlashSaleRedemptionAggregateType<T extends FlashSaleRedemptionAggregateArgs> = {
        [P in keyof T & keyof AggregateFlashSaleRedemption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlashSaleRedemption[P]>
      : GetScalarType<T[P], AggregateFlashSaleRedemption[P]>
  }




  export type FlashSaleRedemptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FlashSaleRedemptionWhereInput
    orderBy?: FlashSaleRedemptionOrderByWithAggregationInput | FlashSaleRedemptionOrderByWithAggregationInput[]
    by: FlashSaleRedemptionScalarFieldEnum[] | FlashSaleRedemptionScalarFieldEnum
    having?: FlashSaleRedemptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FlashSaleRedemptionCountAggregateInputType | true
    _avg?: FlashSaleRedemptionAvgAggregateInputType
    _sum?: FlashSaleRedemptionSumAggregateInputType
    _min?: FlashSaleRedemptionMinAggregateInputType
    _max?: FlashSaleRedemptionMaxAggregateInputType
  }

  export type FlashSaleRedemptionGroupByOutputType = {
    id: string
    flashSaleId: string
    userId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt: Date
    _count: FlashSaleRedemptionCountAggregateOutputType | null
    _avg: FlashSaleRedemptionAvgAggregateOutputType | null
    _sum: FlashSaleRedemptionSumAggregateOutputType | null
    _min: FlashSaleRedemptionMinAggregateOutputType | null
    _max: FlashSaleRedemptionMaxAggregateOutputType | null
  }

  type GetFlashSaleRedemptionGroupByPayload<T extends FlashSaleRedemptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FlashSaleRedemptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FlashSaleRedemptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FlashSaleRedemptionGroupByOutputType[P]>
            : GetScalarType<T[P], FlashSaleRedemptionGroupByOutputType[P]>
        }
      >
    >


  export type FlashSaleRedemptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    flashSaleId?: boolean
    userId?: boolean
    originalPrice?: boolean
    discountAmount?: boolean
    finalPrice?: boolean
    redeemedAt?: boolean
    flashSale?: boolean | FlashSaleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flashSaleRedemption"]>

  export type FlashSaleRedemptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    flashSaleId?: boolean
    userId?: boolean
    originalPrice?: boolean
    discountAmount?: boolean
    finalPrice?: boolean
    redeemedAt?: boolean
    flashSale?: boolean | FlashSaleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flashSaleRedemption"]>

  export type FlashSaleRedemptionSelectScalar = {
    id?: boolean
    flashSaleId?: boolean
    userId?: boolean
    originalPrice?: boolean
    discountAmount?: boolean
    finalPrice?: boolean
    redeemedAt?: boolean
  }

  export type FlashSaleRedemptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flashSale?: boolean | FlashSaleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FlashSaleRedemptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flashSale?: boolean | FlashSaleDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FlashSaleRedemptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FlashSaleRedemption"
    objects: {
      flashSale: Prisma.$FlashSalePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      flashSaleId: string
      userId: string
      originalPrice: number
      discountAmount: number
      finalPrice: number
      redeemedAt: Date
    }, ExtArgs["result"]["flashSaleRedemption"]>
    composites: {}
  }

  type FlashSaleRedemptionGetPayload<S extends boolean | null | undefined | FlashSaleRedemptionDefaultArgs> = $Result.GetResult<Prisma.$FlashSaleRedemptionPayload, S>

  type FlashSaleRedemptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FlashSaleRedemptionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FlashSaleRedemptionCountAggregateInputType | true
    }

  export interface FlashSaleRedemptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FlashSaleRedemption'], meta: { name: 'FlashSaleRedemption' } }
    /**
     * Find zero or one FlashSaleRedemption that matches the filter.
     * @param {FlashSaleRedemptionFindUniqueArgs} args - Arguments to find a FlashSaleRedemption
     * @example
     * // Get one FlashSaleRedemption
     * const flashSaleRedemption = await prisma.flashSaleRedemption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FlashSaleRedemptionFindUniqueArgs>(args: SelectSubset<T, FlashSaleRedemptionFindUniqueArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FlashSaleRedemption that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FlashSaleRedemptionFindUniqueOrThrowArgs} args - Arguments to find a FlashSaleRedemption
     * @example
     * // Get one FlashSaleRedemption
     * const flashSaleRedemption = await prisma.flashSaleRedemption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FlashSaleRedemptionFindUniqueOrThrowArgs>(args: SelectSubset<T, FlashSaleRedemptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FlashSaleRedemption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionFindFirstArgs} args - Arguments to find a FlashSaleRedemption
     * @example
     * // Get one FlashSaleRedemption
     * const flashSaleRedemption = await prisma.flashSaleRedemption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FlashSaleRedemptionFindFirstArgs>(args?: SelectSubset<T, FlashSaleRedemptionFindFirstArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FlashSaleRedemption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionFindFirstOrThrowArgs} args - Arguments to find a FlashSaleRedemption
     * @example
     * // Get one FlashSaleRedemption
     * const flashSaleRedemption = await prisma.flashSaleRedemption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FlashSaleRedemptionFindFirstOrThrowArgs>(args?: SelectSubset<T, FlashSaleRedemptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FlashSaleRedemptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FlashSaleRedemptions
     * const flashSaleRedemptions = await prisma.flashSaleRedemption.findMany()
     * 
     * // Get first 10 FlashSaleRedemptions
     * const flashSaleRedemptions = await prisma.flashSaleRedemption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const flashSaleRedemptionWithIdOnly = await prisma.flashSaleRedemption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FlashSaleRedemptionFindManyArgs>(args?: SelectSubset<T, FlashSaleRedemptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FlashSaleRedemption.
     * @param {FlashSaleRedemptionCreateArgs} args - Arguments to create a FlashSaleRedemption.
     * @example
     * // Create one FlashSaleRedemption
     * const FlashSaleRedemption = await prisma.flashSaleRedemption.create({
     *   data: {
     *     // ... data to create a FlashSaleRedemption
     *   }
     * })
     * 
     */
    create<T extends FlashSaleRedemptionCreateArgs>(args: SelectSubset<T, FlashSaleRedemptionCreateArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FlashSaleRedemptions.
     * @param {FlashSaleRedemptionCreateManyArgs} args - Arguments to create many FlashSaleRedemptions.
     * @example
     * // Create many FlashSaleRedemptions
     * const flashSaleRedemption = await prisma.flashSaleRedemption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FlashSaleRedemptionCreateManyArgs>(args?: SelectSubset<T, FlashSaleRedemptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FlashSaleRedemptions and returns the data saved in the database.
     * @param {FlashSaleRedemptionCreateManyAndReturnArgs} args - Arguments to create many FlashSaleRedemptions.
     * @example
     * // Create many FlashSaleRedemptions
     * const flashSaleRedemption = await prisma.flashSaleRedemption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FlashSaleRedemptions and only return the `id`
     * const flashSaleRedemptionWithIdOnly = await prisma.flashSaleRedemption.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FlashSaleRedemptionCreateManyAndReturnArgs>(args?: SelectSubset<T, FlashSaleRedemptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FlashSaleRedemption.
     * @param {FlashSaleRedemptionDeleteArgs} args - Arguments to delete one FlashSaleRedemption.
     * @example
     * // Delete one FlashSaleRedemption
     * const FlashSaleRedemption = await prisma.flashSaleRedemption.delete({
     *   where: {
     *     // ... filter to delete one FlashSaleRedemption
     *   }
     * })
     * 
     */
    delete<T extends FlashSaleRedemptionDeleteArgs>(args: SelectSubset<T, FlashSaleRedemptionDeleteArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FlashSaleRedemption.
     * @param {FlashSaleRedemptionUpdateArgs} args - Arguments to update one FlashSaleRedemption.
     * @example
     * // Update one FlashSaleRedemption
     * const flashSaleRedemption = await prisma.flashSaleRedemption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FlashSaleRedemptionUpdateArgs>(args: SelectSubset<T, FlashSaleRedemptionUpdateArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FlashSaleRedemptions.
     * @param {FlashSaleRedemptionDeleteManyArgs} args - Arguments to filter FlashSaleRedemptions to delete.
     * @example
     * // Delete a few FlashSaleRedemptions
     * const { count } = await prisma.flashSaleRedemption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FlashSaleRedemptionDeleteManyArgs>(args?: SelectSubset<T, FlashSaleRedemptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FlashSaleRedemptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FlashSaleRedemptions
     * const flashSaleRedemption = await prisma.flashSaleRedemption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FlashSaleRedemptionUpdateManyArgs>(args: SelectSubset<T, FlashSaleRedemptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FlashSaleRedemption.
     * @param {FlashSaleRedemptionUpsertArgs} args - Arguments to update or create a FlashSaleRedemption.
     * @example
     * // Update or create a FlashSaleRedemption
     * const flashSaleRedemption = await prisma.flashSaleRedemption.upsert({
     *   create: {
     *     // ... data to create a FlashSaleRedemption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FlashSaleRedemption we want to update
     *   }
     * })
     */
    upsert<T extends FlashSaleRedemptionUpsertArgs>(args: SelectSubset<T, FlashSaleRedemptionUpsertArgs<ExtArgs>>): Prisma__FlashSaleRedemptionClient<$Result.GetResult<Prisma.$FlashSaleRedemptionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FlashSaleRedemptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionCountArgs} args - Arguments to filter FlashSaleRedemptions to count.
     * @example
     * // Count the number of FlashSaleRedemptions
     * const count = await prisma.flashSaleRedemption.count({
     *   where: {
     *     // ... the filter for the FlashSaleRedemptions we want to count
     *   }
     * })
    **/
    count<T extends FlashSaleRedemptionCountArgs>(
      args?: Subset<T, FlashSaleRedemptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FlashSaleRedemptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FlashSaleRedemption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FlashSaleRedemptionAggregateArgs>(args: Subset<T, FlashSaleRedemptionAggregateArgs>): Prisma.PrismaPromise<GetFlashSaleRedemptionAggregateType<T>>

    /**
     * Group by FlashSaleRedemption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FlashSaleRedemptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FlashSaleRedemptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FlashSaleRedemptionGroupByArgs['orderBy'] }
        : { orderBy?: FlashSaleRedemptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FlashSaleRedemptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlashSaleRedemptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FlashSaleRedemption model
   */
  readonly fields: FlashSaleRedemptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FlashSaleRedemption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FlashSaleRedemptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    flashSale<T extends FlashSaleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FlashSaleDefaultArgs<ExtArgs>>): Prisma__FlashSaleClient<$Result.GetResult<Prisma.$FlashSalePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FlashSaleRedemption model
   */ 
  interface FlashSaleRedemptionFieldRefs {
    readonly id: FieldRef<"FlashSaleRedemption", 'String'>
    readonly flashSaleId: FieldRef<"FlashSaleRedemption", 'String'>
    readonly userId: FieldRef<"FlashSaleRedemption", 'String'>
    readonly originalPrice: FieldRef<"FlashSaleRedemption", 'Float'>
    readonly discountAmount: FieldRef<"FlashSaleRedemption", 'Float'>
    readonly finalPrice: FieldRef<"FlashSaleRedemption", 'Float'>
    readonly redeemedAt: FieldRef<"FlashSaleRedemption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FlashSaleRedemption findUnique
   */
  export type FlashSaleRedemptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * Filter, which FlashSaleRedemption to fetch.
     */
    where: FlashSaleRedemptionWhereUniqueInput
  }

  /**
   * FlashSaleRedemption findUniqueOrThrow
   */
  export type FlashSaleRedemptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * Filter, which FlashSaleRedemption to fetch.
     */
    where: FlashSaleRedemptionWhereUniqueInput
  }

  /**
   * FlashSaleRedemption findFirst
   */
  export type FlashSaleRedemptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * Filter, which FlashSaleRedemption to fetch.
     */
    where?: FlashSaleRedemptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSaleRedemptions to fetch.
     */
    orderBy?: FlashSaleRedemptionOrderByWithRelationInput | FlashSaleRedemptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FlashSaleRedemptions.
     */
    cursor?: FlashSaleRedemptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSaleRedemptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSaleRedemptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FlashSaleRedemptions.
     */
    distinct?: FlashSaleRedemptionScalarFieldEnum | FlashSaleRedemptionScalarFieldEnum[]
  }

  /**
   * FlashSaleRedemption findFirstOrThrow
   */
  export type FlashSaleRedemptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * Filter, which FlashSaleRedemption to fetch.
     */
    where?: FlashSaleRedemptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSaleRedemptions to fetch.
     */
    orderBy?: FlashSaleRedemptionOrderByWithRelationInput | FlashSaleRedemptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FlashSaleRedemptions.
     */
    cursor?: FlashSaleRedemptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSaleRedemptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSaleRedemptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FlashSaleRedemptions.
     */
    distinct?: FlashSaleRedemptionScalarFieldEnum | FlashSaleRedemptionScalarFieldEnum[]
  }

  /**
   * FlashSaleRedemption findMany
   */
  export type FlashSaleRedemptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * Filter, which FlashSaleRedemptions to fetch.
     */
    where?: FlashSaleRedemptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FlashSaleRedemptions to fetch.
     */
    orderBy?: FlashSaleRedemptionOrderByWithRelationInput | FlashSaleRedemptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FlashSaleRedemptions.
     */
    cursor?: FlashSaleRedemptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FlashSaleRedemptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FlashSaleRedemptions.
     */
    skip?: number
    distinct?: FlashSaleRedemptionScalarFieldEnum | FlashSaleRedemptionScalarFieldEnum[]
  }

  /**
   * FlashSaleRedemption create
   */
  export type FlashSaleRedemptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * The data needed to create a FlashSaleRedemption.
     */
    data: XOR<FlashSaleRedemptionCreateInput, FlashSaleRedemptionUncheckedCreateInput>
  }

  /**
   * FlashSaleRedemption createMany
   */
  export type FlashSaleRedemptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FlashSaleRedemptions.
     */
    data: FlashSaleRedemptionCreateManyInput | FlashSaleRedemptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FlashSaleRedemption createManyAndReturn
   */
  export type FlashSaleRedemptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FlashSaleRedemptions.
     */
    data: FlashSaleRedemptionCreateManyInput | FlashSaleRedemptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FlashSaleRedemption update
   */
  export type FlashSaleRedemptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * The data needed to update a FlashSaleRedemption.
     */
    data: XOR<FlashSaleRedemptionUpdateInput, FlashSaleRedemptionUncheckedUpdateInput>
    /**
     * Choose, which FlashSaleRedemption to update.
     */
    where: FlashSaleRedemptionWhereUniqueInput
  }

  /**
   * FlashSaleRedemption updateMany
   */
  export type FlashSaleRedemptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FlashSaleRedemptions.
     */
    data: XOR<FlashSaleRedemptionUpdateManyMutationInput, FlashSaleRedemptionUncheckedUpdateManyInput>
    /**
     * Filter which FlashSaleRedemptions to update
     */
    where?: FlashSaleRedemptionWhereInput
  }

  /**
   * FlashSaleRedemption upsert
   */
  export type FlashSaleRedemptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * The filter to search for the FlashSaleRedemption to update in case it exists.
     */
    where: FlashSaleRedemptionWhereUniqueInput
    /**
     * In case the FlashSaleRedemption found by the `where` argument doesn't exist, create a new FlashSaleRedemption with this data.
     */
    create: XOR<FlashSaleRedemptionCreateInput, FlashSaleRedemptionUncheckedCreateInput>
    /**
     * In case the FlashSaleRedemption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FlashSaleRedemptionUpdateInput, FlashSaleRedemptionUncheckedUpdateInput>
  }

  /**
   * FlashSaleRedemption delete
   */
  export type FlashSaleRedemptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
    /**
     * Filter which FlashSaleRedemption to delete.
     */
    where: FlashSaleRedemptionWhereUniqueInput
  }

  /**
   * FlashSaleRedemption deleteMany
   */
  export type FlashSaleRedemptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FlashSaleRedemptions to delete
     */
    where?: FlashSaleRedemptionWhereInput
  }

  /**
   * FlashSaleRedemption without action
   */
  export type FlashSaleRedemptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FlashSaleRedemption
     */
    select?: FlashSaleRedemptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FlashSaleRedemptionInclude<ExtArgs> | null
  }


  /**
   * Model Conversation
   */

  export type AggregateConversation = {
    _count: ConversationCountAggregateOutputType | null
    _min: ConversationMinAggregateOutputType | null
    _max: ConversationMaxAggregateOutputType | null
  }

  export type ConversationMinAggregateOutputType = {
    id: string | null
    lastMessageAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConversationMaxAggregateOutputType = {
    id: string | null
    lastMessageAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConversationCountAggregateOutputType = {
    id: number
    lastMessageAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConversationMinAggregateInputType = {
    id?: true
    lastMessageAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConversationMaxAggregateInputType = {
    id?: true
    lastMessageAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConversationCountAggregateInputType = {
    id?: true
    lastMessageAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConversationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conversation to aggregate.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Conversations
    **/
    _count?: true | ConversationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConversationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConversationMaxAggregateInputType
  }

  export type GetConversationAggregateType<T extends ConversationAggregateArgs> = {
        [P in keyof T & keyof AggregateConversation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConversation[P]>
      : GetScalarType<T[P], AggregateConversation[P]>
  }




  export type ConversationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversationWhereInput
    orderBy?: ConversationOrderByWithAggregationInput | ConversationOrderByWithAggregationInput[]
    by: ConversationScalarFieldEnum[] | ConversationScalarFieldEnum
    having?: ConversationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConversationCountAggregateInputType | true
    _min?: ConversationMinAggregateInputType
    _max?: ConversationMaxAggregateInputType
  }

  export type ConversationGroupByOutputType = {
    id: string
    lastMessageAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ConversationCountAggregateOutputType | null
    _min: ConversationMinAggregateOutputType | null
    _max: ConversationMaxAggregateOutputType | null
  }

  type GetConversationGroupByPayload<T extends ConversationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConversationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConversationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConversationGroupByOutputType[P]>
            : GetScalarType<T[P], ConversationGroupByOutputType[P]>
        }
      >
    >


  export type ConversationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lastMessageAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    participants?: boolean | Conversation$participantsArgs<ExtArgs>
    messages?: boolean | Conversation$messagesArgs<ExtArgs>
    _count?: boolean | ConversationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lastMessageAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["conversation"]>

  export type ConversationSelectScalar = {
    id?: boolean
    lastMessageAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ConversationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    participants?: boolean | Conversation$participantsArgs<ExtArgs>
    messages?: boolean | Conversation$messagesArgs<ExtArgs>
    _count?: boolean | ConversationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConversationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ConversationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Conversation"
    objects: {
      participants: Prisma.$UserPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      lastMessageAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["conversation"]>
    composites: {}
  }

  type ConversationGetPayload<S extends boolean | null | undefined | ConversationDefaultArgs> = $Result.GetResult<Prisma.$ConversationPayload, S>

  type ConversationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConversationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConversationCountAggregateInputType | true
    }

  export interface ConversationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Conversation'], meta: { name: 'Conversation' } }
    /**
     * Find zero or one Conversation that matches the filter.
     * @param {ConversationFindUniqueArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConversationFindUniqueArgs>(args: SelectSubset<T, ConversationFindUniqueArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Conversation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConversationFindUniqueOrThrowArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConversationFindUniqueOrThrowArgs>(args: SelectSubset<T, ConversationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Conversation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindFirstArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConversationFindFirstArgs>(args?: SelectSubset<T, ConversationFindFirstArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Conversation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindFirstOrThrowArgs} args - Arguments to find a Conversation
     * @example
     * // Get one Conversation
     * const conversation = await prisma.conversation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConversationFindFirstOrThrowArgs>(args?: SelectSubset<T, ConversationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Conversations
     * const conversations = await prisma.conversation.findMany()
     * 
     * // Get first 10 Conversations
     * const conversations = await prisma.conversation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const conversationWithIdOnly = await prisma.conversation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConversationFindManyArgs>(args?: SelectSubset<T, ConversationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Conversation.
     * @param {ConversationCreateArgs} args - Arguments to create a Conversation.
     * @example
     * // Create one Conversation
     * const Conversation = await prisma.conversation.create({
     *   data: {
     *     // ... data to create a Conversation
     *   }
     * })
     * 
     */
    create<T extends ConversationCreateArgs>(args: SelectSubset<T, ConversationCreateArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Conversations.
     * @param {ConversationCreateManyArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversation = await prisma.conversation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConversationCreateManyArgs>(args?: SelectSubset<T, ConversationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Conversations and returns the data saved in the database.
     * @param {ConversationCreateManyAndReturnArgs} args - Arguments to create many Conversations.
     * @example
     * // Create many Conversations
     * const conversation = await prisma.conversation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Conversations and only return the `id`
     * const conversationWithIdOnly = await prisma.conversation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConversationCreateManyAndReturnArgs>(args?: SelectSubset<T, ConversationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Conversation.
     * @param {ConversationDeleteArgs} args - Arguments to delete one Conversation.
     * @example
     * // Delete one Conversation
     * const Conversation = await prisma.conversation.delete({
     *   where: {
     *     // ... filter to delete one Conversation
     *   }
     * })
     * 
     */
    delete<T extends ConversationDeleteArgs>(args: SelectSubset<T, ConversationDeleteArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Conversation.
     * @param {ConversationUpdateArgs} args - Arguments to update one Conversation.
     * @example
     * // Update one Conversation
     * const conversation = await prisma.conversation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConversationUpdateArgs>(args: SelectSubset<T, ConversationUpdateArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Conversations.
     * @param {ConversationDeleteManyArgs} args - Arguments to filter Conversations to delete.
     * @example
     * // Delete a few Conversations
     * const { count } = await prisma.conversation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConversationDeleteManyArgs>(args?: SelectSubset<T, ConversationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Conversations
     * const conversation = await prisma.conversation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConversationUpdateManyArgs>(args: SelectSubset<T, ConversationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Conversation.
     * @param {ConversationUpsertArgs} args - Arguments to update or create a Conversation.
     * @example
     * // Update or create a Conversation
     * const conversation = await prisma.conversation.upsert({
     *   create: {
     *     // ... data to create a Conversation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Conversation we want to update
     *   }
     * })
     */
    upsert<T extends ConversationUpsertArgs>(args: SelectSubset<T, ConversationUpsertArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationCountArgs} args - Arguments to filter Conversations to count.
     * @example
     * // Count the number of Conversations
     * const count = await prisma.conversation.count({
     *   where: {
     *     // ... the filter for the Conversations we want to count
     *   }
     * })
    **/
    count<T extends ConversationCountArgs>(
      args?: Subset<T, ConversationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConversationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Conversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConversationAggregateArgs>(args: Subset<T, ConversationAggregateArgs>): Prisma.PrismaPromise<GetConversationAggregateType<T>>

    /**
     * Group by Conversation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConversationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConversationGroupByArgs['orderBy'] }
        : { orderBy?: ConversationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConversationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConversationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Conversation model
   */
  readonly fields: ConversationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Conversation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConversationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    participants<T extends Conversation$participantsArgs<ExtArgs> = {}>(args?: Subset<T, Conversation$participantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    messages<T extends Conversation$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Conversation$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Conversation model
   */ 
  interface ConversationFieldRefs {
    readonly id: FieldRef<"Conversation", 'String'>
    readonly lastMessageAt: FieldRef<"Conversation", 'DateTime'>
    readonly createdAt: FieldRef<"Conversation", 'DateTime'>
    readonly updatedAt: FieldRef<"Conversation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Conversation findUnique
   */
  export type ConversationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation findUniqueOrThrow
   */
  export type ConversationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation findFirst
   */
  export type ConversationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Conversations.
     */
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation findFirstOrThrow
   */
  export type ConversationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversation to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Conversations.
     */
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation findMany
   */
  export type ConversationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter, which Conversations to fetch.
     */
    where?: ConversationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Conversations to fetch.
     */
    orderBy?: ConversationOrderByWithRelationInput | ConversationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Conversations.
     */
    cursor?: ConversationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Conversations.
     */
    skip?: number
    distinct?: ConversationScalarFieldEnum | ConversationScalarFieldEnum[]
  }

  /**
   * Conversation create
   */
  export type ConversationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The data needed to create a Conversation.
     */
    data: XOR<ConversationCreateInput, ConversationUncheckedCreateInput>
  }

  /**
   * Conversation createMany
   */
  export type ConversationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Conversations.
     */
    data: ConversationCreateManyInput | ConversationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conversation createManyAndReturn
   */
  export type ConversationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Conversations.
     */
    data: ConversationCreateManyInput | ConversationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conversation update
   */
  export type ConversationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The data needed to update a Conversation.
     */
    data: XOR<ConversationUpdateInput, ConversationUncheckedUpdateInput>
    /**
     * Choose, which Conversation to update.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation updateMany
   */
  export type ConversationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Conversations.
     */
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyInput>
    /**
     * Filter which Conversations to update
     */
    where?: ConversationWhereInput
  }

  /**
   * Conversation upsert
   */
  export type ConversationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * The filter to search for the Conversation to update in case it exists.
     */
    where: ConversationWhereUniqueInput
    /**
     * In case the Conversation found by the `where` argument doesn't exist, create a new Conversation with this data.
     */
    create: XOR<ConversationCreateInput, ConversationUncheckedCreateInput>
    /**
     * In case the Conversation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConversationUpdateInput, ConversationUncheckedUpdateInput>
  }

  /**
   * Conversation delete
   */
  export type ConversationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
    /**
     * Filter which Conversation to delete.
     */
    where: ConversationWhereUniqueInput
  }

  /**
   * Conversation deleteMany
   */
  export type ConversationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conversations to delete
     */
    where?: ConversationWhereInput
  }

  /**
   * Conversation.participants
   */
  export type Conversation$participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Conversation.messages
   */
  export type Conversation$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Conversation without action
   */
  export type ConversationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conversation
     */
    select?: ConversationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversationInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageAvgAggregateOutputType = {
    price: number | null
  }

  export type MessageSumAggregateOutputType = {
    price: number | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    conversationId: string | null
    senderId: string | null
    content: string | null
    mediaUrl: string | null
    mediaType: string | null
    isPaid: boolean | null
    price: number | null
    isRead: boolean | null
    createdAt: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    conversationId: string | null
    senderId: string | null
    content: string | null
    mediaUrl: string | null
    mediaType: string | null
    isPaid: boolean | null
    price: number | null
    isRead: boolean | null
    createdAt: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    conversationId: number
    senderId: number
    content: number
    mediaUrl: number
    mediaType: number
    isPaid: number
    price: number
    isRead: number
    metadata: number
    createdAt: number
    _all: number
  }


  export type MessageAvgAggregateInputType = {
    price?: true
  }

  export type MessageSumAggregateInputType = {
    price?: true
  }

  export type MessageMinAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    content?: true
    mediaUrl?: true
    mediaType?: true
    isPaid?: true
    price?: true
    isRead?: true
    createdAt?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    content?: true
    mediaUrl?: true
    mediaType?: true
    isPaid?: true
    price?: true
    isRead?: true
    createdAt?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    conversationId?: true
    senderId?: true
    content?: true
    mediaUrl?: true
    mediaType?: true
    isPaid?: true
    price?: true
    isRead?: true
    metadata?: true
    createdAt?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _avg?: MessageAvgAggregateInputType
    _sum?: MessageSumAggregateInputType
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    conversationId: string
    senderId: string
    content: string | null
    mediaUrl: string | null
    mediaType: string | null
    isPaid: boolean
    price: number | null
    isRead: boolean
    metadata: JsonValue | null
    createdAt: Date
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    content?: boolean
    mediaUrl?: boolean
    mediaType?: boolean
    isPaid?: boolean
    price?: boolean
    isRead?: boolean
    metadata?: boolean
    createdAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    purchases?: boolean | Message$purchasesArgs<ExtArgs>
    _count?: boolean | MessageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    content?: boolean
    mediaUrl?: boolean
    mediaType?: boolean
    isPaid?: boolean
    price?: boolean
    isRead?: boolean
    metadata?: boolean
    createdAt?: boolean
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    conversationId?: boolean
    senderId?: boolean
    content?: boolean
    mediaUrl?: boolean
    mediaType?: boolean
    isPaid?: boolean
    price?: boolean
    isRead?: boolean
    metadata?: boolean
    createdAt?: boolean
  }

  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
    purchases?: boolean | Message$purchasesArgs<ExtArgs>
    _count?: boolean | MessageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversation?: boolean | ConversationDefaultArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      conversation: Prisma.$ConversationPayload<ExtArgs>
      sender: Prisma.$UserPayload<ExtArgs>
      purchases: Prisma.$MessagePurchasePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      conversationId: string
      senderId: string
      content: string | null
      mediaUrl: string | null
      mediaType: string | null
      isPaid: boolean
      price: number | null
      isRead: boolean
      metadata: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    conversation<T extends ConversationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ConversationDefaultArgs<ExtArgs>>): Prisma__ConversationClient<$Result.GetResult<Prisma.$ConversationPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    purchases<T extends Message$purchasesArgs<ExtArgs> = {}>(args?: Subset<T, Message$purchasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */ 
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly conversationId: FieldRef<"Message", 'String'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly content: FieldRef<"Message", 'String'>
    readonly mediaUrl: FieldRef<"Message", 'String'>
    readonly mediaType: FieldRef<"Message", 'String'>
    readonly isPaid: FieldRef<"Message", 'Boolean'>
    readonly price: FieldRef<"Message", 'Float'>
    readonly isRead: FieldRef<"Message", 'Boolean'>
    readonly metadata: FieldRef<"Message", 'Json'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
  }

  /**
   * Message.purchases
   */
  export type Message$purchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    where?: MessagePurchaseWhereInput
    orderBy?: MessagePurchaseOrderByWithRelationInput | MessagePurchaseOrderByWithRelationInput[]
    cursor?: MessagePurchaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagePurchaseScalarFieldEnum | MessagePurchaseScalarFieldEnum[]
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model MessagePurchase
   */

  export type AggregateMessagePurchase = {
    _count: MessagePurchaseCountAggregateOutputType | null
    _avg: MessagePurchaseAvgAggregateOutputType | null
    _sum: MessagePurchaseSumAggregateOutputType | null
    _min: MessagePurchaseMinAggregateOutputType | null
    _max: MessagePurchaseMaxAggregateOutputType | null
  }

  export type MessagePurchaseAvgAggregateOutputType = {
    amount: number | null
  }

  export type MessagePurchaseSumAggregateOutputType = {
    amount: number | null
  }

  export type MessagePurchaseMinAggregateOutputType = {
    id: string | null
    messageId: string | null
    userId: string | null
    amount: number | null
    txSignature: string | null
    createdAt: Date | null
  }

  export type MessagePurchaseMaxAggregateOutputType = {
    id: string | null
    messageId: string | null
    userId: string | null
    amount: number | null
    txSignature: string | null
    createdAt: Date | null
  }

  export type MessagePurchaseCountAggregateOutputType = {
    id: number
    messageId: number
    userId: number
    amount: number
    txSignature: number
    createdAt: number
    _all: number
  }


  export type MessagePurchaseAvgAggregateInputType = {
    amount?: true
  }

  export type MessagePurchaseSumAggregateInputType = {
    amount?: true
  }

  export type MessagePurchaseMinAggregateInputType = {
    id?: true
    messageId?: true
    userId?: true
    amount?: true
    txSignature?: true
    createdAt?: true
  }

  export type MessagePurchaseMaxAggregateInputType = {
    id?: true
    messageId?: true
    userId?: true
    amount?: true
    txSignature?: true
    createdAt?: true
  }

  export type MessagePurchaseCountAggregateInputType = {
    id?: true
    messageId?: true
    userId?: true
    amount?: true
    txSignature?: true
    createdAt?: true
    _all?: true
  }

  export type MessagePurchaseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MessagePurchase to aggregate.
     */
    where?: MessagePurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MessagePurchases to fetch.
     */
    orderBy?: MessagePurchaseOrderByWithRelationInput | MessagePurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessagePurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MessagePurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MessagePurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MessagePurchases
    **/
    _count?: true | MessagePurchaseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessagePurchaseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessagePurchaseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagePurchaseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagePurchaseMaxAggregateInputType
  }

  export type GetMessagePurchaseAggregateType<T extends MessagePurchaseAggregateArgs> = {
        [P in keyof T & keyof AggregateMessagePurchase]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessagePurchase[P]>
      : GetScalarType<T[P], AggregateMessagePurchase[P]>
  }




  export type MessagePurchaseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessagePurchaseWhereInput
    orderBy?: MessagePurchaseOrderByWithAggregationInput | MessagePurchaseOrderByWithAggregationInput[]
    by: MessagePurchaseScalarFieldEnum[] | MessagePurchaseScalarFieldEnum
    having?: MessagePurchaseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagePurchaseCountAggregateInputType | true
    _avg?: MessagePurchaseAvgAggregateInputType
    _sum?: MessagePurchaseSumAggregateInputType
    _min?: MessagePurchaseMinAggregateInputType
    _max?: MessagePurchaseMaxAggregateInputType
  }

  export type MessagePurchaseGroupByOutputType = {
    id: string
    messageId: string
    userId: string
    amount: number
    txSignature: string
    createdAt: Date
    _count: MessagePurchaseCountAggregateOutputType | null
    _avg: MessagePurchaseAvgAggregateOutputType | null
    _sum: MessagePurchaseSumAggregateOutputType | null
    _min: MessagePurchaseMinAggregateOutputType | null
    _max: MessagePurchaseMaxAggregateOutputType | null
  }

  type GetMessagePurchaseGroupByPayload<T extends MessagePurchaseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessagePurchaseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagePurchaseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagePurchaseGroupByOutputType[P]>
            : GetScalarType<T[P], MessagePurchaseGroupByOutputType[P]>
        }
      >
    >


  export type MessagePurchaseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    messageId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    createdAt?: boolean
    message?: boolean | MessageDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messagePurchase"]>

  export type MessagePurchaseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    messageId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    createdAt?: boolean
    message?: boolean | MessageDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messagePurchase"]>

  export type MessagePurchaseSelectScalar = {
    id?: boolean
    messageId?: boolean
    userId?: boolean
    amount?: boolean
    txSignature?: boolean
    createdAt?: boolean
  }

  export type MessagePurchaseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message?: boolean | MessageDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessagePurchaseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message?: boolean | MessageDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePurchasePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MessagePurchase"
    objects: {
      message: Prisma.$MessagePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      messageId: string
      userId: string
      amount: number
      txSignature: string
      createdAt: Date
    }, ExtArgs["result"]["messagePurchase"]>
    composites: {}
  }

  type MessagePurchaseGetPayload<S extends boolean | null | undefined | MessagePurchaseDefaultArgs> = $Result.GetResult<Prisma.$MessagePurchasePayload, S>

  type MessagePurchaseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MessagePurchaseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MessagePurchaseCountAggregateInputType | true
    }

  export interface MessagePurchaseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MessagePurchase'], meta: { name: 'MessagePurchase' } }
    /**
     * Find zero or one MessagePurchase that matches the filter.
     * @param {MessagePurchaseFindUniqueArgs} args - Arguments to find a MessagePurchase
     * @example
     * // Get one MessagePurchase
     * const messagePurchase = await prisma.messagePurchase.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessagePurchaseFindUniqueArgs>(args: SelectSubset<T, MessagePurchaseFindUniqueArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MessagePurchase that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MessagePurchaseFindUniqueOrThrowArgs} args - Arguments to find a MessagePurchase
     * @example
     * // Get one MessagePurchase
     * const messagePurchase = await prisma.messagePurchase.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessagePurchaseFindUniqueOrThrowArgs>(args: SelectSubset<T, MessagePurchaseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MessagePurchase that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseFindFirstArgs} args - Arguments to find a MessagePurchase
     * @example
     * // Get one MessagePurchase
     * const messagePurchase = await prisma.messagePurchase.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessagePurchaseFindFirstArgs>(args?: SelectSubset<T, MessagePurchaseFindFirstArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MessagePurchase that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseFindFirstOrThrowArgs} args - Arguments to find a MessagePurchase
     * @example
     * // Get one MessagePurchase
     * const messagePurchase = await prisma.messagePurchase.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessagePurchaseFindFirstOrThrowArgs>(args?: SelectSubset<T, MessagePurchaseFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MessagePurchases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MessagePurchases
     * const messagePurchases = await prisma.messagePurchase.findMany()
     * 
     * // Get first 10 MessagePurchases
     * const messagePurchases = await prisma.messagePurchase.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messagePurchaseWithIdOnly = await prisma.messagePurchase.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessagePurchaseFindManyArgs>(args?: SelectSubset<T, MessagePurchaseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MessagePurchase.
     * @param {MessagePurchaseCreateArgs} args - Arguments to create a MessagePurchase.
     * @example
     * // Create one MessagePurchase
     * const MessagePurchase = await prisma.messagePurchase.create({
     *   data: {
     *     // ... data to create a MessagePurchase
     *   }
     * })
     * 
     */
    create<T extends MessagePurchaseCreateArgs>(args: SelectSubset<T, MessagePurchaseCreateArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MessagePurchases.
     * @param {MessagePurchaseCreateManyArgs} args - Arguments to create many MessagePurchases.
     * @example
     * // Create many MessagePurchases
     * const messagePurchase = await prisma.messagePurchase.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessagePurchaseCreateManyArgs>(args?: SelectSubset<T, MessagePurchaseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MessagePurchases and returns the data saved in the database.
     * @param {MessagePurchaseCreateManyAndReturnArgs} args - Arguments to create many MessagePurchases.
     * @example
     * // Create many MessagePurchases
     * const messagePurchase = await prisma.messagePurchase.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MessagePurchases and only return the `id`
     * const messagePurchaseWithIdOnly = await prisma.messagePurchase.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessagePurchaseCreateManyAndReturnArgs>(args?: SelectSubset<T, MessagePurchaseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MessagePurchase.
     * @param {MessagePurchaseDeleteArgs} args - Arguments to delete one MessagePurchase.
     * @example
     * // Delete one MessagePurchase
     * const MessagePurchase = await prisma.messagePurchase.delete({
     *   where: {
     *     // ... filter to delete one MessagePurchase
     *   }
     * })
     * 
     */
    delete<T extends MessagePurchaseDeleteArgs>(args: SelectSubset<T, MessagePurchaseDeleteArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MessagePurchase.
     * @param {MessagePurchaseUpdateArgs} args - Arguments to update one MessagePurchase.
     * @example
     * // Update one MessagePurchase
     * const messagePurchase = await prisma.messagePurchase.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessagePurchaseUpdateArgs>(args: SelectSubset<T, MessagePurchaseUpdateArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MessagePurchases.
     * @param {MessagePurchaseDeleteManyArgs} args - Arguments to filter MessagePurchases to delete.
     * @example
     * // Delete a few MessagePurchases
     * const { count } = await prisma.messagePurchase.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessagePurchaseDeleteManyArgs>(args?: SelectSubset<T, MessagePurchaseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MessagePurchases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MessagePurchases
     * const messagePurchase = await prisma.messagePurchase.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessagePurchaseUpdateManyArgs>(args: SelectSubset<T, MessagePurchaseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MessagePurchase.
     * @param {MessagePurchaseUpsertArgs} args - Arguments to update or create a MessagePurchase.
     * @example
     * // Update or create a MessagePurchase
     * const messagePurchase = await prisma.messagePurchase.upsert({
     *   create: {
     *     // ... data to create a MessagePurchase
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MessagePurchase we want to update
     *   }
     * })
     */
    upsert<T extends MessagePurchaseUpsertArgs>(args: SelectSubset<T, MessagePurchaseUpsertArgs<ExtArgs>>): Prisma__MessagePurchaseClient<$Result.GetResult<Prisma.$MessagePurchasePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MessagePurchases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseCountArgs} args - Arguments to filter MessagePurchases to count.
     * @example
     * // Count the number of MessagePurchases
     * const count = await prisma.messagePurchase.count({
     *   where: {
     *     // ... the filter for the MessagePurchases we want to count
     *   }
     * })
    **/
    count<T extends MessagePurchaseCountArgs>(
      args?: Subset<T, MessagePurchaseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagePurchaseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MessagePurchase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagePurchaseAggregateArgs>(args: Subset<T, MessagePurchaseAggregateArgs>): Prisma.PrismaPromise<GetMessagePurchaseAggregateType<T>>

    /**
     * Group by MessagePurchase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagePurchaseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessagePurchaseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessagePurchaseGroupByArgs['orderBy'] }
        : { orderBy?: MessagePurchaseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessagePurchaseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagePurchaseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MessagePurchase model
   */
  readonly fields: MessagePurchaseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MessagePurchase.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessagePurchaseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    message<T extends MessageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MessageDefaultArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MessagePurchase model
   */ 
  interface MessagePurchaseFieldRefs {
    readonly id: FieldRef<"MessagePurchase", 'String'>
    readonly messageId: FieldRef<"MessagePurchase", 'String'>
    readonly userId: FieldRef<"MessagePurchase", 'String'>
    readonly amount: FieldRef<"MessagePurchase", 'Float'>
    readonly txSignature: FieldRef<"MessagePurchase", 'String'>
    readonly createdAt: FieldRef<"MessagePurchase", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MessagePurchase findUnique
   */
  export type MessagePurchaseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * Filter, which MessagePurchase to fetch.
     */
    where: MessagePurchaseWhereUniqueInput
  }

  /**
   * MessagePurchase findUniqueOrThrow
   */
  export type MessagePurchaseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * Filter, which MessagePurchase to fetch.
     */
    where: MessagePurchaseWhereUniqueInput
  }

  /**
   * MessagePurchase findFirst
   */
  export type MessagePurchaseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * Filter, which MessagePurchase to fetch.
     */
    where?: MessagePurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MessagePurchases to fetch.
     */
    orderBy?: MessagePurchaseOrderByWithRelationInput | MessagePurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MessagePurchases.
     */
    cursor?: MessagePurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MessagePurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MessagePurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MessagePurchases.
     */
    distinct?: MessagePurchaseScalarFieldEnum | MessagePurchaseScalarFieldEnum[]
  }

  /**
   * MessagePurchase findFirstOrThrow
   */
  export type MessagePurchaseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * Filter, which MessagePurchase to fetch.
     */
    where?: MessagePurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MessagePurchases to fetch.
     */
    orderBy?: MessagePurchaseOrderByWithRelationInput | MessagePurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MessagePurchases.
     */
    cursor?: MessagePurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MessagePurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MessagePurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MessagePurchases.
     */
    distinct?: MessagePurchaseScalarFieldEnum | MessagePurchaseScalarFieldEnum[]
  }

  /**
   * MessagePurchase findMany
   */
  export type MessagePurchaseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * Filter, which MessagePurchases to fetch.
     */
    where?: MessagePurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MessagePurchases to fetch.
     */
    orderBy?: MessagePurchaseOrderByWithRelationInput | MessagePurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MessagePurchases.
     */
    cursor?: MessagePurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MessagePurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MessagePurchases.
     */
    skip?: number
    distinct?: MessagePurchaseScalarFieldEnum | MessagePurchaseScalarFieldEnum[]
  }

  /**
   * MessagePurchase create
   */
  export type MessagePurchaseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * The data needed to create a MessagePurchase.
     */
    data: XOR<MessagePurchaseCreateInput, MessagePurchaseUncheckedCreateInput>
  }

  /**
   * MessagePurchase createMany
   */
  export type MessagePurchaseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MessagePurchases.
     */
    data: MessagePurchaseCreateManyInput | MessagePurchaseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MessagePurchase createManyAndReturn
   */
  export type MessagePurchaseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MessagePurchases.
     */
    data: MessagePurchaseCreateManyInput | MessagePurchaseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MessagePurchase update
   */
  export type MessagePurchaseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * The data needed to update a MessagePurchase.
     */
    data: XOR<MessagePurchaseUpdateInput, MessagePurchaseUncheckedUpdateInput>
    /**
     * Choose, which MessagePurchase to update.
     */
    where: MessagePurchaseWhereUniqueInput
  }

  /**
   * MessagePurchase updateMany
   */
  export type MessagePurchaseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MessagePurchases.
     */
    data: XOR<MessagePurchaseUpdateManyMutationInput, MessagePurchaseUncheckedUpdateManyInput>
    /**
     * Filter which MessagePurchases to update
     */
    where?: MessagePurchaseWhereInput
  }

  /**
   * MessagePurchase upsert
   */
  export type MessagePurchaseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * The filter to search for the MessagePurchase to update in case it exists.
     */
    where: MessagePurchaseWhereUniqueInput
    /**
     * In case the MessagePurchase found by the `where` argument doesn't exist, create a new MessagePurchase with this data.
     */
    create: XOR<MessagePurchaseCreateInput, MessagePurchaseUncheckedCreateInput>
    /**
     * In case the MessagePurchase was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessagePurchaseUpdateInput, MessagePurchaseUncheckedUpdateInput>
  }

  /**
   * MessagePurchase delete
   */
  export type MessagePurchaseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
    /**
     * Filter which MessagePurchase to delete.
     */
    where: MessagePurchaseWhereUniqueInput
  }

  /**
   * MessagePurchase deleteMany
   */
  export type MessagePurchaseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MessagePurchases to delete
     */
    where?: MessagePurchaseWhereInput
  }

  /**
   * MessagePurchase without action
   */
  export type MessagePurchaseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagePurchase
     */
    select?: MessagePurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessagePurchaseInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    emailVerified: 'emailVerified',
    name: 'name',
    image: 'image',
    nickname: 'nickname',
    fullName: 'fullName',
    bio: 'bio',
    avatar: 'avatar',
    backgroundImage: 'backgroundImage',
    website: 'website',
    twitter: 'twitter',
    telegram: 'telegram',
    location: 'location',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isVerified: 'isVerified',
    isCreator: 'isCreator',
    followersCount: 'followersCount',
    followingCount: 'followingCount',
    postsCount: 'postsCount',
    wallet: 'wallet',
    solanaWallet: 'solanaWallet',
    referrerId: 'referrerId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id: 'id',
    creatorId: 'creatorId',
    title: 'title',
    content: 'content',
    type: 'type',
    category: 'category',
    thumbnail: 'thumbnail',
    mediaUrl: 'mediaUrl',
    isLocked: 'isLocked',
    isPremium: 'isPremium',
    price: 'price',
    currency: 'currency',
    minSubscriptionTier: 'minSubscriptionTier',
    imageAspectRatio: 'imageAspectRatio',
    likesCount: 'likesCount',
    commentsCount: 'commentsCount',
    viewsCount: 'viewsCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isSellable: 'isSellable',
    sellType: 'sellType',
    quantity: 'quantity',
    auctionStartPrice: 'auctionStartPrice',
    auctionStepPrice: 'auctionStepPrice',
    auctionDepositAmount: 'auctionDepositAmount',
    auctionStartAt: 'auctionStartAt',
    auctionEndAt: 'auctionEndAt',
    auctionStatus: 'auctionStatus',
    soldAt: 'soldAt',
    soldToId: 'soldToId',
    soldPrice: 'soldPrice',
    sellerConfirmedAt: 'sellerConfirmedAt'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const TagScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


  export const PostTagScalarFieldEnum: {
    postId: 'postId',
    tagId: 'tagId'
  };

  export type PostTagScalarFieldEnum = (typeof PostTagScalarFieldEnum)[keyof typeof PostTagScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    userId: 'userId',
    content: 'content',
    isAnonymous: 'isAnonymous',
    likesCount: 'likesCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    parentId: 'parentId'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const LikeScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    postId: 'postId',
    commentId: 'commentId',
    createdAt: 'createdAt'
  };

  export type LikeScalarFieldEnum = (typeof LikeScalarFieldEnum)[keyof typeof LikeScalarFieldEnum]


  export const SubscriptionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    creatorId: 'creatorId',
    plan: 'plan',
    price: 'price',
    currency: 'currency',
    subscribedAt: 'subscribedAt',
    validUntil: 'validUntil',
    isActive: 'isActive',
    txSignature: 'txSignature',
    paymentStatus: 'paymentStatus',
    paymentAmount: 'paymentAmount',
    platformFee: 'platformFee',
    referrerFee: 'referrerFee',
    creatorAmount: 'creatorAmount'
  };

  export type SubscriptionScalarFieldEnum = (typeof SubscriptionScalarFieldEnum)[keyof typeof SubscriptionScalarFieldEnum]


  export const FollowScalarFieldEnum: {
    id: 'id',
    followerId: 'followerId',
    followingId: 'followingId',
    createdAt: 'createdAt'
  };

  export type FollowScalarFieldEnum = (typeof FollowScalarFieldEnum)[keyof typeof FollowScalarFieldEnum]


  export const TransactionScalarFieldEnum: {
    id: 'id',
    subscriptionId: 'subscriptionId',
    postPurchaseId: 'postPurchaseId',
    txSignature: 'txSignature',
    fromWallet: 'fromWallet',
    toWallet: 'toWallet',
    amount: 'amount',
    currency: 'currency',
    type: 'type',
    status: 'status',
    senderId: 'senderId',
    receiverId: 'receiverId',
    platformFee: 'platformFee',
    referrerFee: 'referrerFee',
    referrerWallet: 'referrerWallet',
    metadata: 'metadata',
    errorMessage: 'errorMessage',
    confirmedAt: 'confirmedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TransactionScalarFieldEnum = (typeof TransactionScalarFieldEnum)[keyof typeof TransactionScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refresh_token: 'refresh_token',
    access_token: 'access_token',
    expires_at: 'expires_at',
    token_type: 'token_type',
    scope: 'scope',
    id_token: 'id_token',
    session_state: 'session_state'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const PostPurchaseScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    userId: 'userId',
    price: 'price',
    currency: 'currency',
    txSignature: 'txSignature',
    purchasedAt: 'purchasedAt',
    paymentStatus: 'paymentStatus',
    platformFee: 'platformFee',
    referrerFee: 'referrerFee',
    creatorAmount: 'creatorAmount'
  };

  export type PostPurchaseScalarFieldEnum = (typeof PostPurchaseScalarFieldEnum)[keyof typeof PostPurchaseScalarFieldEnum]


  export const UserSettingsScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    notifyComments: 'notifyComments',
    notifyLikes: 'notifyLikes',
    notifyNewPosts: 'notifyNewPosts',
    notifySubscriptions: 'notifySubscriptions',
    showActivity: 'showActivity',
    allowMessages: 'allowMessages',
    showOnlineStatus: 'showOnlineStatus',
    theme: 'theme',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserSettingsScalarFieldEnum = (typeof UserSettingsScalarFieldEnum)[keyof typeof UserSettingsScalarFieldEnum]


  export const CreatorTierSettingsScalarFieldEnum: {
    id: 'id',
    creatorId: 'creatorId',
    basicTier: 'basicTier',
    premiumTier: 'premiumTier',
    vipTier: 'vipTier',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CreatorTierSettingsScalarFieldEnum = (typeof CreatorTierSettingsScalarFieldEnum)[keyof typeof CreatorTierSettingsScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    title: 'title',
    message: 'message',
    isRead: 'isRead',
    metadata: 'metadata',
    createdAt: 'createdAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const AuctionDepositScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    userId: 'userId',
    amount: 'amount',
    txSignature: 'txSignature',
    status: 'status',
    createdAt: 'createdAt',
    refundedAt: 'refundedAt',
    refundTxSignature: 'refundTxSignature',
    forfeitedAt: 'forfeitedAt'
  };

  export type AuctionDepositScalarFieldEnum = (typeof AuctionDepositScalarFieldEnum)[keyof typeof AuctionDepositScalarFieldEnum]


  export const AuctionBidScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    userId: 'userId',
    amount: 'amount',
    isWinning: 'isWinning',
    createdAt: 'createdAt'
  };

  export type AuctionBidScalarFieldEnum = (typeof AuctionBidScalarFieldEnum)[keyof typeof AuctionBidScalarFieldEnum]


  export const AuctionPaymentScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    userId: 'userId',
    amount: 'amount',
    txSignature: 'txSignature',
    status: 'status',
    dueAt: 'dueAt',
    paidAt: 'paidAt',
    sellerConfirmedAt: 'sellerConfirmedAt',
    createdAt: 'createdAt'
  };

  export type AuctionPaymentScalarFieldEnum = (typeof AuctionPaymentScalarFieldEnum)[keyof typeof AuctionPaymentScalarFieldEnum]


  export const FlashSaleScalarFieldEnum: {
    id: 'id',
    creatorId: 'creatorId',
    postId: 'postId',
    subscriptionPlan: 'subscriptionPlan',
    discount: 'discount',
    maxRedemptions: 'maxRedemptions',
    usedCount: 'usedCount',
    startAt: 'startAt',
    endAt: 'endAt',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FlashSaleScalarFieldEnum = (typeof FlashSaleScalarFieldEnum)[keyof typeof FlashSaleScalarFieldEnum]


  export const FlashSaleRedemptionScalarFieldEnum: {
    id: 'id',
    flashSaleId: 'flashSaleId',
    userId: 'userId',
    originalPrice: 'originalPrice',
    discountAmount: 'discountAmount',
    finalPrice: 'finalPrice',
    redeemedAt: 'redeemedAt'
  };

  export type FlashSaleRedemptionScalarFieldEnum = (typeof FlashSaleRedemptionScalarFieldEnum)[keyof typeof FlashSaleRedemptionScalarFieldEnum]


  export const ConversationScalarFieldEnum: {
    id: 'id',
    lastMessageAt: 'lastMessageAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConversationScalarFieldEnum = (typeof ConversationScalarFieldEnum)[keyof typeof ConversationScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    conversationId: 'conversationId',
    senderId: 'senderId',
    content: 'content',
    mediaUrl: 'mediaUrl',
    mediaType: 'mediaType',
    isPaid: 'isPaid',
    price: 'price',
    isRead: 'isRead',
    metadata: 'metadata',
    createdAt: 'createdAt'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const MessagePurchaseScalarFieldEnum: {
    id: 'id',
    messageId: 'messageId',
    userId: 'userId',
    amount: 'amount',
    txSignature: 'txSignature',
    createdAt: 'createdAt'
  };

  export type MessagePurchaseScalarFieldEnum = (typeof MessagePurchaseScalarFieldEnum)[keyof typeof MessagePurchaseScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'SellType'
   */
  export type EnumSellTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SellType'>
    


  /**
   * Reference to a field of type 'SellType[]'
   */
  export type ListEnumSellTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SellType[]'>
    


  /**
   * Reference to a field of type 'AuctionStatus'
   */
  export type EnumAuctionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuctionStatus'>
    


  /**
   * Reference to a field of type 'AuctionStatus[]'
   */
  export type ListEnumAuctionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuctionStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'TransactionType'
   */
  export type EnumTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionType'>
    


  /**
   * Reference to a field of type 'TransactionType[]'
   */
  export type ListEnumTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionType[]'>
    


  /**
   * Reference to a field of type 'TransactionStatus'
   */
  export type EnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus'>
    


  /**
   * Reference to a field of type 'TransactionStatus[]'
   */
  export type ListEnumTransactionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransactionStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'NotificationType[]'
   */
  export type ListEnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType[]'>
    


  /**
   * Reference to a field of type 'DepositStatus'
   */
  export type EnumDepositStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DepositStatus'>
    


  /**
   * Reference to a field of type 'DepositStatus[]'
   */
  export type ListEnumDepositStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DepositStatus[]'>
    


  /**
   * Reference to a field of type 'AuctionPaymentStatus'
   */
  export type EnumAuctionPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuctionPaymentStatus'>
    


  /**
   * Reference to a field of type 'AuctionPaymentStatus[]'
   */
  export type ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuctionPaymentStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    name?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    nickname?: StringNullableFilter<"User"> | string | null
    fullName?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    backgroundImage?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    twitter?: StringNullableFilter<"User"> | string | null
    telegram?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isVerified?: BoolFilter<"User"> | boolean
    isCreator?: BoolFilter<"User"> | boolean
    followersCount?: IntFilter<"User"> | number
    followingCount?: IntFilter<"User"> | number
    postsCount?: IntFilter<"User"> | number
    wallet?: StringNullableFilter<"User"> | string | null
    solanaWallet?: StringNullableFilter<"User"> | string | null
    referrerId?: StringNullableFilter<"User"> | string | null
    comments?: CommentListRelationFilter
    follows?: FollowListRelationFilter
    followers?: FollowListRelationFilter
    likes?: LikeListRelationFilter
    posts?: PostListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
    subscribers?: SubscriptionListRelationFilter
    postPurchases?: PostPurchaseListRelationFilter
    referrer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    referrals?: UserListRelationFilter
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    settings?: XOR<UserSettingsNullableRelationFilter, UserSettingsWhereInput> | null
    tierSettings?: XOR<CreatorTierSettingsNullableRelationFilter, CreatorTierSettingsWhereInput> | null
    notifications?: NotificationListRelationFilter
    purchasedSellablePosts?: PostListRelationFilter
    auctionDeposits?: AuctionDepositListRelationFilter
    auctionBids?: AuctionBidListRelationFilter
    auctionPayments?: AuctionPaymentListRelationFilter
    flashSales?: FlashSaleListRelationFilter
    flashSaleRedemptions?: FlashSaleRedemptionListRelationFilter
    conversations?: ConversationListRelationFilter
    sentMessages?: MessageListRelationFilter
    messagePurchases?: MessagePurchaseListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    fullName?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    backgroundImage?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    telegram?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    isCreator?: SortOrder
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
    wallet?: SortOrderInput | SortOrder
    solanaWallet?: SortOrderInput | SortOrder
    referrerId?: SortOrderInput | SortOrder
    comments?: CommentOrderByRelationAggregateInput
    follows?: FollowOrderByRelationAggregateInput
    followers?: FollowOrderByRelationAggregateInput
    likes?: LikeOrderByRelationAggregateInput
    posts?: PostOrderByRelationAggregateInput
    subscriptions?: SubscriptionOrderByRelationAggregateInput
    subscribers?: SubscriptionOrderByRelationAggregateInput
    postPurchases?: PostPurchaseOrderByRelationAggregateInput
    referrer?: UserOrderByWithRelationInput
    referrals?: UserOrderByRelationAggregateInput
    accounts?: AccountOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    settings?: UserSettingsOrderByWithRelationInput
    tierSettings?: CreatorTierSettingsOrderByWithRelationInput
    notifications?: NotificationOrderByRelationAggregateInput
    purchasedSellablePosts?: PostOrderByRelationAggregateInput
    auctionDeposits?: AuctionDepositOrderByRelationAggregateInput
    auctionBids?: AuctionBidOrderByRelationAggregateInput
    auctionPayments?: AuctionPaymentOrderByRelationAggregateInput
    flashSales?: FlashSaleOrderByRelationAggregateInput
    flashSaleRedemptions?: FlashSaleRedemptionOrderByRelationAggregateInput
    conversations?: ConversationOrderByRelationAggregateInput
    sentMessages?: MessageOrderByRelationAggregateInput
    messagePurchases?: MessagePurchaseOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    nickname?: string
    wallet?: string
    solanaWallet?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    name?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    fullName?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    backgroundImage?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    twitter?: StringNullableFilter<"User"> | string | null
    telegram?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isVerified?: BoolFilter<"User"> | boolean
    isCreator?: BoolFilter<"User"> | boolean
    followersCount?: IntFilter<"User"> | number
    followingCount?: IntFilter<"User"> | number
    postsCount?: IntFilter<"User"> | number
    referrerId?: StringNullableFilter<"User"> | string | null
    comments?: CommentListRelationFilter
    follows?: FollowListRelationFilter
    followers?: FollowListRelationFilter
    likes?: LikeListRelationFilter
    posts?: PostListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
    subscribers?: SubscriptionListRelationFilter
    postPurchases?: PostPurchaseListRelationFilter
    referrer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    referrals?: UserListRelationFilter
    accounts?: AccountListRelationFilter
    sessions?: SessionListRelationFilter
    settings?: XOR<UserSettingsNullableRelationFilter, UserSettingsWhereInput> | null
    tierSettings?: XOR<CreatorTierSettingsNullableRelationFilter, CreatorTierSettingsWhereInput> | null
    notifications?: NotificationListRelationFilter
    purchasedSellablePosts?: PostListRelationFilter
    auctionDeposits?: AuctionDepositListRelationFilter
    auctionBids?: AuctionBidListRelationFilter
    auctionPayments?: AuctionPaymentListRelationFilter
    flashSales?: FlashSaleListRelationFilter
    flashSaleRedemptions?: FlashSaleRedemptionListRelationFilter
    conversations?: ConversationListRelationFilter
    sentMessages?: MessageListRelationFilter
    messagePurchases?: MessagePurchaseListRelationFilter
  }, "id" | "email" | "nickname" | "wallet" | "solanaWallet">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrderInput | SortOrder
    emailVerified?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    fullName?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    backgroundImage?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    twitter?: SortOrderInput | SortOrder
    telegram?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    isCreator?: SortOrder
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
    wallet?: SortOrderInput | SortOrder
    solanaWallet?: SortOrderInput | SortOrder
    referrerId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    nickname?: StringNullableWithAggregatesFilter<"User"> | string | null
    fullName?: StringNullableWithAggregatesFilter<"User"> | string | null
    bio?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    backgroundImage?: StringNullableWithAggregatesFilter<"User"> | string | null
    website?: StringNullableWithAggregatesFilter<"User"> | string | null
    twitter?: StringNullableWithAggregatesFilter<"User"> | string | null
    telegram?: StringNullableWithAggregatesFilter<"User"> | string | null
    location?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    isVerified?: BoolWithAggregatesFilter<"User"> | boolean
    isCreator?: BoolWithAggregatesFilter<"User"> | boolean
    followersCount?: IntWithAggregatesFilter<"User"> | number
    followingCount?: IntWithAggregatesFilter<"User"> | number
    postsCount?: IntWithAggregatesFilter<"User"> | number
    wallet?: StringNullableWithAggregatesFilter<"User"> | string | null
    solanaWallet?: StringNullableWithAggregatesFilter<"User"> | string | null
    referrerId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type PostWhereInput = {
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    id?: StringFilter<"Post"> | string
    creatorId?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    content?: StringFilter<"Post"> | string
    type?: StringFilter<"Post"> | string
    category?: StringNullableFilter<"Post"> | string | null
    thumbnail?: StringNullableFilter<"Post"> | string | null
    mediaUrl?: StringNullableFilter<"Post"> | string | null
    isLocked?: BoolFilter<"Post"> | boolean
    isPremium?: BoolFilter<"Post"> | boolean
    price?: FloatNullableFilter<"Post"> | number | null
    currency?: StringFilter<"Post"> | string
    minSubscriptionTier?: StringNullableFilter<"Post"> | string | null
    imageAspectRatio?: StringNullableFilter<"Post"> | string | null
    likesCount?: IntFilter<"Post"> | number
    commentsCount?: IntFilter<"Post"> | number
    viewsCount?: IntFilter<"Post"> | number
    createdAt?: DateTimeFilter<"Post"> | Date | string
    updatedAt?: DateTimeFilter<"Post"> | Date | string
    isSellable?: BoolFilter<"Post"> | boolean
    sellType?: EnumSellTypeNullableFilter<"Post"> | $Enums.SellType | null
    quantity?: IntNullableFilter<"Post"> | number | null
    auctionStartPrice?: FloatNullableFilter<"Post"> | number | null
    auctionStepPrice?: FloatNullableFilter<"Post"> | number | null
    auctionDepositAmount?: FloatNullableFilter<"Post"> | number | null
    auctionStartAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    auctionEndAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    auctionStatus?: EnumAuctionStatusFilter<"Post"> | $Enums.AuctionStatus
    soldAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    soldToId?: StringNullableFilter<"Post"> | string | null
    soldPrice?: FloatNullableFilter<"Post"> | number | null
    sellerConfirmedAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    soldTo?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    comments?: CommentListRelationFilter
    likes?: LikeListRelationFilter
    tags?: PostTagListRelationFilter
    creator?: XOR<UserRelationFilter, UserWhereInput>
    purchases?: PostPurchaseListRelationFilter
    auctionDeposits?: AuctionDepositListRelationFilter
    auctionBids?: AuctionBidListRelationFilter
    auctionPayment?: XOR<AuctionPaymentNullableRelationFilter, AuctionPaymentWhereInput> | null
    flashSales?: FlashSaleListRelationFilter
  }

  export type PostOrderByWithRelationInput = {
    id?: SortOrder
    creatorId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    category?: SortOrderInput | SortOrder
    thumbnail?: SortOrderInput | SortOrder
    mediaUrl?: SortOrderInput | SortOrder
    isLocked?: SortOrder
    isPremium?: SortOrder
    price?: SortOrderInput | SortOrder
    currency?: SortOrder
    minSubscriptionTier?: SortOrderInput | SortOrder
    imageAspectRatio?: SortOrderInput | SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isSellable?: SortOrder
    sellType?: SortOrderInput | SortOrder
    quantity?: SortOrderInput | SortOrder
    auctionStartPrice?: SortOrderInput | SortOrder
    auctionStepPrice?: SortOrderInput | SortOrder
    auctionDepositAmount?: SortOrderInput | SortOrder
    auctionStartAt?: SortOrderInput | SortOrder
    auctionEndAt?: SortOrderInput | SortOrder
    auctionStatus?: SortOrder
    soldAt?: SortOrderInput | SortOrder
    soldToId?: SortOrderInput | SortOrder
    soldPrice?: SortOrderInput | SortOrder
    sellerConfirmedAt?: SortOrderInput | SortOrder
    soldTo?: UserOrderByWithRelationInput
    comments?: CommentOrderByRelationAggregateInput
    likes?: LikeOrderByRelationAggregateInput
    tags?: PostTagOrderByRelationAggregateInput
    creator?: UserOrderByWithRelationInput
    purchases?: PostPurchaseOrderByRelationAggregateInput
    auctionDeposits?: AuctionDepositOrderByRelationAggregateInput
    auctionBids?: AuctionBidOrderByRelationAggregateInput
    auctionPayment?: AuctionPaymentOrderByWithRelationInput
    flashSales?: FlashSaleOrderByRelationAggregateInput
  }

  export type PostWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    creatorId?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    content?: StringFilter<"Post"> | string
    type?: StringFilter<"Post"> | string
    category?: StringNullableFilter<"Post"> | string | null
    thumbnail?: StringNullableFilter<"Post"> | string | null
    mediaUrl?: StringNullableFilter<"Post"> | string | null
    isLocked?: BoolFilter<"Post"> | boolean
    isPremium?: BoolFilter<"Post"> | boolean
    price?: FloatNullableFilter<"Post"> | number | null
    currency?: StringFilter<"Post"> | string
    minSubscriptionTier?: StringNullableFilter<"Post"> | string | null
    imageAspectRatio?: StringNullableFilter<"Post"> | string | null
    likesCount?: IntFilter<"Post"> | number
    commentsCount?: IntFilter<"Post"> | number
    viewsCount?: IntFilter<"Post"> | number
    createdAt?: DateTimeFilter<"Post"> | Date | string
    updatedAt?: DateTimeFilter<"Post"> | Date | string
    isSellable?: BoolFilter<"Post"> | boolean
    sellType?: EnumSellTypeNullableFilter<"Post"> | $Enums.SellType | null
    quantity?: IntNullableFilter<"Post"> | number | null
    auctionStartPrice?: FloatNullableFilter<"Post"> | number | null
    auctionStepPrice?: FloatNullableFilter<"Post"> | number | null
    auctionDepositAmount?: FloatNullableFilter<"Post"> | number | null
    auctionStartAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    auctionEndAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    auctionStatus?: EnumAuctionStatusFilter<"Post"> | $Enums.AuctionStatus
    soldAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    soldToId?: StringNullableFilter<"Post"> | string | null
    soldPrice?: FloatNullableFilter<"Post"> | number | null
    sellerConfirmedAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    soldTo?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    comments?: CommentListRelationFilter
    likes?: LikeListRelationFilter
    tags?: PostTagListRelationFilter
    creator?: XOR<UserRelationFilter, UserWhereInput>
    purchases?: PostPurchaseListRelationFilter
    auctionDeposits?: AuctionDepositListRelationFilter
    auctionBids?: AuctionBidListRelationFilter
    auctionPayment?: XOR<AuctionPaymentNullableRelationFilter, AuctionPaymentWhereInput> | null
    flashSales?: FlashSaleListRelationFilter
  }, "id">

  export type PostOrderByWithAggregationInput = {
    id?: SortOrder
    creatorId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    category?: SortOrderInput | SortOrder
    thumbnail?: SortOrderInput | SortOrder
    mediaUrl?: SortOrderInput | SortOrder
    isLocked?: SortOrder
    isPremium?: SortOrder
    price?: SortOrderInput | SortOrder
    currency?: SortOrder
    minSubscriptionTier?: SortOrderInput | SortOrder
    imageAspectRatio?: SortOrderInput | SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isSellable?: SortOrder
    sellType?: SortOrderInput | SortOrder
    quantity?: SortOrderInput | SortOrder
    auctionStartPrice?: SortOrderInput | SortOrder
    auctionStepPrice?: SortOrderInput | SortOrder
    auctionDepositAmount?: SortOrderInput | SortOrder
    auctionStartAt?: SortOrderInput | SortOrder
    auctionEndAt?: SortOrderInput | SortOrder
    auctionStatus?: SortOrder
    soldAt?: SortOrderInput | SortOrder
    soldToId?: SortOrderInput | SortOrder
    soldPrice?: SortOrderInput | SortOrder
    sellerConfirmedAt?: SortOrderInput | SortOrder
    _count?: PostCountOrderByAggregateInput
    _avg?: PostAvgOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
    _sum?: PostSumOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    OR?: PostScalarWhereWithAggregatesInput[]
    NOT?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Post"> | string
    creatorId?: StringWithAggregatesFilter<"Post"> | string
    title?: StringWithAggregatesFilter<"Post"> | string
    content?: StringWithAggregatesFilter<"Post"> | string
    type?: StringWithAggregatesFilter<"Post"> | string
    category?: StringNullableWithAggregatesFilter<"Post"> | string | null
    thumbnail?: StringNullableWithAggregatesFilter<"Post"> | string | null
    mediaUrl?: StringNullableWithAggregatesFilter<"Post"> | string | null
    isLocked?: BoolWithAggregatesFilter<"Post"> | boolean
    isPremium?: BoolWithAggregatesFilter<"Post"> | boolean
    price?: FloatNullableWithAggregatesFilter<"Post"> | number | null
    currency?: StringWithAggregatesFilter<"Post"> | string
    minSubscriptionTier?: StringNullableWithAggregatesFilter<"Post"> | string | null
    imageAspectRatio?: StringNullableWithAggregatesFilter<"Post"> | string | null
    likesCount?: IntWithAggregatesFilter<"Post"> | number
    commentsCount?: IntWithAggregatesFilter<"Post"> | number
    viewsCount?: IntWithAggregatesFilter<"Post"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    isSellable?: BoolWithAggregatesFilter<"Post"> | boolean
    sellType?: EnumSellTypeNullableWithAggregatesFilter<"Post"> | $Enums.SellType | null
    quantity?: IntNullableWithAggregatesFilter<"Post"> | number | null
    auctionStartPrice?: FloatNullableWithAggregatesFilter<"Post"> | number | null
    auctionStepPrice?: FloatNullableWithAggregatesFilter<"Post"> | number | null
    auctionDepositAmount?: FloatNullableWithAggregatesFilter<"Post"> | number | null
    auctionStartAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    auctionEndAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    auctionStatus?: EnumAuctionStatusWithAggregatesFilter<"Post"> | $Enums.AuctionStatus
    soldAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    soldToId?: StringNullableWithAggregatesFilter<"Post"> | string | null
    soldPrice?: FloatNullableWithAggregatesFilter<"Post"> | number | null
    sellerConfirmedAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
  }

  export type TagWhereInput = {
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    id?: StringFilter<"Tag"> | string
    name?: StringFilter<"Tag"> | string
    posts?: PostTagListRelationFilter
  }

  export type TagOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    posts?: PostTagOrderByRelationAggregateInput
  }

  export type TagWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    posts?: PostTagListRelationFilter
  }, "id" | "name">

  export type TagOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: TagCountOrderByAggregateInput
    _max?: TagMaxOrderByAggregateInput
    _min?: TagMinOrderByAggregateInput
  }

  export type TagScalarWhereWithAggregatesInput = {
    AND?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    OR?: TagScalarWhereWithAggregatesInput[]
    NOT?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Tag"> | string
    name?: StringWithAggregatesFilter<"Tag"> | string
  }

  export type PostTagWhereInput = {
    AND?: PostTagWhereInput | PostTagWhereInput[]
    OR?: PostTagWhereInput[]
    NOT?: PostTagWhereInput | PostTagWhereInput[]
    postId?: StringFilter<"PostTag"> | string
    tagId?: StringFilter<"PostTag"> | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    tag?: XOR<TagRelationFilter, TagWhereInput>
  }

  export type PostTagOrderByWithRelationInput = {
    postId?: SortOrder
    tagId?: SortOrder
    post?: PostOrderByWithRelationInput
    tag?: TagOrderByWithRelationInput
  }

  export type PostTagWhereUniqueInput = Prisma.AtLeast<{
    postId_tagId?: PostTagPostIdTagIdCompoundUniqueInput
    AND?: PostTagWhereInput | PostTagWhereInput[]
    OR?: PostTagWhereInput[]
    NOT?: PostTagWhereInput | PostTagWhereInput[]
    postId?: StringFilter<"PostTag"> | string
    tagId?: StringFilter<"PostTag"> | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    tag?: XOR<TagRelationFilter, TagWhereInput>
  }, "postId_tagId">

  export type PostTagOrderByWithAggregationInput = {
    postId?: SortOrder
    tagId?: SortOrder
    _count?: PostTagCountOrderByAggregateInput
    _max?: PostTagMaxOrderByAggregateInput
    _min?: PostTagMinOrderByAggregateInput
  }

  export type PostTagScalarWhereWithAggregatesInput = {
    AND?: PostTagScalarWhereWithAggregatesInput | PostTagScalarWhereWithAggregatesInput[]
    OR?: PostTagScalarWhereWithAggregatesInput[]
    NOT?: PostTagScalarWhereWithAggregatesInput | PostTagScalarWhereWithAggregatesInput[]
    postId?: StringWithAggregatesFilter<"PostTag"> | string
    tagId?: StringWithAggregatesFilter<"PostTag"> | string
  }

  export type CommentWhereInput = {
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    id?: StringFilter<"Comment"> | string
    postId?: StringFilter<"Comment"> | string
    userId?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    isAnonymous?: BoolFilter<"Comment"> | boolean
    likesCount?: IntFilter<"Comment"> | number
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    parentId?: StringNullableFilter<"Comment"> | string | null
    parent?: XOR<CommentNullableRelationFilter, CommentWhereInput> | null
    replies?: CommentListRelationFilter
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    likes?: LikeListRelationFilter
  }

  export type CommentOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isAnonymous?: SortOrder
    likesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parentId?: SortOrderInput | SortOrder
    parent?: CommentOrderByWithRelationInput
    replies?: CommentOrderByRelationAggregateInput
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    likes?: LikeOrderByRelationAggregateInput
  }

  export type CommentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    postId?: StringFilter<"Comment"> | string
    userId?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    isAnonymous?: BoolFilter<"Comment"> | boolean
    likesCount?: IntFilter<"Comment"> | number
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    parentId?: StringNullableFilter<"Comment"> | string | null
    parent?: XOR<CommentNullableRelationFilter, CommentWhereInput> | null
    replies?: CommentListRelationFilter
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    likes?: LikeListRelationFilter
  }, "id">

  export type CommentOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isAnonymous?: SortOrder
    likesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parentId?: SortOrderInput | SortOrder
    _count?: CommentCountOrderByAggregateInput
    _avg?: CommentAvgOrderByAggregateInput
    _max?: CommentMaxOrderByAggregateInput
    _min?: CommentMinOrderByAggregateInput
    _sum?: CommentSumOrderByAggregateInput
  }

  export type CommentScalarWhereWithAggregatesInput = {
    AND?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    OR?: CommentScalarWhereWithAggregatesInput[]
    NOT?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Comment"> | string
    postId?: StringWithAggregatesFilter<"Comment"> | string
    userId?: StringWithAggregatesFilter<"Comment"> | string
    content?: StringWithAggregatesFilter<"Comment"> | string
    isAnonymous?: BoolWithAggregatesFilter<"Comment"> | boolean
    likesCount?: IntWithAggregatesFilter<"Comment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    parentId?: StringNullableWithAggregatesFilter<"Comment"> | string | null
  }

  export type LikeWhereInput = {
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    id?: StringFilter<"Like"> | string
    userId?: StringFilter<"Like"> | string
    postId?: StringNullableFilter<"Like"> | string | null
    commentId?: StringNullableFilter<"Like"> | string | null
    createdAt?: DateTimeFilter<"Like"> | Date | string
    comment?: XOR<CommentNullableRelationFilter, CommentWhereInput> | null
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type LikeOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrderInput | SortOrder
    commentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    comment?: CommentOrderByWithRelationInput
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type LikeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_postId?: LikeUserIdPostIdCompoundUniqueInput
    userId_commentId?: LikeUserIdCommentIdCompoundUniqueInput
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    userId?: StringFilter<"Like"> | string
    postId?: StringNullableFilter<"Like"> | string | null
    commentId?: StringNullableFilter<"Like"> | string | null
    createdAt?: DateTimeFilter<"Like"> | Date | string
    comment?: XOR<CommentNullableRelationFilter, CommentWhereInput> | null
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId_postId" | "userId_commentId">

  export type LikeOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrderInput | SortOrder
    commentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: LikeCountOrderByAggregateInput
    _max?: LikeMaxOrderByAggregateInput
    _min?: LikeMinOrderByAggregateInput
  }

  export type LikeScalarWhereWithAggregatesInput = {
    AND?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    OR?: LikeScalarWhereWithAggregatesInput[]
    NOT?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Like"> | string
    userId?: StringWithAggregatesFilter<"Like"> | string
    postId?: StringNullableWithAggregatesFilter<"Like"> | string | null
    commentId?: StringNullableWithAggregatesFilter<"Like"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Like"> | Date | string
  }

  export type SubscriptionWhereInput = {
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    id?: StringFilter<"Subscription"> | string
    userId?: StringFilter<"Subscription"> | string
    creatorId?: StringFilter<"Subscription"> | string
    plan?: StringFilter<"Subscription"> | string
    price?: FloatFilter<"Subscription"> | number
    currency?: StringFilter<"Subscription"> | string
    subscribedAt?: DateTimeFilter<"Subscription"> | Date | string
    validUntil?: DateTimeFilter<"Subscription"> | Date | string
    isActive?: BoolFilter<"Subscription"> | boolean
    txSignature?: StringNullableFilter<"Subscription"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"Subscription"> | $Enums.PaymentStatus
    paymentAmount?: FloatNullableFilter<"Subscription"> | number | null
    platformFee?: FloatNullableFilter<"Subscription"> | number | null
    referrerFee?: FloatNullableFilter<"Subscription"> | number | null
    creatorAmount?: FloatNullableFilter<"Subscription"> | number | null
    user?: XOR<UserRelationFilter, UserWhereInput>
    creator?: XOR<UserRelationFilter, UserWhereInput>
    transactions?: TransactionListRelationFilter
  }

  export type SubscriptionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    creatorId?: SortOrder
    plan?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    subscribedAt?: SortOrder
    validUntil?: SortOrder
    isActive?: SortOrder
    txSignature?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    paymentAmount?: SortOrderInput | SortOrder
    platformFee?: SortOrderInput | SortOrder
    referrerFee?: SortOrderInput | SortOrder
    creatorAmount?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    creator?: UserOrderByWithRelationInput
    transactions?: TransactionOrderByRelationAggregateInput
  }

  export type SubscriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_creatorId?: SubscriptionUserIdCreatorIdCompoundUniqueInput
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    userId?: StringFilter<"Subscription"> | string
    creatorId?: StringFilter<"Subscription"> | string
    plan?: StringFilter<"Subscription"> | string
    price?: FloatFilter<"Subscription"> | number
    currency?: StringFilter<"Subscription"> | string
    subscribedAt?: DateTimeFilter<"Subscription"> | Date | string
    validUntil?: DateTimeFilter<"Subscription"> | Date | string
    isActive?: BoolFilter<"Subscription"> | boolean
    txSignature?: StringNullableFilter<"Subscription"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"Subscription"> | $Enums.PaymentStatus
    paymentAmount?: FloatNullableFilter<"Subscription"> | number | null
    platformFee?: FloatNullableFilter<"Subscription"> | number | null
    referrerFee?: FloatNullableFilter<"Subscription"> | number | null
    creatorAmount?: FloatNullableFilter<"Subscription"> | number | null
    user?: XOR<UserRelationFilter, UserWhereInput>
    creator?: XOR<UserRelationFilter, UserWhereInput>
    transactions?: TransactionListRelationFilter
  }, "id" | "userId_creatorId">

  export type SubscriptionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    creatorId?: SortOrder
    plan?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    subscribedAt?: SortOrder
    validUntil?: SortOrder
    isActive?: SortOrder
    txSignature?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    paymentAmount?: SortOrderInput | SortOrder
    platformFee?: SortOrderInput | SortOrder
    referrerFee?: SortOrderInput | SortOrder
    creatorAmount?: SortOrderInput | SortOrder
    _count?: SubscriptionCountOrderByAggregateInput
    _avg?: SubscriptionAvgOrderByAggregateInput
    _max?: SubscriptionMaxOrderByAggregateInput
    _min?: SubscriptionMinOrderByAggregateInput
    _sum?: SubscriptionSumOrderByAggregateInput
  }

  export type SubscriptionScalarWhereWithAggregatesInput = {
    AND?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    OR?: SubscriptionScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subscription"> | string
    userId?: StringWithAggregatesFilter<"Subscription"> | string
    creatorId?: StringWithAggregatesFilter<"Subscription"> | string
    plan?: StringWithAggregatesFilter<"Subscription"> | string
    price?: FloatWithAggregatesFilter<"Subscription"> | number
    currency?: StringWithAggregatesFilter<"Subscription"> | string
    subscribedAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    validUntil?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    isActive?: BoolWithAggregatesFilter<"Subscription"> | boolean
    txSignature?: StringNullableWithAggregatesFilter<"Subscription"> | string | null
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"Subscription"> | $Enums.PaymentStatus
    paymentAmount?: FloatNullableWithAggregatesFilter<"Subscription"> | number | null
    platformFee?: FloatNullableWithAggregatesFilter<"Subscription"> | number | null
    referrerFee?: FloatNullableWithAggregatesFilter<"Subscription"> | number | null
    creatorAmount?: FloatNullableWithAggregatesFilter<"Subscription"> | number | null
  }

  export type FollowWhereInput = {
    AND?: FollowWhereInput | FollowWhereInput[]
    OR?: FollowWhereInput[]
    NOT?: FollowWhereInput | FollowWhereInput[]
    id?: StringFilter<"Follow"> | string
    followerId?: StringFilter<"Follow"> | string
    followingId?: StringFilter<"Follow"> | string
    createdAt?: DateTimeFilter<"Follow"> | Date | string
    follower?: XOR<UserRelationFilter, UserWhereInput>
    following?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type FollowOrderByWithRelationInput = {
    id?: SortOrder
    followerId?: SortOrder
    followingId?: SortOrder
    createdAt?: SortOrder
    follower?: UserOrderByWithRelationInput
    following?: UserOrderByWithRelationInput
  }

  export type FollowWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    followerId_followingId?: FollowFollowerIdFollowingIdCompoundUniqueInput
    AND?: FollowWhereInput | FollowWhereInput[]
    OR?: FollowWhereInput[]
    NOT?: FollowWhereInput | FollowWhereInput[]
    followerId?: StringFilter<"Follow"> | string
    followingId?: StringFilter<"Follow"> | string
    createdAt?: DateTimeFilter<"Follow"> | Date | string
    follower?: XOR<UserRelationFilter, UserWhereInput>
    following?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "followerId_followingId">

  export type FollowOrderByWithAggregationInput = {
    id?: SortOrder
    followerId?: SortOrder
    followingId?: SortOrder
    createdAt?: SortOrder
    _count?: FollowCountOrderByAggregateInput
    _max?: FollowMaxOrderByAggregateInput
    _min?: FollowMinOrderByAggregateInput
  }

  export type FollowScalarWhereWithAggregatesInput = {
    AND?: FollowScalarWhereWithAggregatesInput | FollowScalarWhereWithAggregatesInput[]
    OR?: FollowScalarWhereWithAggregatesInput[]
    NOT?: FollowScalarWhereWithAggregatesInput | FollowScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Follow"> | string
    followerId?: StringWithAggregatesFilter<"Follow"> | string
    followingId?: StringWithAggregatesFilter<"Follow"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Follow"> | Date | string
  }

  export type TransactionWhereInput = {
    AND?: TransactionWhereInput | TransactionWhereInput[]
    OR?: TransactionWhereInput[]
    NOT?: TransactionWhereInput | TransactionWhereInput[]
    id?: StringFilter<"Transaction"> | string
    subscriptionId?: StringNullableFilter<"Transaction"> | string | null
    postPurchaseId?: StringNullableFilter<"Transaction"> | string | null
    txSignature?: StringFilter<"Transaction"> | string
    fromWallet?: StringFilter<"Transaction"> | string
    toWallet?: StringFilter<"Transaction"> | string
    amount?: FloatFilter<"Transaction"> | number
    currency?: StringFilter<"Transaction"> | string
    type?: EnumTransactionTypeFilter<"Transaction"> | $Enums.TransactionType
    status?: EnumTransactionStatusFilter<"Transaction"> | $Enums.TransactionStatus
    senderId?: StringNullableFilter<"Transaction"> | string | null
    receiverId?: StringNullableFilter<"Transaction"> | string | null
    platformFee?: FloatNullableFilter<"Transaction"> | number | null
    referrerFee?: FloatNullableFilter<"Transaction"> | number | null
    referrerWallet?: StringNullableFilter<"Transaction"> | string | null
    metadata?: JsonNullableFilter<"Transaction">
    errorMessage?: StringNullableFilter<"Transaction"> | string | null
    confirmedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    updatedAt?: DateTimeFilter<"Transaction"> | Date | string
    subscription?: XOR<SubscriptionNullableRelationFilter, SubscriptionWhereInput> | null
    postPurchase?: XOR<PostPurchaseNullableRelationFilter, PostPurchaseWhereInput> | null
  }

  export type TransactionOrderByWithRelationInput = {
    id?: SortOrder
    subscriptionId?: SortOrderInput | SortOrder
    postPurchaseId?: SortOrderInput | SortOrder
    txSignature?: SortOrder
    fromWallet?: SortOrder
    toWallet?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    senderId?: SortOrderInput | SortOrder
    receiverId?: SortOrderInput | SortOrder
    platformFee?: SortOrderInput | SortOrder
    referrerFee?: SortOrderInput | SortOrder
    referrerWallet?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    confirmedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    subscription?: SubscriptionOrderByWithRelationInput
    postPurchase?: PostPurchaseOrderByWithRelationInput
  }

  export type TransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    postPurchaseId?: string
    txSignature?: string
    AND?: TransactionWhereInput | TransactionWhereInput[]
    OR?: TransactionWhereInput[]
    NOT?: TransactionWhereInput | TransactionWhereInput[]
    subscriptionId?: StringNullableFilter<"Transaction"> | string | null
    fromWallet?: StringFilter<"Transaction"> | string
    toWallet?: StringFilter<"Transaction"> | string
    amount?: FloatFilter<"Transaction"> | number
    currency?: StringFilter<"Transaction"> | string
    type?: EnumTransactionTypeFilter<"Transaction"> | $Enums.TransactionType
    status?: EnumTransactionStatusFilter<"Transaction"> | $Enums.TransactionStatus
    senderId?: StringNullableFilter<"Transaction"> | string | null
    receiverId?: StringNullableFilter<"Transaction"> | string | null
    platformFee?: FloatNullableFilter<"Transaction"> | number | null
    referrerFee?: FloatNullableFilter<"Transaction"> | number | null
    referrerWallet?: StringNullableFilter<"Transaction"> | string | null
    metadata?: JsonNullableFilter<"Transaction">
    errorMessage?: StringNullableFilter<"Transaction"> | string | null
    confirmedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    updatedAt?: DateTimeFilter<"Transaction"> | Date | string
    subscription?: XOR<SubscriptionNullableRelationFilter, SubscriptionWhereInput> | null
    postPurchase?: XOR<PostPurchaseNullableRelationFilter, PostPurchaseWhereInput> | null
  }, "id" | "postPurchaseId" | "txSignature">

  export type TransactionOrderByWithAggregationInput = {
    id?: SortOrder
    subscriptionId?: SortOrderInput | SortOrder
    postPurchaseId?: SortOrderInput | SortOrder
    txSignature?: SortOrder
    fromWallet?: SortOrder
    toWallet?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    senderId?: SortOrderInput | SortOrder
    receiverId?: SortOrderInput | SortOrder
    platformFee?: SortOrderInput | SortOrder
    referrerFee?: SortOrderInput | SortOrder
    referrerWallet?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    confirmedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TransactionCountOrderByAggregateInput
    _avg?: TransactionAvgOrderByAggregateInput
    _max?: TransactionMaxOrderByAggregateInput
    _min?: TransactionMinOrderByAggregateInput
    _sum?: TransactionSumOrderByAggregateInput
  }

  export type TransactionScalarWhereWithAggregatesInput = {
    AND?: TransactionScalarWhereWithAggregatesInput | TransactionScalarWhereWithAggregatesInput[]
    OR?: TransactionScalarWhereWithAggregatesInput[]
    NOT?: TransactionScalarWhereWithAggregatesInput | TransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Transaction"> | string
    subscriptionId?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    postPurchaseId?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    txSignature?: StringWithAggregatesFilter<"Transaction"> | string
    fromWallet?: StringWithAggregatesFilter<"Transaction"> | string
    toWallet?: StringWithAggregatesFilter<"Transaction"> | string
    amount?: FloatWithAggregatesFilter<"Transaction"> | number
    currency?: StringWithAggregatesFilter<"Transaction"> | string
    type?: EnumTransactionTypeWithAggregatesFilter<"Transaction"> | $Enums.TransactionType
    status?: EnumTransactionStatusWithAggregatesFilter<"Transaction"> | $Enums.TransactionStatus
    senderId?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    receiverId?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    platformFee?: FloatNullableWithAggregatesFilter<"Transaction"> | number | null
    referrerFee?: FloatNullableWithAggregatesFilter<"Transaction"> | number | null
    referrerWallet?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Transaction">
    errorMessage?: StringNullableWithAggregatesFilter<"Transaction"> | string | null
    confirmedAt?: DateTimeNullableWithAggregatesFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Transaction"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Transaction"> | Date | string
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrderInput | SortOrder
    access_token?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    token_type?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    id_token?: SortOrderInput | SortOrder
    session_state?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refresh_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    access_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expires_at?: IntNullableWithAggregatesFilter<"Account"> | number | null
    token_type?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    id_token?: StringNullableWithAggregatesFilter<"Account"> | string | null
    session_state?: StringNullableWithAggregatesFilter<"Account"> | string | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: StringWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type PostPurchaseWhereInput = {
    AND?: PostPurchaseWhereInput | PostPurchaseWhereInput[]
    OR?: PostPurchaseWhereInput[]
    NOT?: PostPurchaseWhereInput | PostPurchaseWhereInput[]
    id?: StringFilter<"PostPurchase"> | string
    postId?: StringFilter<"PostPurchase"> | string
    userId?: StringFilter<"PostPurchase"> | string
    price?: FloatFilter<"PostPurchase"> | number
    currency?: StringFilter<"PostPurchase"> | string
    txSignature?: StringNullableFilter<"PostPurchase"> | string | null
    purchasedAt?: DateTimeFilter<"PostPurchase"> | Date | string
    paymentStatus?: EnumPaymentStatusFilter<"PostPurchase"> | $Enums.PaymentStatus
    platformFee?: FloatNullableFilter<"PostPurchase"> | number | null
    referrerFee?: FloatNullableFilter<"PostPurchase"> | number | null
    creatorAmount?: FloatNullableFilter<"PostPurchase"> | number | null
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    transaction?: XOR<TransactionNullableRelationFilter, TransactionWhereInput> | null
  }

  export type PostPurchaseOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    txSignature?: SortOrderInput | SortOrder
    purchasedAt?: SortOrder
    paymentStatus?: SortOrder
    platformFee?: SortOrderInput | SortOrder
    referrerFee?: SortOrderInput | SortOrder
    creatorAmount?: SortOrderInput | SortOrder
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    transaction?: TransactionOrderByWithRelationInput
  }

  export type PostPurchaseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_postId?: PostPurchaseUserIdPostIdCompoundUniqueInput
    AND?: PostPurchaseWhereInput | PostPurchaseWhereInput[]
    OR?: PostPurchaseWhereInput[]
    NOT?: PostPurchaseWhereInput | PostPurchaseWhereInput[]
    postId?: StringFilter<"PostPurchase"> | string
    userId?: StringFilter<"PostPurchase"> | string
    price?: FloatFilter<"PostPurchase"> | number
    currency?: StringFilter<"PostPurchase"> | string
    txSignature?: StringNullableFilter<"PostPurchase"> | string | null
    purchasedAt?: DateTimeFilter<"PostPurchase"> | Date | string
    paymentStatus?: EnumPaymentStatusFilter<"PostPurchase"> | $Enums.PaymentStatus
    platformFee?: FloatNullableFilter<"PostPurchase"> | number | null
    referrerFee?: FloatNullableFilter<"PostPurchase"> | number | null
    creatorAmount?: FloatNullableFilter<"PostPurchase"> | number | null
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
    transaction?: XOR<TransactionNullableRelationFilter, TransactionWhereInput> | null
  }, "id" | "userId_postId">

  export type PostPurchaseOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    txSignature?: SortOrderInput | SortOrder
    purchasedAt?: SortOrder
    paymentStatus?: SortOrder
    platformFee?: SortOrderInput | SortOrder
    referrerFee?: SortOrderInput | SortOrder
    creatorAmount?: SortOrderInput | SortOrder
    _count?: PostPurchaseCountOrderByAggregateInput
    _avg?: PostPurchaseAvgOrderByAggregateInput
    _max?: PostPurchaseMaxOrderByAggregateInput
    _min?: PostPurchaseMinOrderByAggregateInput
    _sum?: PostPurchaseSumOrderByAggregateInput
  }

  export type PostPurchaseScalarWhereWithAggregatesInput = {
    AND?: PostPurchaseScalarWhereWithAggregatesInput | PostPurchaseScalarWhereWithAggregatesInput[]
    OR?: PostPurchaseScalarWhereWithAggregatesInput[]
    NOT?: PostPurchaseScalarWhereWithAggregatesInput | PostPurchaseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PostPurchase"> | string
    postId?: StringWithAggregatesFilter<"PostPurchase"> | string
    userId?: StringWithAggregatesFilter<"PostPurchase"> | string
    price?: FloatWithAggregatesFilter<"PostPurchase"> | number
    currency?: StringWithAggregatesFilter<"PostPurchase"> | string
    txSignature?: StringNullableWithAggregatesFilter<"PostPurchase"> | string | null
    purchasedAt?: DateTimeWithAggregatesFilter<"PostPurchase"> | Date | string
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"PostPurchase"> | $Enums.PaymentStatus
    platformFee?: FloatNullableWithAggregatesFilter<"PostPurchase"> | number | null
    referrerFee?: FloatNullableWithAggregatesFilter<"PostPurchase"> | number | null
    creatorAmount?: FloatNullableWithAggregatesFilter<"PostPurchase"> | number | null
  }

  export type UserSettingsWhereInput = {
    AND?: UserSettingsWhereInput | UserSettingsWhereInput[]
    OR?: UserSettingsWhereInput[]
    NOT?: UserSettingsWhereInput | UserSettingsWhereInput[]
    id?: StringFilter<"UserSettings"> | string
    userId?: StringFilter<"UserSettings"> | string
    notifyComments?: BoolFilter<"UserSettings"> | boolean
    notifyLikes?: BoolFilter<"UserSettings"> | boolean
    notifyNewPosts?: BoolFilter<"UserSettings"> | boolean
    notifySubscriptions?: BoolFilter<"UserSettings"> | boolean
    showActivity?: BoolFilter<"UserSettings"> | boolean
    allowMessages?: BoolFilter<"UserSettings"> | boolean
    showOnlineStatus?: BoolFilter<"UserSettings"> | boolean
    theme?: StringFilter<"UserSettings"> | string
    createdAt?: DateTimeFilter<"UserSettings"> | Date | string
    updatedAt?: DateTimeFilter<"UserSettings"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserSettingsOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    notifyComments?: SortOrder
    notifyLikes?: SortOrder
    notifyNewPosts?: SortOrder
    notifySubscriptions?: SortOrder
    showActivity?: SortOrder
    allowMessages?: SortOrder
    showOnlineStatus?: SortOrder
    theme?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: UserSettingsWhereInput | UserSettingsWhereInput[]
    OR?: UserSettingsWhereInput[]
    NOT?: UserSettingsWhereInput | UserSettingsWhereInput[]
    notifyComments?: BoolFilter<"UserSettings"> | boolean
    notifyLikes?: BoolFilter<"UserSettings"> | boolean
    notifyNewPosts?: BoolFilter<"UserSettings"> | boolean
    notifySubscriptions?: BoolFilter<"UserSettings"> | boolean
    showActivity?: BoolFilter<"UserSettings"> | boolean
    allowMessages?: BoolFilter<"UserSettings"> | boolean
    showOnlineStatus?: BoolFilter<"UserSettings"> | boolean
    theme?: StringFilter<"UserSettings"> | string
    createdAt?: DateTimeFilter<"UserSettings"> | Date | string
    updatedAt?: DateTimeFilter<"UserSettings"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type UserSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    notifyComments?: SortOrder
    notifyLikes?: SortOrder
    notifyNewPosts?: SortOrder
    notifySubscriptions?: SortOrder
    showActivity?: SortOrder
    allowMessages?: SortOrder
    showOnlineStatus?: SortOrder
    theme?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserSettingsCountOrderByAggregateInput
    _max?: UserSettingsMaxOrderByAggregateInput
    _min?: UserSettingsMinOrderByAggregateInput
  }

  export type UserSettingsScalarWhereWithAggregatesInput = {
    AND?: UserSettingsScalarWhereWithAggregatesInput | UserSettingsScalarWhereWithAggregatesInput[]
    OR?: UserSettingsScalarWhereWithAggregatesInput[]
    NOT?: UserSettingsScalarWhereWithAggregatesInput | UserSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSettings"> | string
    userId?: StringWithAggregatesFilter<"UserSettings"> | string
    notifyComments?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    notifyLikes?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    notifyNewPosts?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    notifySubscriptions?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showActivity?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    allowMessages?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showOnlineStatus?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    theme?: StringWithAggregatesFilter<"UserSettings"> | string
    createdAt?: DateTimeWithAggregatesFilter<"UserSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserSettings"> | Date | string
  }

  export type CreatorTierSettingsWhereInput = {
    AND?: CreatorTierSettingsWhereInput | CreatorTierSettingsWhereInput[]
    OR?: CreatorTierSettingsWhereInput[]
    NOT?: CreatorTierSettingsWhereInput | CreatorTierSettingsWhereInput[]
    id?: StringFilter<"CreatorTierSettings"> | string
    creatorId?: StringFilter<"CreatorTierSettings"> | string
    basicTier?: JsonNullableFilter<"CreatorTierSettings">
    premiumTier?: JsonNullableFilter<"CreatorTierSettings">
    vipTier?: JsonNullableFilter<"CreatorTierSettings">
    createdAt?: DateTimeFilter<"CreatorTierSettings"> | Date | string
    updatedAt?: DateTimeFilter<"CreatorTierSettings"> | Date | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type CreatorTierSettingsOrderByWithRelationInput = {
    id?: SortOrder
    creatorId?: SortOrder
    basicTier?: SortOrderInput | SortOrder
    premiumTier?: SortOrderInput | SortOrder
    vipTier?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    creator?: UserOrderByWithRelationInput
  }

  export type CreatorTierSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    creatorId?: string
    AND?: CreatorTierSettingsWhereInput | CreatorTierSettingsWhereInput[]
    OR?: CreatorTierSettingsWhereInput[]
    NOT?: CreatorTierSettingsWhereInput | CreatorTierSettingsWhereInput[]
    basicTier?: JsonNullableFilter<"CreatorTierSettings">
    premiumTier?: JsonNullableFilter<"CreatorTierSettings">
    vipTier?: JsonNullableFilter<"CreatorTierSettings">
    createdAt?: DateTimeFilter<"CreatorTierSettings"> | Date | string
    updatedAt?: DateTimeFilter<"CreatorTierSettings"> | Date | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "creatorId">

  export type CreatorTierSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    creatorId?: SortOrder
    basicTier?: SortOrderInput | SortOrder
    premiumTier?: SortOrderInput | SortOrder
    vipTier?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CreatorTierSettingsCountOrderByAggregateInput
    _max?: CreatorTierSettingsMaxOrderByAggregateInput
    _min?: CreatorTierSettingsMinOrderByAggregateInput
  }

  export type CreatorTierSettingsScalarWhereWithAggregatesInput = {
    AND?: CreatorTierSettingsScalarWhereWithAggregatesInput | CreatorTierSettingsScalarWhereWithAggregatesInput[]
    OR?: CreatorTierSettingsScalarWhereWithAggregatesInput[]
    NOT?: CreatorTierSettingsScalarWhereWithAggregatesInput | CreatorTierSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CreatorTierSettings"> | string
    creatorId?: StringWithAggregatesFilter<"CreatorTierSettings"> | string
    basicTier?: JsonNullableWithAggregatesFilter<"CreatorTierSettings">
    premiumTier?: JsonNullableWithAggregatesFilter<"CreatorTierSettings">
    vipTier?: JsonNullableWithAggregatesFilter<"CreatorTierSettings">
    createdAt?: DateTimeWithAggregatesFilter<"CreatorTierSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CreatorTierSettings"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    metadata?: JsonNullableFilter<"Notification">
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    metadata?: JsonNullableFilter<"Notification">
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"Notification">
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type AuctionDepositWhereInput = {
    AND?: AuctionDepositWhereInput | AuctionDepositWhereInput[]
    OR?: AuctionDepositWhereInput[]
    NOT?: AuctionDepositWhereInput | AuctionDepositWhereInput[]
    id?: StringFilter<"AuctionDeposit"> | string
    postId?: StringFilter<"AuctionDeposit"> | string
    userId?: StringFilter<"AuctionDeposit"> | string
    amount?: FloatFilter<"AuctionDeposit"> | number
    txSignature?: StringFilter<"AuctionDeposit"> | string
    status?: EnumDepositStatusFilter<"AuctionDeposit"> | $Enums.DepositStatus
    createdAt?: DateTimeFilter<"AuctionDeposit"> | Date | string
    refundedAt?: DateTimeNullableFilter<"AuctionDeposit"> | Date | string | null
    refundTxSignature?: StringNullableFilter<"AuctionDeposit"> | string | null
    forfeitedAt?: DateTimeNullableFilter<"AuctionDeposit"> | Date | string | null
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AuctionDepositOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    refundedAt?: SortOrderInput | SortOrder
    refundTxSignature?: SortOrderInput | SortOrder
    forfeitedAt?: SortOrderInput | SortOrder
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AuctionDepositWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    postId_userId?: AuctionDepositPostIdUserIdCompoundUniqueInput
    AND?: AuctionDepositWhereInput | AuctionDepositWhereInput[]
    OR?: AuctionDepositWhereInput[]
    NOT?: AuctionDepositWhereInput | AuctionDepositWhereInput[]
    postId?: StringFilter<"AuctionDeposit"> | string
    userId?: StringFilter<"AuctionDeposit"> | string
    amount?: FloatFilter<"AuctionDeposit"> | number
    txSignature?: StringFilter<"AuctionDeposit"> | string
    status?: EnumDepositStatusFilter<"AuctionDeposit"> | $Enums.DepositStatus
    createdAt?: DateTimeFilter<"AuctionDeposit"> | Date | string
    refundedAt?: DateTimeNullableFilter<"AuctionDeposit"> | Date | string | null
    refundTxSignature?: StringNullableFilter<"AuctionDeposit"> | string | null
    forfeitedAt?: DateTimeNullableFilter<"AuctionDeposit"> | Date | string | null
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "postId_userId">

  export type AuctionDepositOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    refundedAt?: SortOrderInput | SortOrder
    refundTxSignature?: SortOrderInput | SortOrder
    forfeitedAt?: SortOrderInput | SortOrder
    _count?: AuctionDepositCountOrderByAggregateInput
    _avg?: AuctionDepositAvgOrderByAggregateInput
    _max?: AuctionDepositMaxOrderByAggregateInput
    _min?: AuctionDepositMinOrderByAggregateInput
    _sum?: AuctionDepositSumOrderByAggregateInput
  }

  export type AuctionDepositScalarWhereWithAggregatesInput = {
    AND?: AuctionDepositScalarWhereWithAggregatesInput | AuctionDepositScalarWhereWithAggregatesInput[]
    OR?: AuctionDepositScalarWhereWithAggregatesInput[]
    NOT?: AuctionDepositScalarWhereWithAggregatesInput | AuctionDepositScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuctionDeposit"> | string
    postId?: StringWithAggregatesFilter<"AuctionDeposit"> | string
    userId?: StringWithAggregatesFilter<"AuctionDeposit"> | string
    amount?: FloatWithAggregatesFilter<"AuctionDeposit"> | number
    txSignature?: StringWithAggregatesFilter<"AuctionDeposit"> | string
    status?: EnumDepositStatusWithAggregatesFilter<"AuctionDeposit"> | $Enums.DepositStatus
    createdAt?: DateTimeWithAggregatesFilter<"AuctionDeposit"> | Date | string
    refundedAt?: DateTimeNullableWithAggregatesFilter<"AuctionDeposit"> | Date | string | null
    refundTxSignature?: StringNullableWithAggregatesFilter<"AuctionDeposit"> | string | null
    forfeitedAt?: DateTimeNullableWithAggregatesFilter<"AuctionDeposit"> | Date | string | null
  }

  export type AuctionBidWhereInput = {
    AND?: AuctionBidWhereInput | AuctionBidWhereInput[]
    OR?: AuctionBidWhereInput[]
    NOT?: AuctionBidWhereInput | AuctionBidWhereInput[]
    id?: StringFilter<"AuctionBid"> | string
    postId?: StringFilter<"AuctionBid"> | string
    userId?: StringFilter<"AuctionBid"> | string
    amount?: FloatFilter<"AuctionBid"> | number
    isWinning?: BoolFilter<"AuctionBid"> | boolean
    createdAt?: DateTimeFilter<"AuctionBid"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AuctionBidOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    isWinning?: SortOrder
    createdAt?: SortOrder
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AuctionBidWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuctionBidWhereInput | AuctionBidWhereInput[]
    OR?: AuctionBidWhereInput[]
    NOT?: AuctionBidWhereInput | AuctionBidWhereInput[]
    postId?: StringFilter<"AuctionBid"> | string
    userId?: StringFilter<"AuctionBid"> | string
    amount?: FloatFilter<"AuctionBid"> | number
    isWinning?: BoolFilter<"AuctionBid"> | boolean
    createdAt?: DateTimeFilter<"AuctionBid"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type AuctionBidOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    isWinning?: SortOrder
    createdAt?: SortOrder
    _count?: AuctionBidCountOrderByAggregateInput
    _avg?: AuctionBidAvgOrderByAggregateInput
    _max?: AuctionBidMaxOrderByAggregateInput
    _min?: AuctionBidMinOrderByAggregateInput
    _sum?: AuctionBidSumOrderByAggregateInput
  }

  export type AuctionBidScalarWhereWithAggregatesInput = {
    AND?: AuctionBidScalarWhereWithAggregatesInput | AuctionBidScalarWhereWithAggregatesInput[]
    OR?: AuctionBidScalarWhereWithAggregatesInput[]
    NOT?: AuctionBidScalarWhereWithAggregatesInput | AuctionBidScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuctionBid"> | string
    postId?: StringWithAggregatesFilter<"AuctionBid"> | string
    userId?: StringWithAggregatesFilter<"AuctionBid"> | string
    amount?: FloatWithAggregatesFilter<"AuctionBid"> | number
    isWinning?: BoolWithAggregatesFilter<"AuctionBid"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"AuctionBid"> | Date | string
  }

  export type AuctionPaymentWhereInput = {
    AND?: AuctionPaymentWhereInput | AuctionPaymentWhereInput[]
    OR?: AuctionPaymentWhereInput[]
    NOT?: AuctionPaymentWhereInput | AuctionPaymentWhereInput[]
    id?: StringFilter<"AuctionPayment"> | string
    postId?: StringFilter<"AuctionPayment"> | string
    userId?: StringFilter<"AuctionPayment"> | string
    amount?: FloatFilter<"AuctionPayment"> | number
    txSignature?: StringNullableFilter<"AuctionPayment"> | string | null
    status?: EnumAuctionPaymentStatusFilter<"AuctionPayment"> | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFilter<"AuctionPayment"> | Date | string
    paidAt?: DateTimeNullableFilter<"AuctionPayment"> | Date | string | null
    sellerConfirmedAt?: DateTimeNullableFilter<"AuctionPayment"> | Date | string | null
    createdAt?: DateTimeFilter<"AuctionPayment"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AuctionPaymentOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrderInput | SortOrder
    status?: SortOrder
    dueAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    sellerConfirmedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AuctionPaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    postId?: string
    AND?: AuctionPaymentWhereInput | AuctionPaymentWhereInput[]
    OR?: AuctionPaymentWhereInput[]
    NOT?: AuctionPaymentWhereInput | AuctionPaymentWhereInput[]
    userId?: StringFilter<"AuctionPayment"> | string
    amount?: FloatFilter<"AuctionPayment"> | number
    txSignature?: StringNullableFilter<"AuctionPayment"> | string | null
    status?: EnumAuctionPaymentStatusFilter<"AuctionPayment"> | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFilter<"AuctionPayment"> | Date | string
    paidAt?: DateTimeNullableFilter<"AuctionPayment"> | Date | string | null
    sellerConfirmedAt?: DateTimeNullableFilter<"AuctionPayment"> | Date | string | null
    createdAt?: DateTimeFilter<"AuctionPayment"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "postId">

  export type AuctionPaymentOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrderInput | SortOrder
    status?: SortOrder
    dueAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    sellerConfirmedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: AuctionPaymentCountOrderByAggregateInput
    _avg?: AuctionPaymentAvgOrderByAggregateInput
    _max?: AuctionPaymentMaxOrderByAggregateInput
    _min?: AuctionPaymentMinOrderByAggregateInput
    _sum?: AuctionPaymentSumOrderByAggregateInput
  }

  export type AuctionPaymentScalarWhereWithAggregatesInput = {
    AND?: AuctionPaymentScalarWhereWithAggregatesInput | AuctionPaymentScalarWhereWithAggregatesInput[]
    OR?: AuctionPaymentScalarWhereWithAggregatesInput[]
    NOT?: AuctionPaymentScalarWhereWithAggregatesInput | AuctionPaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuctionPayment"> | string
    postId?: StringWithAggregatesFilter<"AuctionPayment"> | string
    userId?: StringWithAggregatesFilter<"AuctionPayment"> | string
    amount?: FloatWithAggregatesFilter<"AuctionPayment"> | number
    txSignature?: StringNullableWithAggregatesFilter<"AuctionPayment"> | string | null
    status?: EnumAuctionPaymentStatusWithAggregatesFilter<"AuctionPayment"> | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeWithAggregatesFilter<"AuctionPayment"> | Date | string
    paidAt?: DateTimeNullableWithAggregatesFilter<"AuctionPayment"> | Date | string | null
    sellerConfirmedAt?: DateTimeNullableWithAggregatesFilter<"AuctionPayment"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AuctionPayment"> | Date | string
  }

  export type FlashSaleWhereInput = {
    AND?: FlashSaleWhereInput | FlashSaleWhereInput[]
    OR?: FlashSaleWhereInput[]
    NOT?: FlashSaleWhereInput | FlashSaleWhereInput[]
    id?: StringFilter<"FlashSale"> | string
    creatorId?: StringNullableFilter<"FlashSale"> | string | null
    postId?: StringNullableFilter<"FlashSale"> | string | null
    subscriptionPlan?: StringNullableFilter<"FlashSale"> | string | null
    discount?: FloatFilter<"FlashSale"> | number
    maxRedemptions?: IntNullableFilter<"FlashSale"> | number | null
    usedCount?: IntFilter<"FlashSale"> | number
    startAt?: DateTimeFilter<"FlashSale"> | Date | string
    endAt?: DateTimeFilter<"FlashSale"> | Date | string
    isActive?: BoolFilter<"FlashSale"> | boolean
    createdAt?: DateTimeFilter<"FlashSale"> | Date | string
    updatedAt?: DateTimeFilter<"FlashSale"> | Date | string
    creator?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    redemptions?: FlashSaleRedemptionListRelationFilter
  }

  export type FlashSaleOrderByWithRelationInput = {
    id?: SortOrder
    creatorId?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    subscriptionPlan?: SortOrderInput | SortOrder
    discount?: SortOrder
    maxRedemptions?: SortOrderInput | SortOrder
    usedCount?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    creator?: UserOrderByWithRelationInput
    post?: PostOrderByWithRelationInput
    redemptions?: FlashSaleRedemptionOrderByRelationAggregateInput
  }

  export type FlashSaleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FlashSaleWhereInput | FlashSaleWhereInput[]
    OR?: FlashSaleWhereInput[]
    NOT?: FlashSaleWhereInput | FlashSaleWhereInput[]
    creatorId?: StringNullableFilter<"FlashSale"> | string | null
    postId?: StringNullableFilter<"FlashSale"> | string | null
    subscriptionPlan?: StringNullableFilter<"FlashSale"> | string | null
    discount?: FloatFilter<"FlashSale"> | number
    maxRedemptions?: IntNullableFilter<"FlashSale"> | number | null
    usedCount?: IntFilter<"FlashSale"> | number
    startAt?: DateTimeFilter<"FlashSale"> | Date | string
    endAt?: DateTimeFilter<"FlashSale"> | Date | string
    isActive?: BoolFilter<"FlashSale"> | boolean
    createdAt?: DateTimeFilter<"FlashSale"> | Date | string
    updatedAt?: DateTimeFilter<"FlashSale"> | Date | string
    creator?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    redemptions?: FlashSaleRedemptionListRelationFilter
  }, "id">

  export type FlashSaleOrderByWithAggregationInput = {
    id?: SortOrder
    creatorId?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    subscriptionPlan?: SortOrderInput | SortOrder
    discount?: SortOrder
    maxRedemptions?: SortOrderInput | SortOrder
    usedCount?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FlashSaleCountOrderByAggregateInput
    _avg?: FlashSaleAvgOrderByAggregateInput
    _max?: FlashSaleMaxOrderByAggregateInput
    _min?: FlashSaleMinOrderByAggregateInput
    _sum?: FlashSaleSumOrderByAggregateInput
  }

  export type FlashSaleScalarWhereWithAggregatesInput = {
    AND?: FlashSaleScalarWhereWithAggregatesInput | FlashSaleScalarWhereWithAggregatesInput[]
    OR?: FlashSaleScalarWhereWithAggregatesInput[]
    NOT?: FlashSaleScalarWhereWithAggregatesInput | FlashSaleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FlashSale"> | string
    creatorId?: StringNullableWithAggregatesFilter<"FlashSale"> | string | null
    postId?: StringNullableWithAggregatesFilter<"FlashSale"> | string | null
    subscriptionPlan?: StringNullableWithAggregatesFilter<"FlashSale"> | string | null
    discount?: FloatWithAggregatesFilter<"FlashSale"> | number
    maxRedemptions?: IntNullableWithAggregatesFilter<"FlashSale"> | number | null
    usedCount?: IntWithAggregatesFilter<"FlashSale"> | number
    startAt?: DateTimeWithAggregatesFilter<"FlashSale"> | Date | string
    endAt?: DateTimeWithAggregatesFilter<"FlashSale"> | Date | string
    isActive?: BoolWithAggregatesFilter<"FlashSale"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"FlashSale"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FlashSale"> | Date | string
  }

  export type FlashSaleRedemptionWhereInput = {
    AND?: FlashSaleRedemptionWhereInput | FlashSaleRedemptionWhereInput[]
    OR?: FlashSaleRedemptionWhereInput[]
    NOT?: FlashSaleRedemptionWhereInput | FlashSaleRedemptionWhereInput[]
    id?: StringFilter<"FlashSaleRedemption"> | string
    flashSaleId?: StringFilter<"FlashSaleRedemption"> | string
    userId?: StringFilter<"FlashSaleRedemption"> | string
    originalPrice?: FloatFilter<"FlashSaleRedemption"> | number
    discountAmount?: FloatFilter<"FlashSaleRedemption"> | number
    finalPrice?: FloatFilter<"FlashSaleRedemption"> | number
    redeemedAt?: DateTimeFilter<"FlashSaleRedemption"> | Date | string
    flashSale?: XOR<FlashSaleRelationFilter, FlashSaleWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type FlashSaleRedemptionOrderByWithRelationInput = {
    id?: SortOrder
    flashSaleId?: SortOrder
    userId?: SortOrder
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
    redeemedAt?: SortOrder
    flashSale?: FlashSaleOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type FlashSaleRedemptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    flashSaleId_userId?: FlashSaleRedemptionFlashSaleIdUserIdCompoundUniqueInput
    AND?: FlashSaleRedemptionWhereInput | FlashSaleRedemptionWhereInput[]
    OR?: FlashSaleRedemptionWhereInput[]
    NOT?: FlashSaleRedemptionWhereInput | FlashSaleRedemptionWhereInput[]
    flashSaleId?: StringFilter<"FlashSaleRedemption"> | string
    userId?: StringFilter<"FlashSaleRedemption"> | string
    originalPrice?: FloatFilter<"FlashSaleRedemption"> | number
    discountAmount?: FloatFilter<"FlashSaleRedemption"> | number
    finalPrice?: FloatFilter<"FlashSaleRedemption"> | number
    redeemedAt?: DateTimeFilter<"FlashSaleRedemption"> | Date | string
    flashSale?: XOR<FlashSaleRelationFilter, FlashSaleWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "flashSaleId_userId">

  export type FlashSaleRedemptionOrderByWithAggregationInput = {
    id?: SortOrder
    flashSaleId?: SortOrder
    userId?: SortOrder
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
    redeemedAt?: SortOrder
    _count?: FlashSaleRedemptionCountOrderByAggregateInput
    _avg?: FlashSaleRedemptionAvgOrderByAggregateInput
    _max?: FlashSaleRedemptionMaxOrderByAggregateInput
    _min?: FlashSaleRedemptionMinOrderByAggregateInput
    _sum?: FlashSaleRedemptionSumOrderByAggregateInput
  }

  export type FlashSaleRedemptionScalarWhereWithAggregatesInput = {
    AND?: FlashSaleRedemptionScalarWhereWithAggregatesInput | FlashSaleRedemptionScalarWhereWithAggregatesInput[]
    OR?: FlashSaleRedemptionScalarWhereWithAggregatesInput[]
    NOT?: FlashSaleRedemptionScalarWhereWithAggregatesInput | FlashSaleRedemptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FlashSaleRedemption"> | string
    flashSaleId?: StringWithAggregatesFilter<"FlashSaleRedemption"> | string
    userId?: StringWithAggregatesFilter<"FlashSaleRedemption"> | string
    originalPrice?: FloatWithAggregatesFilter<"FlashSaleRedemption"> | number
    discountAmount?: FloatWithAggregatesFilter<"FlashSaleRedemption"> | number
    finalPrice?: FloatWithAggregatesFilter<"FlashSaleRedemption"> | number
    redeemedAt?: DateTimeWithAggregatesFilter<"FlashSaleRedemption"> | Date | string
  }

  export type ConversationWhereInput = {
    AND?: ConversationWhereInput | ConversationWhereInput[]
    OR?: ConversationWhereInput[]
    NOT?: ConversationWhereInput | ConversationWhereInput[]
    id?: StringFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeFilter<"Conversation"> | Date | string
    participants?: UserListRelationFilter
    messages?: MessageListRelationFilter
  }

  export type ConversationOrderByWithRelationInput = {
    id?: SortOrder
    lastMessageAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    participants?: UserOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
  }

  export type ConversationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ConversationWhereInput | ConversationWhereInput[]
    OR?: ConversationWhereInput[]
    NOT?: ConversationWhereInput | ConversationWhereInput[]
    lastMessageAt?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeFilter<"Conversation"> | Date | string
    participants?: UserListRelationFilter
    messages?: MessageListRelationFilter
  }, "id">

  export type ConversationOrderByWithAggregationInput = {
    id?: SortOrder
    lastMessageAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConversationCountOrderByAggregateInput
    _max?: ConversationMaxOrderByAggregateInput
    _min?: ConversationMinOrderByAggregateInput
  }

  export type ConversationScalarWhereWithAggregatesInput = {
    AND?: ConversationScalarWhereWithAggregatesInput | ConversationScalarWhereWithAggregatesInput[]
    OR?: ConversationScalarWhereWithAggregatesInput[]
    NOT?: ConversationScalarWhereWithAggregatesInput | ConversationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableWithAggregatesFilter<"Conversation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Conversation"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    content?: StringNullableFilter<"Message"> | string | null
    mediaUrl?: StringNullableFilter<"Message"> | string | null
    mediaType?: StringNullableFilter<"Message"> | string | null
    isPaid?: BoolFilter<"Message"> | boolean
    price?: FloatNullableFilter<"Message"> | number | null
    isRead?: BoolFilter<"Message"> | boolean
    metadata?: JsonNullableFilter<"Message">
    createdAt?: DateTimeFilter<"Message"> | Date | string
    conversation?: XOR<ConversationRelationFilter, ConversationWhereInput>
    sender?: XOR<UserRelationFilter, UserWhereInput>
    purchases?: MessagePurchaseListRelationFilter
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    content?: SortOrderInput | SortOrder
    mediaUrl?: SortOrderInput | SortOrder
    mediaType?: SortOrderInput | SortOrder
    isPaid?: SortOrder
    price?: SortOrderInput | SortOrder
    isRead?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    conversation?: ConversationOrderByWithRelationInput
    sender?: UserOrderByWithRelationInput
    purchases?: MessagePurchaseOrderByRelationAggregateInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    content?: StringNullableFilter<"Message"> | string | null
    mediaUrl?: StringNullableFilter<"Message"> | string | null
    mediaType?: StringNullableFilter<"Message"> | string | null
    isPaid?: BoolFilter<"Message"> | boolean
    price?: FloatNullableFilter<"Message"> | number | null
    isRead?: BoolFilter<"Message"> | boolean
    metadata?: JsonNullableFilter<"Message">
    createdAt?: DateTimeFilter<"Message"> | Date | string
    conversation?: XOR<ConversationRelationFilter, ConversationWhereInput>
    sender?: XOR<UserRelationFilter, UserWhereInput>
    purchases?: MessagePurchaseListRelationFilter
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    content?: SortOrderInput | SortOrder
    mediaUrl?: SortOrderInput | SortOrder
    mediaType?: SortOrderInput | SortOrder
    isPaid?: SortOrder
    price?: SortOrderInput | SortOrder
    isRead?: SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _avg?: MessageAvgOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
    _sum?: MessageSumOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    conversationId?: StringWithAggregatesFilter<"Message"> | string
    senderId?: StringWithAggregatesFilter<"Message"> | string
    content?: StringNullableWithAggregatesFilter<"Message"> | string | null
    mediaUrl?: StringNullableWithAggregatesFilter<"Message"> | string | null
    mediaType?: StringNullableWithAggregatesFilter<"Message"> | string | null
    isPaid?: BoolWithAggregatesFilter<"Message"> | boolean
    price?: FloatNullableWithAggregatesFilter<"Message"> | number | null
    isRead?: BoolWithAggregatesFilter<"Message"> | boolean
    metadata?: JsonNullableWithAggregatesFilter<"Message">
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
  }

  export type MessagePurchaseWhereInput = {
    AND?: MessagePurchaseWhereInput | MessagePurchaseWhereInput[]
    OR?: MessagePurchaseWhereInput[]
    NOT?: MessagePurchaseWhereInput | MessagePurchaseWhereInput[]
    id?: StringFilter<"MessagePurchase"> | string
    messageId?: StringFilter<"MessagePurchase"> | string
    userId?: StringFilter<"MessagePurchase"> | string
    amount?: FloatFilter<"MessagePurchase"> | number
    txSignature?: StringFilter<"MessagePurchase"> | string
    createdAt?: DateTimeFilter<"MessagePurchase"> | Date | string
    message?: XOR<MessageRelationFilter, MessageWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type MessagePurchaseOrderByWithRelationInput = {
    id?: SortOrder
    messageId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    createdAt?: SortOrder
    message?: MessageOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type MessagePurchaseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    messageId_userId?: MessagePurchaseMessageIdUserIdCompoundUniqueInput
    AND?: MessagePurchaseWhereInput | MessagePurchaseWhereInput[]
    OR?: MessagePurchaseWhereInput[]
    NOT?: MessagePurchaseWhereInput | MessagePurchaseWhereInput[]
    messageId?: StringFilter<"MessagePurchase"> | string
    userId?: StringFilter<"MessagePurchase"> | string
    amount?: FloatFilter<"MessagePurchase"> | number
    txSignature?: StringFilter<"MessagePurchase"> | string
    createdAt?: DateTimeFilter<"MessagePurchase"> | Date | string
    message?: XOR<MessageRelationFilter, MessageWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "messageId_userId">

  export type MessagePurchaseOrderByWithAggregationInput = {
    id?: SortOrder
    messageId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    createdAt?: SortOrder
    _count?: MessagePurchaseCountOrderByAggregateInput
    _avg?: MessagePurchaseAvgOrderByAggregateInput
    _max?: MessagePurchaseMaxOrderByAggregateInput
    _min?: MessagePurchaseMinOrderByAggregateInput
    _sum?: MessagePurchaseSumOrderByAggregateInput
  }

  export type MessagePurchaseScalarWhereWithAggregatesInput = {
    AND?: MessagePurchaseScalarWhereWithAggregatesInput | MessagePurchaseScalarWhereWithAggregatesInput[]
    OR?: MessagePurchaseScalarWhereWithAggregatesInput[]
    NOT?: MessagePurchaseScalarWhereWithAggregatesInput | MessagePurchaseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MessagePurchase"> | string
    messageId?: StringWithAggregatesFilter<"MessagePurchase"> | string
    userId?: StringWithAggregatesFilter<"MessagePurchase"> | string
    amount?: FloatWithAggregatesFilter<"MessagePurchase"> | number
    txSignature?: StringWithAggregatesFilter<"MessagePurchase"> | string
    createdAt?: DateTimeWithAggregatesFilter<"MessagePurchase"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PostCreateInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostCreateManyInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
  }

  export type PostUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PostUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TagCreateInput = {
    id?: string
    name: string
    posts?: PostTagCreateNestedManyWithoutTagInput
  }

  export type TagUncheckedCreateInput = {
    id?: string
    name: string
    posts?: PostTagUncheckedCreateNestedManyWithoutTagInput
  }

  export type TagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    posts?: PostTagUpdateManyWithoutTagNestedInput
  }

  export type TagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    posts?: PostTagUncheckedUpdateManyWithoutTagNestedInput
  }

  export type TagCreateManyInput = {
    id?: string
    name: string
  }

  export type TagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type PostTagCreateInput = {
    post: PostCreateNestedOneWithoutTagsInput
    tag: TagCreateNestedOneWithoutPostsInput
  }

  export type PostTagUncheckedCreateInput = {
    postId: string
    tagId: string
  }

  export type PostTagUpdateInput = {
    post?: PostUpdateOneRequiredWithoutTagsNestedInput
    tag?: TagUpdateOneRequiredWithoutPostsNestedInput
  }

  export type PostTagUncheckedUpdateInput = {
    postId?: StringFieldUpdateOperationsInput | string
    tagId?: StringFieldUpdateOperationsInput | string
  }

  export type PostTagCreateManyInput = {
    postId: string
    tagId: string
  }

  export type PostTagUpdateManyMutationInput = {

  }

  export type PostTagUncheckedUpdateManyInput = {
    postId?: StringFieldUpdateOperationsInput | string
    tagId?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCreateInput = {
    id?: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParentInput
    post: PostCreateNestedOneWithoutCommentsInput
    user: UserCreateNestedOneWithoutCommentsInput
    likes?: LikeCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateInput = {
    id?: string
    postId: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParentInput
    likes?: LikeUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParentNestedInput
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
    likes?: LikeUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParentNestedInput
    likes?: LikeUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentCreateManyInput = {
    id?: string
    postId: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
  }

  export type CommentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LikeCreateInput = {
    id?: string
    createdAt?: Date | string
    comment?: CommentCreateNestedOneWithoutLikesInput
    post?: PostCreateNestedOneWithoutLikesInput
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateInput = {
    id?: string
    userId: string
    postId?: string | null
    commentId?: string | null
    createdAt?: Date | string
  }

  export type LikeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment?: CommentUpdateOneWithoutLikesNestedInput
    post?: PostUpdateOneWithoutLikesNestedInput
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeCreateManyInput = {
    id?: string
    userId: string
    postId?: string | null
    commentId?: string | null
    createdAt?: Date | string
  }

  export type LikeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateInput = {
    id?: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    user: UserCreateNestedOneWithoutSubscriptionsInput
    creator: UserCreateNestedOneWithoutSubscribersInput
    transactions?: TransactionCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUncheckedCreateInput = {
    id?: string
    userId: string
    creatorId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    transactions?: TransactionUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneRequiredWithoutSubscriptionsNestedInput
    creator?: UserUpdateOneRequiredWithoutSubscribersNestedInput
    transactions?: TransactionUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    transactions?: TransactionUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionCreateManyInput = {
    id?: string
    userId: string
    creatorId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type SubscriptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type SubscriptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type FollowCreateInput = {
    id?: string
    createdAt?: Date | string
    follower: UserCreateNestedOneWithoutFollowsInput
    following: UserCreateNestedOneWithoutFollowersInput
  }

  export type FollowUncheckedCreateInput = {
    id?: string
    followerId: string
    followingId: string
    createdAt?: Date | string
  }

  export type FollowUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    follower?: UserUpdateOneRequiredWithoutFollowsNestedInput
    following?: UserUpdateOneRequiredWithoutFollowersNestedInput
  }

  export type FollowUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    followerId?: StringFieldUpdateOperationsInput | string
    followingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowCreateManyInput = {
    id?: string
    followerId: string
    followingId: string
    createdAt?: Date | string
  }

  export type FollowUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    followerId?: StringFieldUpdateOperationsInput | string
    followingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionCreateInput = {
    id?: string
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    subscription?: SubscriptionCreateNestedOneWithoutTransactionsInput
    postPurchase?: PostPurchaseCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateInput = {
    id?: string
    subscriptionId?: string | null
    postPurchaseId?: string | null
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionUpdateOneWithoutTransactionsNestedInput
    postPurchase?: PostPurchaseUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    postPurchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionCreateManyInput = {
    id?: string
    subscriptionId?: string | null
    postPurchaseId?: string | null
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    postPurchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateManyInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostPurchaseCreateInput = {
    id?: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    post: PostCreateNestedOneWithoutPurchasesInput
    user: UserCreateNestedOneWithoutPostPurchasesInput
    transaction?: TransactionCreateNestedOneWithoutPostPurchaseInput
  }

  export type PostPurchaseUncheckedCreateInput = {
    id?: string
    postId: string
    userId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    transaction?: TransactionUncheckedCreateNestedOneWithoutPostPurchaseInput
  }

  export type PostPurchaseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    post?: PostUpdateOneRequiredWithoutPurchasesNestedInput
    user?: UserUpdateOneRequiredWithoutPostPurchasesNestedInput
    transaction?: TransactionUpdateOneWithoutPostPurchaseNestedInput
  }

  export type PostPurchaseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    transaction?: TransactionUncheckedUpdateOneWithoutPostPurchaseNestedInput
  }

  export type PostPurchaseCreateManyInput = {
    id?: string
    postId: string
    userId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type PostPurchaseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type PostPurchaseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type UserSettingsCreateInput = {
    id?: string
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSettingsInput
  }

  export type UserSettingsUncheckedCreateInput = {
    id?: string
    userId: string
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    notifyComments?: BoolFieldUpdateOperationsInput | boolean
    notifyLikes?: BoolFieldUpdateOperationsInput | boolean
    notifyNewPosts?: BoolFieldUpdateOperationsInput | boolean
    notifySubscriptions?: BoolFieldUpdateOperationsInput | boolean
    showActivity?: BoolFieldUpdateOperationsInput | boolean
    allowMessages?: BoolFieldUpdateOperationsInput | boolean
    showOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    theme?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSettingsNestedInput
  }

  export type UserSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    notifyComments?: BoolFieldUpdateOperationsInput | boolean
    notifyLikes?: BoolFieldUpdateOperationsInput | boolean
    notifyNewPosts?: BoolFieldUpdateOperationsInput | boolean
    notifySubscriptions?: BoolFieldUpdateOperationsInput | boolean
    showActivity?: BoolFieldUpdateOperationsInput | boolean
    allowMessages?: BoolFieldUpdateOperationsInput | boolean
    showOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    theme?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsCreateManyInput = {
    id?: string
    userId: string
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    notifyComments?: BoolFieldUpdateOperationsInput | boolean
    notifyLikes?: BoolFieldUpdateOperationsInput | boolean
    notifyNewPosts?: BoolFieldUpdateOperationsInput | boolean
    notifySubscriptions?: BoolFieldUpdateOperationsInput | boolean
    showActivity?: BoolFieldUpdateOperationsInput | boolean
    allowMessages?: BoolFieldUpdateOperationsInput | boolean
    showOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    theme?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    notifyComments?: BoolFieldUpdateOperationsInput | boolean
    notifyLikes?: BoolFieldUpdateOperationsInput | boolean
    notifyNewPosts?: BoolFieldUpdateOperationsInput | boolean
    notifySubscriptions?: BoolFieldUpdateOperationsInput | boolean
    showActivity?: BoolFieldUpdateOperationsInput | boolean
    allowMessages?: BoolFieldUpdateOperationsInput | boolean
    showOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    theme?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreatorTierSettingsCreateInput = {
    id?: string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    creator: UserCreateNestedOneWithoutTierSettingsInput
  }

  export type CreatorTierSettingsUncheckedCreateInput = {
    id?: string
    creatorId: string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CreatorTierSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutTierSettingsNestedInput
  }

  export type CreatorTierSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreatorTierSettingsCreateManyInput = {
    id?: string
    creatorId: string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CreatorTierSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreatorTierSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    userId: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    userId: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionDepositCreateInput = {
    id?: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
    post: PostCreateNestedOneWithoutAuctionDepositsInput
    user: UserCreateNestedOneWithoutAuctionDepositsInput
  }

  export type AuctionDepositUncheckedCreateInput = {
    id?: string
    postId: string
    userId: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
  }

  export type AuctionDepositUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: PostUpdateOneRequiredWithoutAuctionDepositsNestedInput
    user?: UserUpdateOneRequiredWithoutAuctionDepositsNestedInput
  }

  export type AuctionDepositUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionDepositCreateManyInput = {
    id?: string
    postId: string
    userId: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
  }

  export type AuctionDepositUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionDepositUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionBidCreateInput = {
    id?: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutAuctionBidsInput
    user: UserCreateNestedOneWithoutAuctionBidsInput
  }

  export type AuctionBidUncheckedCreateInput = {
    id?: string
    postId: string
    userId: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
  }

  export type AuctionBidUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutAuctionBidsNestedInput
    user?: UserUpdateOneRequiredWithoutAuctionBidsNestedInput
  }

  export type AuctionBidUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionBidCreateManyInput = {
    id?: string
    postId: string
    userId: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
  }

  export type AuctionBidUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionBidUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionPaymentCreateInput = {
    id?: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutAuctionPaymentInput
    user: UserCreateNestedOneWithoutAuctionPaymentsInput
  }

  export type AuctionPaymentUncheckedCreateInput = {
    id?: string
    postId: string
    userId: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AuctionPaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutAuctionPaymentNestedInput
    user?: UserUpdateOneRequiredWithoutAuctionPaymentsNestedInput
  }

  export type AuctionPaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionPaymentCreateManyInput = {
    id?: string
    postId: string
    userId: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AuctionPaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionPaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleCreateInput = {
    id?: string
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    creator?: UserCreateNestedOneWithoutFlashSalesInput
    post?: PostCreateNestedOneWithoutFlashSalesInput
    redemptions?: FlashSaleRedemptionCreateNestedManyWithoutFlashSaleInput
  }

  export type FlashSaleUncheckedCreateInput = {
    id?: string
    creatorId?: string | null
    postId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    redemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutFlashSaleInput
  }

  export type FlashSaleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneWithoutFlashSalesNestedInput
    post?: PostUpdateOneWithoutFlashSalesNestedInput
    redemptions?: FlashSaleRedemptionUpdateManyWithoutFlashSaleNestedInput
  }

  export type FlashSaleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    redemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutFlashSaleNestedInput
  }

  export type FlashSaleCreateManyInput = {
    id?: string
    creatorId?: string | null
    postId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FlashSaleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionCreateInput = {
    id?: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
    flashSale: FlashSaleCreateNestedOneWithoutRedemptionsInput
    user: UserCreateNestedOneWithoutFlashSaleRedemptionsInput
  }

  export type FlashSaleRedemptionUncheckedCreateInput = {
    id?: string
    flashSaleId: string
    userId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
  }

  export type FlashSaleRedemptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    flashSale?: FlashSaleUpdateOneRequiredWithoutRedemptionsNestedInput
    user?: UserUpdateOneRequiredWithoutFlashSaleRedemptionsNestedInput
  }

  export type FlashSaleRedemptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    flashSaleId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionCreateManyInput = {
    id?: string
    flashSaleId: string
    userId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
  }

  export type FlashSaleRedemptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    flashSaleId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationCreateInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    participants?: UserCreateNestedManyWithoutConversationsInput
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    participants?: UserUncheckedCreateNestedManyWithoutConversationsInput
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    participants?: UserUpdateManyWithoutConversationsNestedInput
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    participants?: UserUncheckedUpdateManyWithoutConversationsNestedInput
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationCreateManyInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConversationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    id?: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    sender: UserCreateNestedOneWithoutSentMessagesInput
    purchases?: MessagePurchaseCreateNestedManyWithoutMessageInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    conversationId: string
    senderId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    purchases?: MessagePurchaseUncheckedCreateNestedManyWithoutMessageInput
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    purchases?: MessagePurchaseUpdateManyWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchases?: MessagePurchaseUncheckedUpdateManyWithoutMessageNestedInput
  }

  export type MessageCreateManyInput = {
    id?: string
    conversationId: string
    senderId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseCreateInput = {
    id?: string
    amount: number
    txSignature: string
    createdAt?: Date | string
    message: MessageCreateNestedOneWithoutPurchasesInput
    user: UserCreateNestedOneWithoutMessagePurchasesInput
  }

  export type MessagePurchaseUncheckedCreateInput = {
    id?: string
    messageId: string
    userId: string
    amount: number
    txSignature: string
    createdAt?: Date | string
  }

  export type MessagePurchaseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: MessageUpdateOneRequiredWithoutPurchasesNestedInput
    user?: UserUpdateOneRequiredWithoutMessagePurchasesNestedInput
  }

  export type MessagePurchaseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    messageId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseCreateManyInput = {
    id?: string
    messageId: string
    userId: string
    amount: number
    txSignature: string
    createdAt?: Date | string
  }

  export type MessagePurchaseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    messageId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type CommentListRelationFilter = {
    every?: CommentWhereInput
    some?: CommentWhereInput
    none?: CommentWhereInput
  }

  export type FollowListRelationFilter = {
    every?: FollowWhereInput
    some?: FollowWhereInput
    none?: FollowWhereInput
  }

  export type LikeListRelationFilter = {
    every?: LikeWhereInput
    some?: LikeWhereInput
    none?: LikeWhereInput
  }

  export type PostListRelationFilter = {
    every?: PostWhereInput
    some?: PostWhereInput
    none?: PostWhereInput
  }

  export type SubscriptionListRelationFilter = {
    every?: SubscriptionWhereInput
    some?: SubscriptionWhereInput
    none?: SubscriptionWhereInput
  }

  export type PostPurchaseListRelationFilter = {
    every?: PostPurchaseWhereInput
    some?: PostPurchaseWhereInput
    none?: PostPurchaseWhereInput
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type UserSettingsNullableRelationFilter = {
    is?: UserSettingsWhereInput | null
    isNot?: UserSettingsWhereInput | null
  }

  export type CreatorTierSettingsNullableRelationFilter = {
    is?: CreatorTierSettingsWhereInput | null
    isNot?: CreatorTierSettingsWhereInput | null
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type AuctionDepositListRelationFilter = {
    every?: AuctionDepositWhereInput
    some?: AuctionDepositWhereInput
    none?: AuctionDepositWhereInput
  }

  export type AuctionBidListRelationFilter = {
    every?: AuctionBidWhereInput
    some?: AuctionBidWhereInput
    none?: AuctionBidWhereInput
  }

  export type AuctionPaymentListRelationFilter = {
    every?: AuctionPaymentWhereInput
    some?: AuctionPaymentWhereInput
    none?: AuctionPaymentWhereInput
  }

  export type FlashSaleListRelationFilter = {
    every?: FlashSaleWhereInput
    some?: FlashSaleWhereInput
    none?: FlashSaleWhereInput
  }

  export type FlashSaleRedemptionListRelationFilter = {
    every?: FlashSaleRedemptionWhereInput
    some?: FlashSaleRedemptionWhereInput
    none?: FlashSaleRedemptionWhereInput
  }

  export type ConversationListRelationFilter = {
    every?: ConversationWhereInput
    some?: ConversationWhereInput
    none?: ConversationWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type MessagePurchaseListRelationFilter = {
    every?: MessagePurchaseWhereInput
    some?: MessagePurchaseWhereInput
    none?: MessagePurchaseWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FollowOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LikeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostPurchaseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuctionDepositOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuctionBidOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuctionPaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FlashSaleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FlashSaleRedemptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConversationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessagePurchaseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    name?: SortOrder
    image?: SortOrder
    nickname?: SortOrder
    fullName?: SortOrder
    bio?: SortOrder
    avatar?: SortOrder
    backgroundImage?: SortOrder
    website?: SortOrder
    twitter?: SortOrder
    telegram?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    isCreator?: SortOrder
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
    wallet?: SortOrder
    solanaWallet?: SortOrder
    referrerId?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    name?: SortOrder
    image?: SortOrder
    nickname?: SortOrder
    fullName?: SortOrder
    bio?: SortOrder
    avatar?: SortOrder
    backgroundImage?: SortOrder
    website?: SortOrder
    twitter?: SortOrder
    telegram?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    isCreator?: SortOrder
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
    wallet?: SortOrder
    solanaWallet?: SortOrder
    referrerId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    name?: SortOrder
    image?: SortOrder
    nickname?: SortOrder
    fullName?: SortOrder
    bio?: SortOrder
    avatar?: SortOrder
    backgroundImage?: SortOrder
    website?: SortOrder
    twitter?: SortOrder
    telegram?: SortOrder
    location?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isVerified?: SortOrder
    isCreator?: SortOrder
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
    wallet?: SortOrder
    solanaWallet?: SortOrder
    referrerId?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    followersCount?: SortOrder
    followingCount?: SortOrder
    postsCount?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type EnumSellTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SellType | EnumSellTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSellTypeNullableFilter<$PrismaModel> | $Enums.SellType | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumAuctionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionStatus | EnumAuctionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionStatusFilter<$PrismaModel> | $Enums.AuctionStatus
  }

  export type PostTagListRelationFilter = {
    every?: PostTagWhereInput
    some?: PostTagWhereInput
    none?: PostTagWhereInput
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AuctionPaymentNullableRelationFilter = {
    is?: AuctionPaymentWhereInput | null
    isNot?: AuctionPaymentWhereInput | null
  }

  export type PostTagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostCountOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    category?: SortOrder
    thumbnail?: SortOrder
    mediaUrl?: SortOrder
    isLocked?: SortOrder
    isPremium?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    minSubscriptionTier?: SortOrder
    imageAspectRatio?: SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isSellable?: SortOrder
    sellType?: SortOrder
    quantity?: SortOrder
    auctionStartPrice?: SortOrder
    auctionStepPrice?: SortOrder
    auctionDepositAmount?: SortOrder
    auctionStartAt?: SortOrder
    auctionEndAt?: SortOrder
    auctionStatus?: SortOrder
    soldAt?: SortOrder
    soldToId?: SortOrder
    soldPrice?: SortOrder
    sellerConfirmedAt?: SortOrder
  }

  export type PostAvgOrderByAggregateInput = {
    price?: SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    quantity?: SortOrder
    auctionStartPrice?: SortOrder
    auctionStepPrice?: SortOrder
    auctionDepositAmount?: SortOrder
    soldPrice?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    category?: SortOrder
    thumbnail?: SortOrder
    mediaUrl?: SortOrder
    isLocked?: SortOrder
    isPremium?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    minSubscriptionTier?: SortOrder
    imageAspectRatio?: SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isSellable?: SortOrder
    sellType?: SortOrder
    quantity?: SortOrder
    auctionStartPrice?: SortOrder
    auctionStepPrice?: SortOrder
    auctionDepositAmount?: SortOrder
    auctionStartAt?: SortOrder
    auctionEndAt?: SortOrder
    auctionStatus?: SortOrder
    soldAt?: SortOrder
    soldToId?: SortOrder
    soldPrice?: SortOrder
    sellerConfirmedAt?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    category?: SortOrder
    thumbnail?: SortOrder
    mediaUrl?: SortOrder
    isLocked?: SortOrder
    isPremium?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    minSubscriptionTier?: SortOrder
    imageAspectRatio?: SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isSellable?: SortOrder
    sellType?: SortOrder
    quantity?: SortOrder
    auctionStartPrice?: SortOrder
    auctionStepPrice?: SortOrder
    auctionDepositAmount?: SortOrder
    auctionStartAt?: SortOrder
    auctionEndAt?: SortOrder
    auctionStatus?: SortOrder
    soldAt?: SortOrder
    soldToId?: SortOrder
    soldPrice?: SortOrder
    sellerConfirmedAt?: SortOrder
  }

  export type PostSumOrderByAggregateInput = {
    price?: SortOrder
    likesCount?: SortOrder
    commentsCount?: SortOrder
    viewsCount?: SortOrder
    quantity?: SortOrder
    auctionStartPrice?: SortOrder
    auctionStepPrice?: SortOrder
    auctionDepositAmount?: SortOrder
    soldPrice?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumSellTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SellType | EnumSellTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSellTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.SellType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSellTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumSellTypeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumAuctionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionStatus | EnumAuctionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuctionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuctionStatusFilter<$PrismaModel>
    _max?: NestedEnumAuctionStatusFilter<$PrismaModel>
  }

  export type TagCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TagMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TagMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type PostRelationFilter = {
    is?: PostWhereInput
    isNot?: PostWhereInput
  }

  export type TagRelationFilter = {
    is?: TagWhereInput
    isNot?: TagWhereInput
  }

  export type PostTagPostIdTagIdCompoundUniqueInput = {
    postId: string
    tagId: string
  }

  export type PostTagCountOrderByAggregateInput = {
    postId?: SortOrder
    tagId?: SortOrder
  }

  export type PostTagMaxOrderByAggregateInput = {
    postId?: SortOrder
    tagId?: SortOrder
  }

  export type PostTagMinOrderByAggregateInput = {
    postId?: SortOrder
    tagId?: SortOrder
  }

  export type CommentNullableRelationFilter = {
    is?: CommentWhereInput | null
    isNot?: CommentWhereInput | null
  }

  export type CommentCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isAnonymous?: SortOrder
    likesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parentId?: SortOrder
  }

  export type CommentAvgOrderByAggregateInput = {
    likesCount?: SortOrder
  }

  export type CommentMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isAnonymous?: SortOrder
    likesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parentId?: SortOrder
  }

  export type CommentMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    content?: SortOrder
    isAnonymous?: SortOrder
    likesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parentId?: SortOrder
  }

  export type CommentSumOrderByAggregateInput = {
    likesCount?: SortOrder
  }

  export type PostNullableRelationFilter = {
    is?: PostWhereInput | null
    isNot?: PostWhereInput | null
  }

  export type LikeUserIdPostIdCompoundUniqueInput = {
    userId: string
    postId: string
  }

  export type LikeUserIdCommentIdCompoundUniqueInput = {
    userId: string
    commentId: string
  }

  export type LikeCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    commentId?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    commentId?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    commentId?: SortOrder
    createdAt?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type TransactionListRelationFilter = {
    every?: TransactionWhereInput
    some?: TransactionWhereInput
    none?: TransactionWhereInput
  }

  export type TransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionUserIdCreatorIdCompoundUniqueInput = {
    userId: string
    creatorId: string
  }

  export type SubscriptionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    creatorId?: SortOrder
    plan?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    subscribedAt?: SortOrder
    validUntil?: SortOrder
    isActive?: SortOrder
    txSignature?: SortOrder
    paymentStatus?: SortOrder
    paymentAmount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type SubscriptionAvgOrderByAggregateInput = {
    price?: SortOrder
    paymentAmount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type SubscriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    creatorId?: SortOrder
    plan?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    subscribedAt?: SortOrder
    validUntil?: SortOrder
    isActive?: SortOrder
    txSignature?: SortOrder
    paymentStatus?: SortOrder
    paymentAmount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type SubscriptionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    creatorId?: SortOrder
    plan?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    subscribedAt?: SortOrder
    validUntil?: SortOrder
    isActive?: SortOrder
    txSignature?: SortOrder
    paymentStatus?: SortOrder
    paymentAmount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type SubscriptionSumOrderByAggregateInput = {
    price?: SortOrder
    paymentAmount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type FollowFollowerIdFollowingIdCompoundUniqueInput = {
    followerId: string
    followingId: string
  }

  export type FollowCountOrderByAggregateInput = {
    id?: SortOrder
    followerId?: SortOrder
    followingId?: SortOrder
    createdAt?: SortOrder
  }

  export type FollowMaxOrderByAggregateInput = {
    id?: SortOrder
    followerId?: SortOrder
    followingId?: SortOrder
    createdAt?: SortOrder
  }

  export type FollowMinOrderByAggregateInput = {
    id?: SortOrder
    followerId?: SortOrder
    followingId?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeFilter<$PrismaModel> | $Enums.TransactionType
  }

  export type EnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type SubscriptionNullableRelationFilter = {
    is?: SubscriptionWhereInput | null
    isNot?: SubscriptionWhereInput | null
  }

  export type PostPurchaseNullableRelationFilter = {
    is?: PostPurchaseWhereInput | null
    isNot?: PostPurchaseWhereInput | null
  }

  export type TransactionCountOrderByAggregateInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    postPurchaseId?: SortOrder
    txSignature?: SortOrder
    fromWallet?: SortOrder
    toWallet?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    referrerWallet?: SortOrder
    metadata?: SortOrder
    errorMessage?: SortOrder
    confirmedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransactionAvgOrderByAggregateInput = {
    amount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
  }

  export type TransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    postPurchaseId?: SortOrder
    txSignature?: SortOrder
    fromWallet?: SortOrder
    toWallet?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    referrerWallet?: SortOrder
    errorMessage?: SortOrder
    confirmedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransactionMinOrderByAggregateInput = {
    id?: SortOrder
    subscriptionId?: SortOrder
    postPurchaseId?: SortOrder
    txSignature?: SortOrder
    fromWallet?: SortOrder
    toWallet?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    type?: SortOrder
    status?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    referrerWallet?: SortOrder
    errorMessage?: SortOrder
    confirmedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TransactionSumOrderByAggregateInput = {
    amount?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
  }

  export type EnumTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransactionTypeFilter<$PrismaModel>
  }

  export type EnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refresh_token?: SortOrder
    access_token?: SortOrder
    expires_at?: SortOrder
    token_type?: SortOrder
    scope?: SortOrder
    id_token?: SortOrder
    session_state?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expires_at?: SortOrder
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type TransactionNullableRelationFilter = {
    is?: TransactionWhereInput | null
    isNot?: TransactionWhereInput | null
  }

  export type PostPurchaseUserIdPostIdCompoundUniqueInput = {
    userId: string
    postId: string
  }

  export type PostPurchaseCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    txSignature?: SortOrder
    purchasedAt?: SortOrder
    paymentStatus?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type PostPurchaseAvgOrderByAggregateInput = {
    price?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type PostPurchaseMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    txSignature?: SortOrder
    purchasedAt?: SortOrder
    paymentStatus?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type PostPurchaseMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    txSignature?: SortOrder
    purchasedAt?: SortOrder
    paymentStatus?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type PostPurchaseSumOrderByAggregateInput = {
    price?: SortOrder
    platformFee?: SortOrder
    referrerFee?: SortOrder
    creatorAmount?: SortOrder
  }

  export type UserSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    notifyComments?: SortOrder
    notifyLikes?: SortOrder
    notifyNewPosts?: SortOrder
    notifySubscriptions?: SortOrder
    showActivity?: SortOrder
    allowMessages?: SortOrder
    showOnlineStatus?: SortOrder
    theme?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    notifyComments?: SortOrder
    notifyLikes?: SortOrder
    notifyNewPosts?: SortOrder
    notifySubscriptions?: SortOrder
    showActivity?: SortOrder
    allowMessages?: SortOrder
    showOnlineStatus?: SortOrder
    theme?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    notifyComments?: SortOrder
    notifyLikes?: SortOrder
    notifyNewPosts?: SortOrder
    notifySubscriptions?: SortOrder
    showActivity?: SortOrder
    allowMessages?: SortOrder
    showOnlineStatus?: SortOrder
    theme?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CreatorTierSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    basicTier?: SortOrder
    premiumTier?: SortOrder
    vipTier?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CreatorTierSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CreatorTierSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    title?: SortOrder
    message?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type EnumDepositStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DepositStatus | EnumDepositStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepositStatusFilter<$PrismaModel> | $Enums.DepositStatus
  }

  export type AuctionDepositPostIdUserIdCompoundUniqueInput = {
    postId: string
    userId: string
  }

  export type AuctionDepositCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    refundedAt?: SortOrder
    refundTxSignature?: SortOrder
    forfeitedAt?: SortOrder
  }

  export type AuctionDepositAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type AuctionDepositMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    refundedAt?: SortOrder
    refundTxSignature?: SortOrder
    forfeitedAt?: SortOrder
  }

  export type AuctionDepositMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    refundedAt?: SortOrder
    refundTxSignature?: SortOrder
    forfeitedAt?: SortOrder
  }

  export type AuctionDepositSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumDepositStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DepositStatus | EnumDepositStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepositStatusWithAggregatesFilter<$PrismaModel> | $Enums.DepositStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDepositStatusFilter<$PrismaModel>
    _max?: NestedEnumDepositStatusFilter<$PrismaModel>
  }

  export type AuctionBidCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    isWinning?: SortOrder
    createdAt?: SortOrder
  }

  export type AuctionBidAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type AuctionBidMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    isWinning?: SortOrder
    createdAt?: SortOrder
  }

  export type AuctionBidMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    isWinning?: SortOrder
    createdAt?: SortOrder
  }

  export type AuctionBidSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumAuctionPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionPaymentStatus | EnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionPaymentStatusFilter<$PrismaModel> | $Enums.AuctionPaymentStatus
  }

  export type AuctionPaymentCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    dueAt?: SortOrder
    paidAt?: SortOrder
    sellerConfirmedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type AuctionPaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type AuctionPaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    dueAt?: SortOrder
    paidAt?: SortOrder
    sellerConfirmedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type AuctionPaymentMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    status?: SortOrder
    dueAt?: SortOrder
    paidAt?: SortOrder
    sellerConfirmedAt?: SortOrder
    createdAt?: SortOrder
  }

  export type AuctionPaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumAuctionPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionPaymentStatus | EnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuctionPaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuctionPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumAuctionPaymentStatusFilter<$PrismaModel>
  }

  export type FlashSaleCountOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    postId?: SortOrder
    subscriptionPlan?: SortOrder
    discount?: SortOrder
    maxRedemptions?: SortOrder
    usedCount?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FlashSaleAvgOrderByAggregateInput = {
    discount?: SortOrder
    maxRedemptions?: SortOrder
    usedCount?: SortOrder
  }

  export type FlashSaleMaxOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    postId?: SortOrder
    subscriptionPlan?: SortOrder
    discount?: SortOrder
    maxRedemptions?: SortOrder
    usedCount?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FlashSaleMinOrderByAggregateInput = {
    id?: SortOrder
    creatorId?: SortOrder
    postId?: SortOrder
    subscriptionPlan?: SortOrder
    discount?: SortOrder
    maxRedemptions?: SortOrder
    usedCount?: SortOrder
    startAt?: SortOrder
    endAt?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FlashSaleSumOrderByAggregateInput = {
    discount?: SortOrder
    maxRedemptions?: SortOrder
    usedCount?: SortOrder
  }

  export type FlashSaleRelationFilter = {
    is?: FlashSaleWhereInput
    isNot?: FlashSaleWhereInput
  }

  export type FlashSaleRedemptionFlashSaleIdUserIdCompoundUniqueInput = {
    flashSaleId: string
    userId: string
  }

  export type FlashSaleRedemptionCountOrderByAggregateInput = {
    id?: SortOrder
    flashSaleId?: SortOrder
    userId?: SortOrder
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
    redeemedAt?: SortOrder
  }

  export type FlashSaleRedemptionAvgOrderByAggregateInput = {
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
  }

  export type FlashSaleRedemptionMaxOrderByAggregateInput = {
    id?: SortOrder
    flashSaleId?: SortOrder
    userId?: SortOrder
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
    redeemedAt?: SortOrder
  }

  export type FlashSaleRedemptionMinOrderByAggregateInput = {
    id?: SortOrder
    flashSaleId?: SortOrder
    userId?: SortOrder
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
    redeemedAt?: SortOrder
  }

  export type FlashSaleRedemptionSumOrderByAggregateInput = {
    originalPrice?: SortOrder
    discountAmount?: SortOrder
    finalPrice?: SortOrder
  }

  export type ConversationCountOrderByAggregateInput = {
    id?: SortOrder
    lastMessageAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConversationMaxOrderByAggregateInput = {
    id?: SortOrder
    lastMessageAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConversationMinOrderByAggregateInput = {
    id?: SortOrder
    lastMessageAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConversationRelationFilter = {
    is?: ConversationWhereInput
    isNot?: ConversationWhereInput
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    mediaUrl?: SortOrder
    mediaType?: SortOrder
    isPaid?: SortOrder
    price?: SortOrder
    isRead?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    mediaUrl?: SortOrder
    mediaType?: SortOrder
    isPaid?: SortOrder
    price?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    conversationId?: SortOrder
    senderId?: SortOrder
    content?: SortOrder
    mediaUrl?: SortOrder
    mediaType?: SortOrder
    isPaid?: SortOrder
    price?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageSumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type MessageRelationFilter = {
    is?: MessageWhereInput
    isNot?: MessageWhereInput
  }

  export type MessagePurchaseMessageIdUserIdCompoundUniqueInput = {
    messageId: string
    userId: string
  }

  export type MessagePurchaseCountOrderByAggregateInput = {
    id?: SortOrder
    messageId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    createdAt?: SortOrder
  }

  export type MessagePurchaseAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type MessagePurchaseMaxOrderByAggregateInput = {
    id?: SortOrder
    messageId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    createdAt?: SortOrder
  }

  export type MessagePurchaseMinOrderByAggregateInput = {
    id?: SortOrder
    messageId?: SortOrder
    userId?: SortOrder
    amount?: SortOrder
    txSignature?: SortOrder
    createdAt?: SortOrder
  }

  export type MessagePurchaseSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type CommentCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type FollowCreateNestedManyWithoutFollowerInput = {
    create?: XOR<FollowCreateWithoutFollowerInput, FollowUncheckedCreateWithoutFollowerInput> | FollowCreateWithoutFollowerInput[] | FollowUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowerInput | FollowCreateOrConnectWithoutFollowerInput[]
    createMany?: FollowCreateManyFollowerInputEnvelope
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
  }

  export type FollowCreateNestedManyWithoutFollowingInput = {
    create?: XOR<FollowCreateWithoutFollowingInput, FollowUncheckedCreateWithoutFollowingInput> | FollowCreateWithoutFollowingInput[] | FollowUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowingInput | FollowCreateOrConnectWithoutFollowingInput[]
    createMany?: FollowCreateManyFollowingInputEnvelope
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
  }

  export type LikeCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type PostCreateNestedManyWithoutCreatorInput = {
    create?: XOR<PostCreateWithoutCreatorInput, PostUncheckedCreateWithoutCreatorInput> | PostCreateWithoutCreatorInput[] | PostUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCreatorInput | PostCreateOrConnectWithoutCreatorInput[]
    createMany?: PostCreateManyCreatorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type SubscriptionCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type SubscriptionCreateNestedManyWithoutCreatorInput = {
    create?: XOR<SubscriptionCreateWithoutCreatorInput, SubscriptionUncheckedCreateWithoutCreatorInput> | SubscriptionCreateWithoutCreatorInput[] | SubscriptionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCreatorInput | SubscriptionCreateOrConnectWithoutCreatorInput[]
    createMany?: SubscriptionCreateManyCreatorInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type PostPurchaseCreateNestedManyWithoutUserInput = {
    create?: XOR<PostPurchaseCreateWithoutUserInput, PostPurchaseUncheckedCreateWithoutUserInput> | PostPurchaseCreateWithoutUserInput[] | PostPurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutUserInput | PostPurchaseCreateOrConnectWithoutUserInput[]
    createMany?: PostPurchaseCreateManyUserInputEnvelope
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutReferralsInput = {
    create?: XOR<UserCreateWithoutReferralsInput, UserUncheckedCreateWithoutReferralsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReferralsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutReferrerInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserSettingsCreateNestedOneWithoutUserInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    connect?: UserSettingsWhereUniqueInput
  }

  export type CreatorTierSettingsCreateNestedOneWithoutCreatorInput = {
    create?: XOR<CreatorTierSettingsCreateWithoutCreatorInput, CreatorTierSettingsUncheckedCreateWithoutCreatorInput>
    connectOrCreate?: CreatorTierSettingsCreateOrConnectWithoutCreatorInput
    connect?: CreatorTierSettingsWhereUniqueInput
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PostCreateNestedManyWithoutSoldToInput = {
    create?: XOR<PostCreateWithoutSoldToInput, PostUncheckedCreateWithoutSoldToInput> | PostCreateWithoutSoldToInput[] | PostUncheckedCreateWithoutSoldToInput[]
    connectOrCreate?: PostCreateOrConnectWithoutSoldToInput | PostCreateOrConnectWithoutSoldToInput[]
    createMany?: PostCreateManySoldToInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type AuctionDepositCreateNestedManyWithoutUserInput = {
    create?: XOR<AuctionDepositCreateWithoutUserInput, AuctionDepositUncheckedCreateWithoutUserInput> | AuctionDepositCreateWithoutUserInput[] | AuctionDepositUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutUserInput | AuctionDepositCreateOrConnectWithoutUserInput[]
    createMany?: AuctionDepositCreateManyUserInputEnvelope
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
  }

  export type AuctionBidCreateNestedManyWithoutUserInput = {
    create?: XOR<AuctionBidCreateWithoutUserInput, AuctionBidUncheckedCreateWithoutUserInput> | AuctionBidCreateWithoutUserInput[] | AuctionBidUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutUserInput | AuctionBidCreateOrConnectWithoutUserInput[]
    createMany?: AuctionBidCreateManyUserInputEnvelope
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
  }

  export type AuctionPaymentCreateNestedManyWithoutUserInput = {
    create?: XOR<AuctionPaymentCreateWithoutUserInput, AuctionPaymentUncheckedCreateWithoutUserInput> | AuctionPaymentCreateWithoutUserInput[] | AuctionPaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutUserInput | AuctionPaymentCreateOrConnectWithoutUserInput[]
    createMany?: AuctionPaymentCreateManyUserInputEnvelope
    connect?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
  }

  export type FlashSaleCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FlashSaleCreateWithoutCreatorInput, FlashSaleUncheckedCreateWithoutCreatorInput> | FlashSaleCreateWithoutCreatorInput[] | FlashSaleUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutCreatorInput | FlashSaleCreateOrConnectWithoutCreatorInput[]
    createMany?: FlashSaleCreateManyCreatorInputEnvelope
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
  }

  export type FlashSaleRedemptionCreateNestedManyWithoutUserInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutUserInput, FlashSaleRedemptionUncheckedCreateWithoutUserInput> | FlashSaleRedemptionCreateWithoutUserInput[] | FlashSaleRedemptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutUserInput | FlashSaleRedemptionCreateOrConnectWithoutUserInput[]
    createMany?: FlashSaleRedemptionCreateManyUserInputEnvelope
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
  }

  export type ConversationCreateNestedManyWithoutParticipantsInput = {
    create?: XOR<ConversationCreateWithoutParticipantsInput, ConversationUncheckedCreateWithoutParticipantsInput> | ConversationCreateWithoutParticipantsInput[] | ConversationUncheckedCreateWithoutParticipantsInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutParticipantsInput | ConversationCreateOrConnectWithoutParticipantsInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessagePurchaseCreateNestedManyWithoutUserInput = {
    create?: XOR<MessagePurchaseCreateWithoutUserInput, MessagePurchaseUncheckedCreateWithoutUserInput> | MessagePurchaseCreateWithoutUserInput[] | MessagePurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutUserInput | MessagePurchaseCreateOrConnectWithoutUserInput[]
    createMany?: MessagePurchaseCreateManyUserInputEnvelope
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type FollowUncheckedCreateNestedManyWithoutFollowerInput = {
    create?: XOR<FollowCreateWithoutFollowerInput, FollowUncheckedCreateWithoutFollowerInput> | FollowCreateWithoutFollowerInput[] | FollowUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowerInput | FollowCreateOrConnectWithoutFollowerInput[]
    createMany?: FollowCreateManyFollowerInputEnvelope
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
  }

  export type FollowUncheckedCreateNestedManyWithoutFollowingInput = {
    create?: XOR<FollowCreateWithoutFollowingInput, FollowUncheckedCreateWithoutFollowingInput> | FollowCreateWithoutFollowingInput[] | FollowUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowingInput | FollowCreateOrConnectWithoutFollowingInput[]
    createMany?: FollowCreateManyFollowingInputEnvelope
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
  }

  export type LikeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<PostCreateWithoutCreatorInput, PostUncheckedCreateWithoutCreatorInput> | PostCreateWithoutCreatorInput[] | PostUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCreatorInput | PostCreateOrConnectWithoutCreatorInput[]
    createMany?: PostCreateManyCreatorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type SubscriptionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type SubscriptionUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<SubscriptionCreateWithoutCreatorInput, SubscriptionUncheckedCreateWithoutCreatorInput> | SubscriptionCreateWithoutCreatorInput[] | SubscriptionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCreatorInput | SubscriptionCreateOrConnectWithoutCreatorInput[]
    createMany?: SubscriptionCreateManyCreatorInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type PostPurchaseUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PostPurchaseCreateWithoutUserInput, PostPurchaseUncheckedCreateWithoutUserInput> | PostPurchaseCreateWithoutUserInput[] | PostPurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutUserInput | PostPurchaseCreateOrConnectWithoutUserInput[]
    createMany?: PostPurchaseCreateManyUserInputEnvelope
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutReferrerInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserSettingsUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    connect?: UserSettingsWhereUniqueInput
  }

  export type CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput = {
    create?: XOR<CreatorTierSettingsCreateWithoutCreatorInput, CreatorTierSettingsUncheckedCreateWithoutCreatorInput>
    connectOrCreate?: CreatorTierSettingsCreateOrConnectWithoutCreatorInput
    connect?: CreatorTierSettingsWhereUniqueInput
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutSoldToInput = {
    create?: XOR<PostCreateWithoutSoldToInput, PostUncheckedCreateWithoutSoldToInput> | PostCreateWithoutSoldToInput[] | PostUncheckedCreateWithoutSoldToInput[]
    connectOrCreate?: PostCreateOrConnectWithoutSoldToInput | PostCreateOrConnectWithoutSoldToInput[]
    createMany?: PostCreateManySoldToInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type AuctionDepositUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AuctionDepositCreateWithoutUserInput, AuctionDepositUncheckedCreateWithoutUserInput> | AuctionDepositCreateWithoutUserInput[] | AuctionDepositUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutUserInput | AuctionDepositCreateOrConnectWithoutUserInput[]
    createMany?: AuctionDepositCreateManyUserInputEnvelope
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
  }

  export type AuctionBidUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AuctionBidCreateWithoutUserInput, AuctionBidUncheckedCreateWithoutUserInput> | AuctionBidCreateWithoutUserInput[] | AuctionBidUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutUserInput | AuctionBidCreateOrConnectWithoutUserInput[]
    createMany?: AuctionBidCreateManyUserInputEnvelope
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
  }

  export type AuctionPaymentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AuctionPaymentCreateWithoutUserInput, AuctionPaymentUncheckedCreateWithoutUserInput> | AuctionPaymentCreateWithoutUserInput[] | AuctionPaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutUserInput | AuctionPaymentCreateOrConnectWithoutUserInput[]
    createMany?: AuctionPaymentCreateManyUserInputEnvelope
    connect?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
  }

  export type FlashSaleUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<FlashSaleCreateWithoutCreatorInput, FlashSaleUncheckedCreateWithoutCreatorInput> | FlashSaleCreateWithoutCreatorInput[] | FlashSaleUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutCreatorInput | FlashSaleCreateOrConnectWithoutCreatorInput[]
    createMany?: FlashSaleCreateManyCreatorInputEnvelope
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
  }

  export type FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutUserInput, FlashSaleRedemptionUncheckedCreateWithoutUserInput> | FlashSaleRedemptionCreateWithoutUserInput[] | FlashSaleRedemptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutUserInput | FlashSaleRedemptionCreateOrConnectWithoutUserInput[]
    createMany?: FlashSaleRedemptionCreateManyUserInputEnvelope
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
  }

  export type ConversationUncheckedCreateNestedManyWithoutParticipantsInput = {
    create?: XOR<ConversationCreateWithoutParticipantsInput, ConversationUncheckedCreateWithoutParticipantsInput> | ConversationCreateWithoutParticipantsInput[] | ConversationUncheckedCreateWithoutParticipantsInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutParticipantsInput | ConversationCreateOrConnectWithoutParticipantsInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessagePurchaseUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MessagePurchaseCreateWithoutUserInput, MessagePurchaseUncheckedCreateWithoutUserInput> | MessagePurchaseCreateWithoutUserInput[] | MessagePurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutUserInput | MessagePurchaseCreateOrConnectWithoutUserInput[]
    createMany?: MessagePurchaseCreateManyUserInputEnvelope
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CommentUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutUserInput | CommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutUserInput | CommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutUserInput | CommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type FollowUpdateManyWithoutFollowerNestedInput = {
    create?: XOR<FollowCreateWithoutFollowerInput, FollowUncheckedCreateWithoutFollowerInput> | FollowCreateWithoutFollowerInput[] | FollowUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowerInput | FollowCreateOrConnectWithoutFollowerInput[]
    upsert?: FollowUpsertWithWhereUniqueWithoutFollowerInput | FollowUpsertWithWhereUniqueWithoutFollowerInput[]
    createMany?: FollowCreateManyFollowerInputEnvelope
    set?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    disconnect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    delete?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    update?: FollowUpdateWithWhereUniqueWithoutFollowerInput | FollowUpdateWithWhereUniqueWithoutFollowerInput[]
    updateMany?: FollowUpdateManyWithWhereWithoutFollowerInput | FollowUpdateManyWithWhereWithoutFollowerInput[]
    deleteMany?: FollowScalarWhereInput | FollowScalarWhereInput[]
  }

  export type FollowUpdateManyWithoutFollowingNestedInput = {
    create?: XOR<FollowCreateWithoutFollowingInput, FollowUncheckedCreateWithoutFollowingInput> | FollowCreateWithoutFollowingInput[] | FollowUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowingInput | FollowCreateOrConnectWithoutFollowingInput[]
    upsert?: FollowUpsertWithWhereUniqueWithoutFollowingInput | FollowUpsertWithWhereUniqueWithoutFollowingInput[]
    createMany?: FollowCreateManyFollowingInputEnvelope
    set?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    disconnect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    delete?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    update?: FollowUpdateWithWhereUniqueWithoutFollowingInput | FollowUpdateWithWhereUniqueWithoutFollowingInput[]
    updateMany?: FollowUpdateManyWithWhereWithoutFollowingInput | FollowUpdateManyWithWhereWithoutFollowingInput[]
    deleteMany?: FollowScalarWhereInput | FollowScalarWhereInput[]
  }

  export type LikeUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type PostUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<PostCreateWithoutCreatorInput, PostUncheckedCreateWithoutCreatorInput> | PostCreateWithoutCreatorInput[] | PostUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCreatorInput | PostCreateOrConnectWithoutCreatorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutCreatorInput | PostUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: PostCreateManyCreatorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutCreatorInput | PostUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutCreatorInput | PostUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type SubscriptionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutUserInput | SubscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutUserInput | SubscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutUserInput | SubscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type SubscriptionUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<SubscriptionCreateWithoutCreatorInput, SubscriptionUncheckedCreateWithoutCreatorInput> | SubscriptionCreateWithoutCreatorInput[] | SubscriptionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCreatorInput | SubscriptionCreateOrConnectWithoutCreatorInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutCreatorInput | SubscriptionUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: SubscriptionCreateManyCreatorInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutCreatorInput | SubscriptionUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutCreatorInput | SubscriptionUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type PostPurchaseUpdateManyWithoutUserNestedInput = {
    create?: XOR<PostPurchaseCreateWithoutUserInput, PostPurchaseUncheckedCreateWithoutUserInput> | PostPurchaseCreateWithoutUserInput[] | PostPurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutUserInput | PostPurchaseCreateOrConnectWithoutUserInput[]
    upsert?: PostPurchaseUpsertWithWhereUniqueWithoutUserInput | PostPurchaseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PostPurchaseCreateManyUserInputEnvelope
    set?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    disconnect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    delete?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    update?: PostPurchaseUpdateWithWhereUniqueWithoutUserInput | PostPurchaseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PostPurchaseUpdateManyWithWhereWithoutUserInput | PostPurchaseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PostPurchaseScalarWhereInput | PostPurchaseScalarWhereInput[]
  }

  export type UserUpdateOneWithoutReferralsNestedInput = {
    create?: XOR<UserCreateWithoutReferralsInput, UserUncheckedCreateWithoutReferralsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReferralsInput
    upsert?: UserUpsertWithoutReferralsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReferralsInput, UserUpdateWithoutReferralsInput>, UserUncheckedUpdateWithoutReferralsInput>
  }

  export type UserUpdateManyWithoutReferrerNestedInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutReferrerInput | UserUpsertWithWhereUniqueWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutReferrerInput | UserUpdateWithWhereUniqueWithoutReferrerInput[]
    updateMany?: UserUpdateManyWithWhereWithoutReferrerInput | UserUpdateManyWithWhereWithoutReferrerInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserSettingsUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    upsert?: UserSettingsUpsertWithoutUserInput
    disconnect?: UserSettingsWhereInput | boolean
    delete?: UserSettingsWhereInput | boolean
    connect?: UserSettingsWhereUniqueInput
    update?: XOR<XOR<UserSettingsUpdateToOneWithWhereWithoutUserInput, UserSettingsUpdateWithoutUserInput>, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type CreatorTierSettingsUpdateOneWithoutCreatorNestedInput = {
    create?: XOR<CreatorTierSettingsCreateWithoutCreatorInput, CreatorTierSettingsUncheckedCreateWithoutCreatorInput>
    connectOrCreate?: CreatorTierSettingsCreateOrConnectWithoutCreatorInput
    upsert?: CreatorTierSettingsUpsertWithoutCreatorInput
    disconnect?: CreatorTierSettingsWhereInput | boolean
    delete?: CreatorTierSettingsWhereInput | boolean
    connect?: CreatorTierSettingsWhereUniqueInput
    update?: XOR<XOR<CreatorTierSettingsUpdateToOneWithWhereWithoutCreatorInput, CreatorTierSettingsUpdateWithoutCreatorInput>, CreatorTierSettingsUncheckedUpdateWithoutCreatorInput>
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PostUpdateManyWithoutSoldToNestedInput = {
    create?: XOR<PostCreateWithoutSoldToInput, PostUncheckedCreateWithoutSoldToInput> | PostCreateWithoutSoldToInput[] | PostUncheckedCreateWithoutSoldToInput[]
    connectOrCreate?: PostCreateOrConnectWithoutSoldToInput | PostCreateOrConnectWithoutSoldToInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutSoldToInput | PostUpsertWithWhereUniqueWithoutSoldToInput[]
    createMany?: PostCreateManySoldToInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutSoldToInput | PostUpdateWithWhereUniqueWithoutSoldToInput[]
    updateMany?: PostUpdateManyWithWhereWithoutSoldToInput | PostUpdateManyWithWhereWithoutSoldToInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type AuctionDepositUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuctionDepositCreateWithoutUserInput, AuctionDepositUncheckedCreateWithoutUserInput> | AuctionDepositCreateWithoutUserInput[] | AuctionDepositUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutUserInput | AuctionDepositCreateOrConnectWithoutUserInput[]
    upsert?: AuctionDepositUpsertWithWhereUniqueWithoutUserInput | AuctionDepositUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuctionDepositCreateManyUserInputEnvelope
    set?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    disconnect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    delete?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    update?: AuctionDepositUpdateWithWhereUniqueWithoutUserInput | AuctionDepositUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuctionDepositUpdateManyWithWhereWithoutUserInput | AuctionDepositUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuctionDepositScalarWhereInput | AuctionDepositScalarWhereInput[]
  }

  export type AuctionBidUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuctionBidCreateWithoutUserInput, AuctionBidUncheckedCreateWithoutUserInput> | AuctionBidCreateWithoutUserInput[] | AuctionBidUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutUserInput | AuctionBidCreateOrConnectWithoutUserInput[]
    upsert?: AuctionBidUpsertWithWhereUniqueWithoutUserInput | AuctionBidUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuctionBidCreateManyUserInputEnvelope
    set?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    disconnect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    delete?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    update?: AuctionBidUpdateWithWhereUniqueWithoutUserInput | AuctionBidUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuctionBidUpdateManyWithWhereWithoutUserInput | AuctionBidUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuctionBidScalarWhereInput | AuctionBidScalarWhereInput[]
  }

  export type AuctionPaymentUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuctionPaymentCreateWithoutUserInput, AuctionPaymentUncheckedCreateWithoutUserInput> | AuctionPaymentCreateWithoutUserInput[] | AuctionPaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutUserInput | AuctionPaymentCreateOrConnectWithoutUserInput[]
    upsert?: AuctionPaymentUpsertWithWhereUniqueWithoutUserInput | AuctionPaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuctionPaymentCreateManyUserInputEnvelope
    set?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    disconnect?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    delete?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    connect?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    update?: AuctionPaymentUpdateWithWhereUniqueWithoutUserInput | AuctionPaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuctionPaymentUpdateManyWithWhereWithoutUserInput | AuctionPaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuctionPaymentScalarWhereInput | AuctionPaymentScalarWhereInput[]
  }

  export type FlashSaleUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FlashSaleCreateWithoutCreatorInput, FlashSaleUncheckedCreateWithoutCreatorInput> | FlashSaleCreateWithoutCreatorInput[] | FlashSaleUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutCreatorInput | FlashSaleCreateOrConnectWithoutCreatorInput[]
    upsert?: FlashSaleUpsertWithWhereUniqueWithoutCreatorInput | FlashSaleUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FlashSaleCreateManyCreatorInputEnvelope
    set?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    disconnect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    delete?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    update?: FlashSaleUpdateWithWhereUniqueWithoutCreatorInput | FlashSaleUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FlashSaleUpdateManyWithWhereWithoutCreatorInput | FlashSaleUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FlashSaleScalarWhereInput | FlashSaleScalarWhereInput[]
  }

  export type FlashSaleRedemptionUpdateManyWithoutUserNestedInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutUserInput, FlashSaleRedemptionUncheckedCreateWithoutUserInput> | FlashSaleRedemptionCreateWithoutUserInput[] | FlashSaleRedemptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutUserInput | FlashSaleRedemptionCreateOrConnectWithoutUserInput[]
    upsert?: FlashSaleRedemptionUpsertWithWhereUniqueWithoutUserInput | FlashSaleRedemptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FlashSaleRedemptionCreateManyUserInputEnvelope
    set?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    disconnect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    delete?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    update?: FlashSaleRedemptionUpdateWithWhereUniqueWithoutUserInput | FlashSaleRedemptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FlashSaleRedemptionUpdateManyWithWhereWithoutUserInput | FlashSaleRedemptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FlashSaleRedemptionScalarWhereInput | FlashSaleRedemptionScalarWhereInput[]
  }

  export type ConversationUpdateManyWithoutParticipantsNestedInput = {
    create?: XOR<ConversationCreateWithoutParticipantsInput, ConversationUncheckedCreateWithoutParticipantsInput> | ConversationCreateWithoutParticipantsInput[] | ConversationUncheckedCreateWithoutParticipantsInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutParticipantsInput | ConversationCreateOrConnectWithoutParticipantsInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutParticipantsInput | ConversationUpsertWithWhereUniqueWithoutParticipantsInput[]
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutParticipantsInput | ConversationUpdateWithWhereUniqueWithoutParticipantsInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutParticipantsInput | ConversationUpdateManyWithWhereWithoutParticipantsInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessagePurchaseUpdateManyWithoutUserNestedInput = {
    create?: XOR<MessagePurchaseCreateWithoutUserInput, MessagePurchaseUncheckedCreateWithoutUserInput> | MessagePurchaseCreateWithoutUserInput[] | MessagePurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutUserInput | MessagePurchaseCreateOrConnectWithoutUserInput[]
    upsert?: MessagePurchaseUpsertWithWhereUniqueWithoutUserInput | MessagePurchaseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MessagePurchaseCreateManyUserInputEnvelope
    set?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    disconnect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    delete?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    update?: MessagePurchaseUpdateWithWhereUniqueWithoutUserInput | MessagePurchaseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MessagePurchaseUpdateManyWithWhereWithoutUserInput | MessagePurchaseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MessagePurchaseScalarWhereInput | MessagePurchaseScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput> | CommentCreateWithoutUserInput[] | CommentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutUserInput | CommentCreateOrConnectWithoutUserInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutUserInput | CommentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommentCreateManyUserInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutUserInput | CommentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutUserInput | CommentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type FollowUncheckedUpdateManyWithoutFollowerNestedInput = {
    create?: XOR<FollowCreateWithoutFollowerInput, FollowUncheckedCreateWithoutFollowerInput> | FollowCreateWithoutFollowerInput[] | FollowUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowerInput | FollowCreateOrConnectWithoutFollowerInput[]
    upsert?: FollowUpsertWithWhereUniqueWithoutFollowerInput | FollowUpsertWithWhereUniqueWithoutFollowerInput[]
    createMany?: FollowCreateManyFollowerInputEnvelope
    set?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    disconnect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    delete?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    update?: FollowUpdateWithWhereUniqueWithoutFollowerInput | FollowUpdateWithWhereUniqueWithoutFollowerInput[]
    updateMany?: FollowUpdateManyWithWhereWithoutFollowerInput | FollowUpdateManyWithWhereWithoutFollowerInput[]
    deleteMany?: FollowScalarWhereInput | FollowScalarWhereInput[]
  }

  export type FollowUncheckedUpdateManyWithoutFollowingNestedInput = {
    create?: XOR<FollowCreateWithoutFollowingInput, FollowUncheckedCreateWithoutFollowingInput> | FollowCreateWithoutFollowingInput[] | FollowUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: FollowCreateOrConnectWithoutFollowingInput | FollowCreateOrConnectWithoutFollowingInput[]
    upsert?: FollowUpsertWithWhereUniqueWithoutFollowingInput | FollowUpsertWithWhereUniqueWithoutFollowingInput[]
    createMany?: FollowCreateManyFollowingInputEnvelope
    set?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    disconnect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    delete?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    connect?: FollowWhereUniqueInput | FollowWhereUniqueInput[]
    update?: FollowUpdateWithWhereUniqueWithoutFollowingInput | FollowUpdateWithWhereUniqueWithoutFollowingInput[]
    updateMany?: FollowUpdateManyWithWhereWithoutFollowingInput | FollowUpdateManyWithWhereWithoutFollowingInput[]
    deleteMany?: FollowScalarWhereInput | FollowScalarWhereInput[]
  }

  export type LikeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<PostCreateWithoutCreatorInput, PostUncheckedCreateWithoutCreatorInput> | PostCreateWithoutCreatorInput[] | PostUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCreatorInput | PostCreateOrConnectWithoutCreatorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutCreatorInput | PostUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: PostCreateManyCreatorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutCreatorInput | PostUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutCreatorInput | PostUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type SubscriptionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutUserInput | SubscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutUserInput | SubscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutUserInput | SubscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<SubscriptionCreateWithoutCreatorInput, SubscriptionUncheckedCreateWithoutCreatorInput> | SubscriptionCreateWithoutCreatorInput[] | SubscriptionUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutCreatorInput | SubscriptionCreateOrConnectWithoutCreatorInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutCreatorInput | SubscriptionUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: SubscriptionCreateManyCreatorInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutCreatorInput | SubscriptionUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutCreatorInput | SubscriptionUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type PostPurchaseUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PostPurchaseCreateWithoutUserInput, PostPurchaseUncheckedCreateWithoutUserInput> | PostPurchaseCreateWithoutUserInput[] | PostPurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutUserInput | PostPurchaseCreateOrConnectWithoutUserInput[]
    upsert?: PostPurchaseUpsertWithWhereUniqueWithoutUserInput | PostPurchaseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PostPurchaseCreateManyUserInputEnvelope
    set?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    disconnect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    delete?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    update?: PostPurchaseUpdateWithWhereUniqueWithoutUserInput | PostPurchaseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PostPurchaseUpdateManyWithWhereWithoutUserInput | PostPurchaseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PostPurchaseScalarWhereInput | PostPurchaseScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutReferrerNestedInput = {
    create?: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput> | UserCreateWithoutReferrerInput[] | UserUncheckedCreateWithoutReferrerInput[]
    connectOrCreate?: UserCreateOrConnectWithoutReferrerInput | UserCreateOrConnectWithoutReferrerInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutReferrerInput | UserUpsertWithWhereUniqueWithoutReferrerInput[]
    createMany?: UserCreateManyReferrerInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutReferrerInput | UserUpdateWithWhereUniqueWithoutReferrerInput[]
    updateMany?: UserUpdateManyWithWhereWithoutReferrerInput | UserUpdateManyWithWhereWithoutReferrerInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserSettingsUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    upsert?: UserSettingsUpsertWithoutUserInput
    disconnect?: UserSettingsWhereInput | boolean
    delete?: UserSettingsWhereInput | boolean
    connect?: UserSettingsWhereUniqueInput
    update?: XOR<XOR<UserSettingsUpdateToOneWithWhereWithoutUserInput, UserSettingsUpdateWithoutUserInput>, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput = {
    create?: XOR<CreatorTierSettingsCreateWithoutCreatorInput, CreatorTierSettingsUncheckedCreateWithoutCreatorInput>
    connectOrCreate?: CreatorTierSettingsCreateOrConnectWithoutCreatorInput
    upsert?: CreatorTierSettingsUpsertWithoutCreatorInput
    disconnect?: CreatorTierSettingsWhereInput | boolean
    delete?: CreatorTierSettingsWhereInput | boolean
    connect?: CreatorTierSettingsWhereUniqueInput
    update?: XOR<XOR<CreatorTierSettingsUpdateToOneWithWhereWithoutCreatorInput, CreatorTierSettingsUpdateWithoutCreatorInput>, CreatorTierSettingsUncheckedUpdateWithoutCreatorInput>
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutSoldToNestedInput = {
    create?: XOR<PostCreateWithoutSoldToInput, PostUncheckedCreateWithoutSoldToInput> | PostCreateWithoutSoldToInput[] | PostUncheckedCreateWithoutSoldToInput[]
    connectOrCreate?: PostCreateOrConnectWithoutSoldToInput | PostCreateOrConnectWithoutSoldToInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutSoldToInput | PostUpsertWithWhereUniqueWithoutSoldToInput[]
    createMany?: PostCreateManySoldToInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutSoldToInput | PostUpdateWithWhereUniqueWithoutSoldToInput[]
    updateMany?: PostUpdateManyWithWhereWithoutSoldToInput | PostUpdateManyWithWhereWithoutSoldToInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type AuctionDepositUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuctionDepositCreateWithoutUserInput, AuctionDepositUncheckedCreateWithoutUserInput> | AuctionDepositCreateWithoutUserInput[] | AuctionDepositUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutUserInput | AuctionDepositCreateOrConnectWithoutUserInput[]
    upsert?: AuctionDepositUpsertWithWhereUniqueWithoutUserInput | AuctionDepositUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuctionDepositCreateManyUserInputEnvelope
    set?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    disconnect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    delete?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    update?: AuctionDepositUpdateWithWhereUniqueWithoutUserInput | AuctionDepositUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuctionDepositUpdateManyWithWhereWithoutUserInput | AuctionDepositUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuctionDepositScalarWhereInput | AuctionDepositScalarWhereInput[]
  }

  export type AuctionBidUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuctionBidCreateWithoutUserInput, AuctionBidUncheckedCreateWithoutUserInput> | AuctionBidCreateWithoutUserInput[] | AuctionBidUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutUserInput | AuctionBidCreateOrConnectWithoutUserInput[]
    upsert?: AuctionBidUpsertWithWhereUniqueWithoutUserInput | AuctionBidUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuctionBidCreateManyUserInputEnvelope
    set?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    disconnect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    delete?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    update?: AuctionBidUpdateWithWhereUniqueWithoutUserInput | AuctionBidUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuctionBidUpdateManyWithWhereWithoutUserInput | AuctionBidUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuctionBidScalarWhereInput | AuctionBidScalarWhereInput[]
  }

  export type AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AuctionPaymentCreateWithoutUserInput, AuctionPaymentUncheckedCreateWithoutUserInput> | AuctionPaymentCreateWithoutUserInput[] | AuctionPaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutUserInput | AuctionPaymentCreateOrConnectWithoutUserInput[]
    upsert?: AuctionPaymentUpsertWithWhereUniqueWithoutUserInput | AuctionPaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AuctionPaymentCreateManyUserInputEnvelope
    set?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    disconnect?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    delete?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    connect?: AuctionPaymentWhereUniqueInput | AuctionPaymentWhereUniqueInput[]
    update?: AuctionPaymentUpdateWithWhereUniqueWithoutUserInput | AuctionPaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AuctionPaymentUpdateManyWithWhereWithoutUserInput | AuctionPaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AuctionPaymentScalarWhereInput | AuctionPaymentScalarWhereInput[]
  }

  export type FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<FlashSaleCreateWithoutCreatorInput, FlashSaleUncheckedCreateWithoutCreatorInput> | FlashSaleCreateWithoutCreatorInput[] | FlashSaleUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutCreatorInput | FlashSaleCreateOrConnectWithoutCreatorInput[]
    upsert?: FlashSaleUpsertWithWhereUniqueWithoutCreatorInput | FlashSaleUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: FlashSaleCreateManyCreatorInputEnvelope
    set?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    disconnect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    delete?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    update?: FlashSaleUpdateWithWhereUniqueWithoutCreatorInput | FlashSaleUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: FlashSaleUpdateManyWithWhereWithoutCreatorInput | FlashSaleUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: FlashSaleScalarWhereInput | FlashSaleScalarWhereInput[]
  }

  export type FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutUserInput, FlashSaleRedemptionUncheckedCreateWithoutUserInput> | FlashSaleRedemptionCreateWithoutUserInput[] | FlashSaleRedemptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutUserInput | FlashSaleRedemptionCreateOrConnectWithoutUserInput[]
    upsert?: FlashSaleRedemptionUpsertWithWhereUniqueWithoutUserInput | FlashSaleRedemptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FlashSaleRedemptionCreateManyUserInputEnvelope
    set?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    disconnect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    delete?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    update?: FlashSaleRedemptionUpdateWithWhereUniqueWithoutUserInput | FlashSaleRedemptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FlashSaleRedemptionUpdateManyWithWhereWithoutUserInput | FlashSaleRedemptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FlashSaleRedemptionScalarWhereInput | FlashSaleRedemptionScalarWhereInput[]
  }

  export type ConversationUncheckedUpdateManyWithoutParticipantsNestedInput = {
    create?: XOR<ConversationCreateWithoutParticipantsInput, ConversationUncheckedCreateWithoutParticipantsInput> | ConversationCreateWithoutParticipantsInput[] | ConversationUncheckedCreateWithoutParticipantsInput[]
    connectOrCreate?: ConversationCreateOrConnectWithoutParticipantsInput | ConversationCreateOrConnectWithoutParticipantsInput[]
    upsert?: ConversationUpsertWithWhereUniqueWithoutParticipantsInput | ConversationUpsertWithWhereUniqueWithoutParticipantsInput[]
    set?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    disconnect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    delete?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    connect?: ConversationWhereUniqueInput | ConversationWhereUniqueInput[]
    update?: ConversationUpdateWithWhereUniqueWithoutParticipantsInput | ConversationUpdateWithWhereUniqueWithoutParticipantsInput[]
    updateMany?: ConversationUpdateManyWithWhereWithoutParticipantsInput | ConversationUpdateManyWithWhereWithoutParticipantsInput[]
    deleteMany?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MessagePurchaseCreateWithoutUserInput, MessagePurchaseUncheckedCreateWithoutUserInput> | MessagePurchaseCreateWithoutUserInput[] | MessagePurchaseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutUserInput | MessagePurchaseCreateOrConnectWithoutUserInput[]
    upsert?: MessagePurchaseUpsertWithWhereUniqueWithoutUserInput | MessagePurchaseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MessagePurchaseCreateManyUserInputEnvelope
    set?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    disconnect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    delete?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    update?: MessagePurchaseUpdateWithWhereUniqueWithoutUserInput | MessagePurchaseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MessagePurchaseUpdateManyWithWhereWithoutUserInput | MessagePurchaseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MessagePurchaseScalarWhereInput | MessagePurchaseScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutPurchasedSellablePostsInput = {
    create?: XOR<UserCreateWithoutPurchasedSellablePostsInput, UserUncheckedCreateWithoutPurchasedSellablePostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPurchasedSellablePostsInput
    connect?: UserWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutPostInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type LikeCreateNestedManyWithoutPostInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type PostTagCreateNestedManyWithoutPostInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutPostsInput = {
    create?: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostsInput
    connect?: UserWhereUniqueInput
  }

  export type PostPurchaseCreateNestedManyWithoutPostInput = {
    create?: XOR<PostPurchaseCreateWithoutPostInput, PostPurchaseUncheckedCreateWithoutPostInput> | PostPurchaseCreateWithoutPostInput[] | PostPurchaseUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutPostInput | PostPurchaseCreateOrConnectWithoutPostInput[]
    createMany?: PostPurchaseCreateManyPostInputEnvelope
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
  }

  export type AuctionDepositCreateNestedManyWithoutPostInput = {
    create?: XOR<AuctionDepositCreateWithoutPostInput, AuctionDepositUncheckedCreateWithoutPostInput> | AuctionDepositCreateWithoutPostInput[] | AuctionDepositUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutPostInput | AuctionDepositCreateOrConnectWithoutPostInput[]
    createMany?: AuctionDepositCreateManyPostInputEnvelope
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
  }

  export type AuctionBidCreateNestedManyWithoutPostInput = {
    create?: XOR<AuctionBidCreateWithoutPostInput, AuctionBidUncheckedCreateWithoutPostInput> | AuctionBidCreateWithoutPostInput[] | AuctionBidUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutPostInput | AuctionBidCreateOrConnectWithoutPostInput[]
    createMany?: AuctionBidCreateManyPostInputEnvelope
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
  }

  export type AuctionPaymentCreateNestedOneWithoutPostInput = {
    create?: XOR<AuctionPaymentCreateWithoutPostInput, AuctionPaymentUncheckedCreateWithoutPostInput>
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutPostInput
    connect?: AuctionPaymentWhereUniqueInput
  }

  export type FlashSaleCreateNestedManyWithoutPostInput = {
    create?: XOR<FlashSaleCreateWithoutPostInput, FlashSaleUncheckedCreateWithoutPostInput> | FlashSaleCreateWithoutPostInput[] | FlashSaleUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutPostInput | FlashSaleCreateOrConnectWithoutPostInput[]
    createMany?: FlashSaleCreateManyPostInputEnvelope
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type LikeUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type PostTagUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type PostPurchaseUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<PostPurchaseCreateWithoutPostInput, PostPurchaseUncheckedCreateWithoutPostInput> | PostPurchaseCreateWithoutPostInput[] | PostPurchaseUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutPostInput | PostPurchaseCreateOrConnectWithoutPostInput[]
    createMany?: PostPurchaseCreateManyPostInputEnvelope
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
  }

  export type AuctionDepositUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<AuctionDepositCreateWithoutPostInput, AuctionDepositUncheckedCreateWithoutPostInput> | AuctionDepositCreateWithoutPostInput[] | AuctionDepositUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutPostInput | AuctionDepositCreateOrConnectWithoutPostInput[]
    createMany?: AuctionDepositCreateManyPostInputEnvelope
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
  }

  export type AuctionBidUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<AuctionBidCreateWithoutPostInput, AuctionBidUncheckedCreateWithoutPostInput> | AuctionBidCreateWithoutPostInput[] | AuctionBidUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutPostInput | AuctionBidCreateOrConnectWithoutPostInput[]
    createMany?: AuctionBidCreateManyPostInputEnvelope
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
  }

  export type AuctionPaymentUncheckedCreateNestedOneWithoutPostInput = {
    create?: XOR<AuctionPaymentCreateWithoutPostInput, AuctionPaymentUncheckedCreateWithoutPostInput>
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutPostInput
    connect?: AuctionPaymentWhereUniqueInput
  }

  export type FlashSaleUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<FlashSaleCreateWithoutPostInput, FlashSaleUncheckedCreateWithoutPostInput> | FlashSaleCreateWithoutPostInput[] | FlashSaleUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutPostInput | FlashSaleCreateOrConnectWithoutPostInput[]
    createMany?: FlashSaleCreateManyPostInputEnvelope
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumSellTypeFieldUpdateOperationsInput = {
    set?: $Enums.SellType | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumAuctionStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuctionStatus
  }

  export type UserUpdateOneWithoutPurchasedSellablePostsNestedInput = {
    create?: XOR<UserCreateWithoutPurchasedSellablePostsInput, UserUncheckedCreateWithoutPurchasedSellablePostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPurchasedSellablePostsInput
    upsert?: UserUpsertWithoutPurchasedSellablePostsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPurchasedSellablePostsInput, UserUpdateWithoutPurchasedSellablePostsInput>, UserUncheckedUpdateWithoutPurchasedSellablePostsInput>
  }

  export type CommentUpdateManyWithoutPostNestedInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutPostInput | CommentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutPostInput | CommentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutPostInput | CommentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type LikeUpdateManyWithoutPostNestedInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutPostInput | LikeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutPostInput | LikeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutPostInput | LikeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type PostTagUpdateManyWithoutPostNestedInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutPostInput | PostTagUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutPostInput | PostTagUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutPostInput | PostTagUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostsInput
    upsert?: UserUpsertWithoutPostsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPostsInput, UserUpdateWithoutPostsInput>, UserUncheckedUpdateWithoutPostsInput>
  }

  export type PostPurchaseUpdateManyWithoutPostNestedInput = {
    create?: XOR<PostPurchaseCreateWithoutPostInput, PostPurchaseUncheckedCreateWithoutPostInput> | PostPurchaseCreateWithoutPostInput[] | PostPurchaseUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutPostInput | PostPurchaseCreateOrConnectWithoutPostInput[]
    upsert?: PostPurchaseUpsertWithWhereUniqueWithoutPostInput | PostPurchaseUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: PostPurchaseCreateManyPostInputEnvelope
    set?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    disconnect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    delete?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    update?: PostPurchaseUpdateWithWhereUniqueWithoutPostInput | PostPurchaseUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: PostPurchaseUpdateManyWithWhereWithoutPostInput | PostPurchaseUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: PostPurchaseScalarWhereInput | PostPurchaseScalarWhereInput[]
  }

  export type AuctionDepositUpdateManyWithoutPostNestedInput = {
    create?: XOR<AuctionDepositCreateWithoutPostInput, AuctionDepositUncheckedCreateWithoutPostInput> | AuctionDepositCreateWithoutPostInput[] | AuctionDepositUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutPostInput | AuctionDepositCreateOrConnectWithoutPostInput[]
    upsert?: AuctionDepositUpsertWithWhereUniqueWithoutPostInput | AuctionDepositUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: AuctionDepositCreateManyPostInputEnvelope
    set?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    disconnect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    delete?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    update?: AuctionDepositUpdateWithWhereUniqueWithoutPostInput | AuctionDepositUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: AuctionDepositUpdateManyWithWhereWithoutPostInput | AuctionDepositUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: AuctionDepositScalarWhereInput | AuctionDepositScalarWhereInput[]
  }

  export type AuctionBidUpdateManyWithoutPostNestedInput = {
    create?: XOR<AuctionBidCreateWithoutPostInput, AuctionBidUncheckedCreateWithoutPostInput> | AuctionBidCreateWithoutPostInput[] | AuctionBidUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutPostInput | AuctionBidCreateOrConnectWithoutPostInput[]
    upsert?: AuctionBidUpsertWithWhereUniqueWithoutPostInput | AuctionBidUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: AuctionBidCreateManyPostInputEnvelope
    set?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    disconnect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    delete?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    update?: AuctionBidUpdateWithWhereUniqueWithoutPostInput | AuctionBidUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: AuctionBidUpdateManyWithWhereWithoutPostInput | AuctionBidUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: AuctionBidScalarWhereInput | AuctionBidScalarWhereInput[]
  }

  export type AuctionPaymentUpdateOneWithoutPostNestedInput = {
    create?: XOR<AuctionPaymentCreateWithoutPostInput, AuctionPaymentUncheckedCreateWithoutPostInput>
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutPostInput
    upsert?: AuctionPaymentUpsertWithoutPostInput
    disconnect?: AuctionPaymentWhereInput | boolean
    delete?: AuctionPaymentWhereInput | boolean
    connect?: AuctionPaymentWhereUniqueInput
    update?: XOR<XOR<AuctionPaymentUpdateToOneWithWhereWithoutPostInput, AuctionPaymentUpdateWithoutPostInput>, AuctionPaymentUncheckedUpdateWithoutPostInput>
  }

  export type FlashSaleUpdateManyWithoutPostNestedInput = {
    create?: XOR<FlashSaleCreateWithoutPostInput, FlashSaleUncheckedCreateWithoutPostInput> | FlashSaleCreateWithoutPostInput[] | FlashSaleUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutPostInput | FlashSaleCreateOrConnectWithoutPostInput[]
    upsert?: FlashSaleUpsertWithWhereUniqueWithoutPostInput | FlashSaleUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: FlashSaleCreateManyPostInputEnvelope
    set?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    disconnect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    delete?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    update?: FlashSaleUpdateWithWhereUniqueWithoutPostInput | FlashSaleUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: FlashSaleUpdateManyWithWhereWithoutPostInput | FlashSaleUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: FlashSaleScalarWhereInput | FlashSaleScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutPostInput | CommentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutPostInput | CommentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutPostInput | CommentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type LikeUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutPostInput | LikeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutPostInput | LikeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutPostInput | LikeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type PostTagUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutPostInput | PostTagUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutPostInput | PostTagUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutPostInput | PostTagUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type PostPurchaseUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<PostPurchaseCreateWithoutPostInput, PostPurchaseUncheckedCreateWithoutPostInput> | PostPurchaseCreateWithoutPostInput[] | PostPurchaseUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutPostInput | PostPurchaseCreateOrConnectWithoutPostInput[]
    upsert?: PostPurchaseUpsertWithWhereUniqueWithoutPostInput | PostPurchaseUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: PostPurchaseCreateManyPostInputEnvelope
    set?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    disconnect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    delete?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    connect?: PostPurchaseWhereUniqueInput | PostPurchaseWhereUniqueInput[]
    update?: PostPurchaseUpdateWithWhereUniqueWithoutPostInput | PostPurchaseUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: PostPurchaseUpdateManyWithWhereWithoutPostInput | PostPurchaseUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: PostPurchaseScalarWhereInput | PostPurchaseScalarWhereInput[]
  }

  export type AuctionDepositUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<AuctionDepositCreateWithoutPostInput, AuctionDepositUncheckedCreateWithoutPostInput> | AuctionDepositCreateWithoutPostInput[] | AuctionDepositUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionDepositCreateOrConnectWithoutPostInput | AuctionDepositCreateOrConnectWithoutPostInput[]
    upsert?: AuctionDepositUpsertWithWhereUniqueWithoutPostInput | AuctionDepositUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: AuctionDepositCreateManyPostInputEnvelope
    set?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    disconnect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    delete?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    connect?: AuctionDepositWhereUniqueInput | AuctionDepositWhereUniqueInput[]
    update?: AuctionDepositUpdateWithWhereUniqueWithoutPostInput | AuctionDepositUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: AuctionDepositUpdateManyWithWhereWithoutPostInput | AuctionDepositUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: AuctionDepositScalarWhereInput | AuctionDepositScalarWhereInput[]
  }

  export type AuctionBidUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<AuctionBidCreateWithoutPostInput, AuctionBidUncheckedCreateWithoutPostInput> | AuctionBidCreateWithoutPostInput[] | AuctionBidUncheckedCreateWithoutPostInput[]
    connectOrCreate?: AuctionBidCreateOrConnectWithoutPostInput | AuctionBidCreateOrConnectWithoutPostInput[]
    upsert?: AuctionBidUpsertWithWhereUniqueWithoutPostInput | AuctionBidUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: AuctionBidCreateManyPostInputEnvelope
    set?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    disconnect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    delete?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    connect?: AuctionBidWhereUniqueInput | AuctionBidWhereUniqueInput[]
    update?: AuctionBidUpdateWithWhereUniqueWithoutPostInput | AuctionBidUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: AuctionBidUpdateManyWithWhereWithoutPostInput | AuctionBidUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: AuctionBidScalarWhereInput | AuctionBidScalarWhereInput[]
  }

  export type AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput = {
    create?: XOR<AuctionPaymentCreateWithoutPostInput, AuctionPaymentUncheckedCreateWithoutPostInput>
    connectOrCreate?: AuctionPaymentCreateOrConnectWithoutPostInput
    upsert?: AuctionPaymentUpsertWithoutPostInput
    disconnect?: AuctionPaymentWhereInput | boolean
    delete?: AuctionPaymentWhereInput | boolean
    connect?: AuctionPaymentWhereUniqueInput
    update?: XOR<XOR<AuctionPaymentUpdateToOneWithWhereWithoutPostInput, AuctionPaymentUpdateWithoutPostInput>, AuctionPaymentUncheckedUpdateWithoutPostInput>
  }

  export type FlashSaleUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<FlashSaleCreateWithoutPostInput, FlashSaleUncheckedCreateWithoutPostInput> | FlashSaleCreateWithoutPostInput[] | FlashSaleUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FlashSaleCreateOrConnectWithoutPostInput | FlashSaleCreateOrConnectWithoutPostInput[]
    upsert?: FlashSaleUpsertWithWhereUniqueWithoutPostInput | FlashSaleUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: FlashSaleCreateManyPostInputEnvelope
    set?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    disconnect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    delete?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    connect?: FlashSaleWhereUniqueInput | FlashSaleWhereUniqueInput[]
    update?: FlashSaleUpdateWithWhereUniqueWithoutPostInput | FlashSaleUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: FlashSaleUpdateManyWithWhereWithoutPostInput | FlashSaleUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: FlashSaleScalarWhereInput | FlashSaleScalarWhereInput[]
  }

  export type PostTagCreateNestedManyWithoutTagInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type PostTagUncheckedCreateNestedManyWithoutTagInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type PostTagUpdateManyWithoutTagNestedInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutTagInput | PostTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutTagInput | PostTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutTagInput | PostTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type PostTagUncheckedUpdateManyWithoutTagNestedInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutTagInput | PostTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutTagInput | PostTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutTagInput | PostTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type PostCreateNestedOneWithoutTagsInput = {
    create?: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
    connectOrCreate?: PostCreateOrConnectWithoutTagsInput
    connect?: PostWhereUniqueInput
  }

  export type TagCreateNestedOneWithoutPostsInput = {
    create?: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
    connectOrCreate?: TagCreateOrConnectWithoutPostsInput
    connect?: TagWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutTagsNestedInput = {
    create?: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
    connectOrCreate?: PostCreateOrConnectWithoutTagsInput
    upsert?: PostUpsertWithoutTagsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutTagsInput, PostUpdateWithoutTagsInput>, PostUncheckedUpdateWithoutTagsInput>
  }

  export type TagUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
    connectOrCreate?: TagCreateOrConnectWithoutPostsInput
    upsert?: TagUpsertWithoutPostsInput
    connect?: TagWhereUniqueInput
    update?: XOR<XOR<TagUpdateToOneWithWhereWithoutPostsInput, TagUpdateWithoutPostsInput>, TagUncheckedUpdateWithoutPostsInput>
  }

  export type CommentCreateNestedOneWithoutRepliesInput = {
    create?: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutRepliesInput
    connect?: CommentWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutParentInput = {
    create?: XOR<CommentCreateWithoutParentInput, CommentUncheckedCreateWithoutParentInput> | CommentCreateWithoutParentInput[] | CommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParentInput | CommentCreateOrConnectWithoutParentInput[]
    createMany?: CommentCreateManyParentInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type PostCreateNestedOneWithoutCommentsInput = {
    create?: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PostCreateOrConnectWithoutCommentsInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCommentsInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    connect?: UserWhereUniqueInput
  }

  export type LikeCreateNestedManyWithoutCommentInput = {
    create?: XOR<LikeCreateWithoutCommentInput, LikeUncheckedCreateWithoutCommentInput> | LikeCreateWithoutCommentInput[] | LikeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutCommentInput | LikeCreateOrConnectWithoutCommentInput[]
    createMany?: LikeCreateManyCommentInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<CommentCreateWithoutParentInput, CommentUncheckedCreateWithoutParentInput> | CommentCreateWithoutParentInput[] | CommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParentInput | CommentCreateOrConnectWithoutParentInput[]
    createMany?: CommentCreateManyParentInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type LikeUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<LikeCreateWithoutCommentInput, LikeUncheckedCreateWithoutCommentInput> | LikeCreateWithoutCommentInput[] | LikeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutCommentInput | LikeCreateOrConnectWithoutCommentInput[]
    createMany?: LikeCreateManyCommentInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type CommentUpdateOneWithoutRepliesNestedInput = {
    create?: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutRepliesInput
    upsert?: CommentUpsertWithoutRepliesInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutRepliesInput, CommentUpdateWithoutRepliesInput>, CommentUncheckedUpdateWithoutRepliesInput>
  }

  export type CommentUpdateManyWithoutParentNestedInput = {
    create?: XOR<CommentCreateWithoutParentInput, CommentUncheckedCreateWithoutParentInput> | CommentCreateWithoutParentInput[] | CommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParentInput | CommentCreateOrConnectWithoutParentInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutParentInput | CommentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CommentCreateManyParentInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutParentInput | CommentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutParentInput | CommentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type PostUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PostCreateOrConnectWithoutCommentsInput
    upsert?: PostUpsertWithoutCommentsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutCommentsInput, PostUpdateWithoutCommentsInput>, PostUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    upsert?: UserUpsertWithoutCommentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentsInput, UserUpdateWithoutCommentsInput>, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type LikeUpdateManyWithoutCommentNestedInput = {
    create?: XOR<LikeCreateWithoutCommentInput, LikeUncheckedCreateWithoutCommentInput> | LikeCreateWithoutCommentInput[] | LikeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutCommentInput | LikeCreateOrConnectWithoutCommentInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutCommentInput | LikeUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: LikeCreateManyCommentInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutCommentInput | LikeUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutCommentInput | LikeUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<CommentCreateWithoutParentInput, CommentUncheckedCreateWithoutParentInput> | CommentCreateWithoutParentInput[] | CommentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParentInput | CommentCreateOrConnectWithoutParentInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutParentInput | CommentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: CommentCreateManyParentInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutParentInput | CommentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutParentInput | CommentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type LikeUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<LikeCreateWithoutCommentInput, LikeUncheckedCreateWithoutCommentInput> | LikeCreateWithoutCommentInput[] | LikeUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutCommentInput | LikeCreateOrConnectWithoutCommentInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutCommentInput | LikeUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: LikeCreateManyCommentInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutCommentInput | LikeUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutCommentInput | LikeUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type CommentCreateNestedOneWithoutLikesInput = {
    create?: XOR<CommentCreateWithoutLikesInput, CommentUncheckedCreateWithoutLikesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutLikesInput
    connect?: CommentWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutLikesInput = {
    create?: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    connectOrCreate?: PostCreateOrConnectWithoutLikesInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutLikesInput = {
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    connect?: UserWhereUniqueInput
  }

  export type CommentUpdateOneWithoutLikesNestedInput = {
    create?: XOR<CommentCreateWithoutLikesInput, CommentUncheckedCreateWithoutLikesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutLikesInput
    upsert?: CommentUpsertWithoutLikesInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutLikesInput, CommentUpdateWithoutLikesInput>, CommentUncheckedUpdateWithoutLikesInput>
  }

  export type PostUpdateOneWithoutLikesNestedInput = {
    create?: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    connectOrCreate?: PostCreateOrConnectWithoutLikesInput
    upsert?: PostUpsertWithoutLikesInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutLikesInput, PostUpdateWithoutLikesInput>, PostUncheckedUpdateWithoutLikesInput>
  }

  export type UserUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    upsert?: UserUpsertWithoutLikesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLikesInput, UserUpdateWithoutLikesInput>, UserUncheckedUpdateWithoutLikesInput>
  }

  export type UserCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscriptionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubscribersInput = {
    create?: XOR<UserCreateWithoutSubscribersInput, UserUncheckedCreateWithoutSubscribersInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscribersInput
    connect?: UserWhereUniqueInput
  }

  export type TransactionCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<TransactionCreateWithoutSubscriptionInput, TransactionUncheckedCreateWithoutSubscriptionInput> | TransactionCreateWithoutSubscriptionInput[] | TransactionUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSubscriptionInput | TransactionCreateOrConnectWithoutSubscriptionInput[]
    createMany?: TransactionCreateManySubscriptionInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type TransactionUncheckedCreateNestedManyWithoutSubscriptionInput = {
    create?: XOR<TransactionCreateWithoutSubscriptionInput, TransactionUncheckedCreateWithoutSubscriptionInput> | TransactionCreateWithoutSubscriptionInput[] | TransactionUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSubscriptionInput | TransactionCreateOrConnectWithoutSubscriptionInput[]
    createMany?: TransactionCreateManySubscriptionInputEnvelope
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type UserUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscriptionsInput
    upsert?: UserUpsertWithoutSubscriptionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubscriptionsInput, UserUpdateWithoutSubscriptionsInput>, UserUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type UserUpdateOneRequiredWithoutSubscribersNestedInput = {
    create?: XOR<UserCreateWithoutSubscribersInput, UserUncheckedCreateWithoutSubscribersInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscribersInput
    upsert?: UserUpsertWithoutSubscribersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubscribersInput, UserUpdateWithoutSubscribersInput>, UserUncheckedUpdateWithoutSubscribersInput>
  }

  export type TransactionUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<TransactionCreateWithoutSubscriptionInput, TransactionUncheckedCreateWithoutSubscriptionInput> | TransactionCreateWithoutSubscriptionInput[] | TransactionUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSubscriptionInput | TransactionCreateOrConnectWithoutSubscriptionInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutSubscriptionInput | TransactionUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: TransactionCreateManySubscriptionInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutSubscriptionInput | TransactionUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutSubscriptionInput | TransactionUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type TransactionUncheckedUpdateManyWithoutSubscriptionNestedInput = {
    create?: XOR<TransactionCreateWithoutSubscriptionInput, TransactionUncheckedCreateWithoutSubscriptionInput> | TransactionCreateWithoutSubscriptionInput[] | TransactionUncheckedCreateWithoutSubscriptionInput[]
    connectOrCreate?: TransactionCreateOrConnectWithoutSubscriptionInput | TransactionCreateOrConnectWithoutSubscriptionInput[]
    upsert?: TransactionUpsertWithWhereUniqueWithoutSubscriptionInput | TransactionUpsertWithWhereUniqueWithoutSubscriptionInput[]
    createMany?: TransactionCreateManySubscriptionInputEnvelope
    set?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    disconnect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    delete?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    connect?: TransactionWhereUniqueInput | TransactionWhereUniqueInput[]
    update?: TransactionUpdateWithWhereUniqueWithoutSubscriptionInput | TransactionUpdateWithWhereUniqueWithoutSubscriptionInput[]
    updateMany?: TransactionUpdateManyWithWhereWithoutSubscriptionInput | TransactionUpdateManyWithWhereWithoutSubscriptionInput[]
    deleteMany?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutFollowsInput = {
    create?: XOR<UserCreateWithoutFollowsInput, UserUncheckedCreateWithoutFollowsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFollowsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFollowersInput = {
    create?: XOR<UserCreateWithoutFollowersInput, UserUncheckedCreateWithoutFollowersInput>
    connectOrCreate?: UserCreateOrConnectWithoutFollowersInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFollowsNestedInput = {
    create?: XOR<UserCreateWithoutFollowsInput, UserUncheckedCreateWithoutFollowsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFollowsInput
    upsert?: UserUpsertWithoutFollowsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFollowsInput, UserUpdateWithoutFollowsInput>, UserUncheckedUpdateWithoutFollowsInput>
  }

  export type UserUpdateOneRequiredWithoutFollowersNestedInput = {
    create?: XOR<UserCreateWithoutFollowersInput, UserUncheckedCreateWithoutFollowersInput>
    connectOrCreate?: UserCreateOrConnectWithoutFollowersInput
    upsert?: UserUpsertWithoutFollowersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFollowersInput, UserUpdateWithoutFollowersInput>, UserUncheckedUpdateWithoutFollowersInput>
  }

  export type SubscriptionCreateNestedOneWithoutTransactionsInput = {
    create?: XOR<SubscriptionCreateWithoutTransactionsInput, SubscriptionUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutTransactionsInput
    connect?: SubscriptionWhereUniqueInput
  }

  export type PostPurchaseCreateNestedOneWithoutTransactionInput = {
    create?: XOR<PostPurchaseCreateWithoutTransactionInput, PostPurchaseUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutTransactionInput
    connect?: PostPurchaseWhereUniqueInput
  }

  export type EnumTransactionTypeFieldUpdateOperationsInput = {
    set?: $Enums.TransactionType
  }

  export type EnumTransactionStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransactionStatus
  }

  export type SubscriptionUpdateOneWithoutTransactionsNestedInput = {
    create?: XOR<SubscriptionCreateWithoutTransactionsInput, SubscriptionUncheckedCreateWithoutTransactionsInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutTransactionsInput
    upsert?: SubscriptionUpsertWithoutTransactionsInput
    disconnect?: SubscriptionWhereInput | boolean
    delete?: SubscriptionWhereInput | boolean
    connect?: SubscriptionWhereUniqueInput
    update?: XOR<XOR<SubscriptionUpdateToOneWithWhereWithoutTransactionsInput, SubscriptionUpdateWithoutTransactionsInput>, SubscriptionUncheckedUpdateWithoutTransactionsInput>
  }

  export type PostPurchaseUpdateOneWithoutTransactionNestedInput = {
    create?: XOR<PostPurchaseCreateWithoutTransactionInput, PostPurchaseUncheckedCreateWithoutTransactionInput>
    connectOrCreate?: PostPurchaseCreateOrConnectWithoutTransactionInput
    upsert?: PostPurchaseUpsertWithoutTransactionInput
    disconnect?: PostPurchaseWhereInput | boolean
    delete?: PostPurchaseWhereInput | boolean
    connect?: PostPurchaseWhereUniqueInput
    update?: XOR<XOR<PostPurchaseUpdateToOneWithWhereWithoutTransactionInput, PostPurchaseUpdateWithoutTransactionInput>, PostPurchaseUncheckedUpdateWithoutTransactionInput>
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type PostCreateNestedOneWithoutPurchasesInput = {
    create?: XOR<PostCreateWithoutPurchasesInput, PostUncheckedCreateWithoutPurchasesInput>
    connectOrCreate?: PostCreateOrConnectWithoutPurchasesInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPostPurchasesInput = {
    create?: XOR<UserCreateWithoutPostPurchasesInput, UserUncheckedCreateWithoutPostPurchasesInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostPurchasesInput
    connect?: UserWhereUniqueInput
  }

  export type TransactionCreateNestedOneWithoutPostPurchaseInput = {
    create?: XOR<TransactionCreateWithoutPostPurchaseInput, TransactionUncheckedCreateWithoutPostPurchaseInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutPostPurchaseInput
    connect?: TransactionWhereUniqueInput
  }

  export type TransactionUncheckedCreateNestedOneWithoutPostPurchaseInput = {
    create?: XOR<TransactionCreateWithoutPostPurchaseInput, TransactionUncheckedCreateWithoutPostPurchaseInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutPostPurchaseInput
    connect?: TransactionWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutPurchasesNestedInput = {
    create?: XOR<PostCreateWithoutPurchasesInput, PostUncheckedCreateWithoutPurchasesInput>
    connectOrCreate?: PostCreateOrConnectWithoutPurchasesInput
    upsert?: PostUpsertWithoutPurchasesInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutPurchasesInput, PostUpdateWithoutPurchasesInput>, PostUncheckedUpdateWithoutPurchasesInput>
  }

  export type UserUpdateOneRequiredWithoutPostPurchasesNestedInput = {
    create?: XOR<UserCreateWithoutPostPurchasesInput, UserUncheckedCreateWithoutPostPurchasesInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostPurchasesInput
    upsert?: UserUpsertWithoutPostPurchasesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPostPurchasesInput, UserUpdateWithoutPostPurchasesInput>, UserUncheckedUpdateWithoutPostPurchasesInput>
  }

  export type TransactionUpdateOneWithoutPostPurchaseNestedInput = {
    create?: XOR<TransactionCreateWithoutPostPurchaseInput, TransactionUncheckedCreateWithoutPostPurchaseInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutPostPurchaseInput
    upsert?: TransactionUpsertWithoutPostPurchaseInput
    disconnect?: TransactionWhereInput | boolean
    delete?: TransactionWhereInput | boolean
    connect?: TransactionWhereUniqueInput
    update?: XOR<XOR<TransactionUpdateToOneWithWhereWithoutPostPurchaseInput, TransactionUpdateWithoutPostPurchaseInput>, TransactionUncheckedUpdateWithoutPostPurchaseInput>
  }

  export type TransactionUncheckedUpdateOneWithoutPostPurchaseNestedInput = {
    create?: XOR<TransactionCreateWithoutPostPurchaseInput, TransactionUncheckedCreateWithoutPostPurchaseInput>
    connectOrCreate?: TransactionCreateOrConnectWithoutPostPurchaseInput
    upsert?: TransactionUpsertWithoutPostPurchaseInput
    disconnect?: TransactionWhereInput | boolean
    delete?: TransactionWhereInput | boolean
    connect?: TransactionWhereUniqueInput
    update?: XOR<XOR<TransactionUpdateToOneWithWhereWithoutPostPurchaseInput, TransactionUpdateWithoutPostPurchaseInput>, TransactionUncheckedUpdateWithoutPostPurchaseInput>
  }

  export type UserCreateNestedOneWithoutSettingsInput = {
    create?: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSettingsNestedInput = {
    create?: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettingsInput
    upsert?: UserUpsertWithoutSettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSettingsInput, UserUpdateWithoutSettingsInput>, UserUncheckedUpdateWithoutSettingsInput>
  }

  export type UserCreateNestedOneWithoutTierSettingsInput = {
    create?: XOR<UserCreateWithoutTierSettingsInput, UserUncheckedCreateWithoutTierSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTierSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutTierSettingsNestedInput = {
    create?: XOR<UserCreateWithoutTierSettingsInput, UserUncheckedCreateWithoutTierSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTierSettingsInput
    upsert?: UserUpsertWithoutTierSettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTierSettingsInput, UserUpdateWithoutTierSettingsInput>, UserUncheckedUpdateWithoutTierSettingsInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type PostCreateNestedOneWithoutAuctionDepositsInput = {
    create?: XOR<PostCreateWithoutAuctionDepositsInput, PostUncheckedCreateWithoutAuctionDepositsInput>
    connectOrCreate?: PostCreateOrConnectWithoutAuctionDepositsInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuctionDepositsInput = {
    create?: XOR<UserCreateWithoutAuctionDepositsInput, UserUncheckedCreateWithoutAuctionDepositsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuctionDepositsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumDepositStatusFieldUpdateOperationsInput = {
    set?: $Enums.DepositStatus
  }

  export type PostUpdateOneRequiredWithoutAuctionDepositsNestedInput = {
    create?: XOR<PostCreateWithoutAuctionDepositsInput, PostUncheckedCreateWithoutAuctionDepositsInput>
    connectOrCreate?: PostCreateOrConnectWithoutAuctionDepositsInput
    upsert?: PostUpsertWithoutAuctionDepositsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutAuctionDepositsInput, PostUpdateWithoutAuctionDepositsInput>, PostUncheckedUpdateWithoutAuctionDepositsInput>
  }

  export type UserUpdateOneRequiredWithoutAuctionDepositsNestedInput = {
    create?: XOR<UserCreateWithoutAuctionDepositsInput, UserUncheckedCreateWithoutAuctionDepositsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuctionDepositsInput
    upsert?: UserUpsertWithoutAuctionDepositsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuctionDepositsInput, UserUpdateWithoutAuctionDepositsInput>, UserUncheckedUpdateWithoutAuctionDepositsInput>
  }

  export type PostCreateNestedOneWithoutAuctionBidsInput = {
    create?: XOR<PostCreateWithoutAuctionBidsInput, PostUncheckedCreateWithoutAuctionBidsInput>
    connectOrCreate?: PostCreateOrConnectWithoutAuctionBidsInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuctionBidsInput = {
    create?: XOR<UserCreateWithoutAuctionBidsInput, UserUncheckedCreateWithoutAuctionBidsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuctionBidsInput
    connect?: UserWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutAuctionBidsNestedInput = {
    create?: XOR<PostCreateWithoutAuctionBidsInput, PostUncheckedCreateWithoutAuctionBidsInput>
    connectOrCreate?: PostCreateOrConnectWithoutAuctionBidsInput
    upsert?: PostUpsertWithoutAuctionBidsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutAuctionBidsInput, PostUpdateWithoutAuctionBidsInput>, PostUncheckedUpdateWithoutAuctionBidsInput>
  }

  export type UserUpdateOneRequiredWithoutAuctionBidsNestedInput = {
    create?: XOR<UserCreateWithoutAuctionBidsInput, UserUncheckedCreateWithoutAuctionBidsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuctionBidsInput
    upsert?: UserUpsertWithoutAuctionBidsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuctionBidsInput, UserUpdateWithoutAuctionBidsInput>, UserUncheckedUpdateWithoutAuctionBidsInput>
  }

  export type PostCreateNestedOneWithoutAuctionPaymentInput = {
    create?: XOR<PostCreateWithoutAuctionPaymentInput, PostUncheckedCreateWithoutAuctionPaymentInput>
    connectOrCreate?: PostCreateOrConnectWithoutAuctionPaymentInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuctionPaymentsInput = {
    create?: XOR<UserCreateWithoutAuctionPaymentsInput, UserUncheckedCreateWithoutAuctionPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuctionPaymentsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAuctionPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuctionPaymentStatus
  }

  export type PostUpdateOneRequiredWithoutAuctionPaymentNestedInput = {
    create?: XOR<PostCreateWithoutAuctionPaymentInput, PostUncheckedCreateWithoutAuctionPaymentInput>
    connectOrCreate?: PostCreateOrConnectWithoutAuctionPaymentInput
    upsert?: PostUpsertWithoutAuctionPaymentInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutAuctionPaymentInput, PostUpdateWithoutAuctionPaymentInput>, PostUncheckedUpdateWithoutAuctionPaymentInput>
  }

  export type UserUpdateOneRequiredWithoutAuctionPaymentsNestedInput = {
    create?: XOR<UserCreateWithoutAuctionPaymentsInput, UserUncheckedCreateWithoutAuctionPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuctionPaymentsInput
    upsert?: UserUpsertWithoutAuctionPaymentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuctionPaymentsInput, UserUpdateWithoutAuctionPaymentsInput>, UserUncheckedUpdateWithoutAuctionPaymentsInput>
  }

  export type UserCreateNestedOneWithoutFlashSalesInput = {
    create?: XOR<UserCreateWithoutFlashSalesInput, UserUncheckedCreateWithoutFlashSalesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFlashSalesInput
    connect?: UserWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutFlashSalesInput = {
    create?: XOR<PostCreateWithoutFlashSalesInput, PostUncheckedCreateWithoutFlashSalesInput>
    connectOrCreate?: PostCreateOrConnectWithoutFlashSalesInput
    connect?: PostWhereUniqueInput
  }

  export type FlashSaleRedemptionCreateNestedManyWithoutFlashSaleInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput> | FlashSaleRedemptionCreateWithoutFlashSaleInput[] | FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput | FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput[]
    createMany?: FlashSaleRedemptionCreateManyFlashSaleInputEnvelope
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
  }

  export type FlashSaleRedemptionUncheckedCreateNestedManyWithoutFlashSaleInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput> | FlashSaleRedemptionCreateWithoutFlashSaleInput[] | FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput | FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput[]
    createMany?: FlashSaleRedemptionCreateManyFlashSaleInputEnvelope
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutFlashSalesNestedInput = {
    create?: XOR<UserCreateWithoutFlashSalesInput, UserUncheckedCreateWithoutFlashSalesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFlashSalesInput
    upsert?: UserUpsertWithoutFlashSalesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFlashSalesInput, UserUpdateWithoutFlashSalesInput>, UserUncheckedUpdateWithoutFlashSalesInput>
  }

  export type PostUpdateOneWithoutFlashSalesNestedInput = {
    create?: XOR<PostCreateWithoutFlashSalesInput, PostUncheckedCreateWithoutFlashSalesInput>
    connectOrCreate?: PostCreateOrConnectWithoutFlashSalesInput
    upsert?: PostUpsertWithoutFlashSalesInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutFlashSalesInput, PostUpdateWithoutFlashSalesInput>, PostUncheckedUpdateWithoutFlashSalesInput>
  }

  export type FlashSaleRedemptionUpdateManyWithoutFlashSaleNestedInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput> | FlashSaleRedemptionCreateWithoutFlashSaleInput[] | FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput | FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput[]
    upsert?: FlashSaleRedemptionUpsertWithWhereUniqueWithoutFlashSaleInput | FlashSaleRedemptionUpsertWithWhereUniqueWithoutFlashSaleInput[]
    createMany?: FlashSaleRedemptionCreateManyFlashSaleInputEnvelope
    set?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    disconnect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    delete?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    update?: FlashSaleRedemptionUpdateWithWhereUniqueWithoutFlashSaleInput | FlashSaleRedemptionUpdateWithWhereUniqueWithoutFlashSaleInput[]
    updateMany?: FlashSaleRedemptionUpdateManyWithWhereWithoutFlashSaleInput | FlashSaleRedemptionUpdateManyWithWhereWithoutFlashSaleInput[]
    deleteMany?: FlashSaleRedemptionScalarWhereInput | FlashSaleRedemptionScalarWhereInput[]
  }

  export type FlashSaleRedemptionUncheckedUpdateManyWithoutFlashSaleNestedInput = {
    create?: XOR<FlashSaleRedemptionCreateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput> | FlashSaleRedemptionCreateWithoutFlashSaleInput[] | FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput[]
    connectOrCreate?: FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput | FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput[]
    upsert?: FlashSaleRedemptionUpsertWithWhereUniqueWithoutFlashSaleInput | FlashSaleRedemptionUpsertWithWhereUniqueWithoutFlashSaleInput[]
    createMany?: FlashSaleRedemptionCreateManyFlashSaleInputEnvelope
    set?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    disconnect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    delete?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    connect?: FlashSaleRedemptionWhereUniqueInput | FlashSaleRedemptionWhereUniqueInput[]
    update?: FlashSaleRedemptionUpdateWithWhereUniqueWithoutFlashSaleInput | FlashSaleRedemptionUpdateWithWhereUniqueWithoutFlashSaleInput[]
    updateMany?: FlashSaleRedemptionUpdateManyWithWhereWithoutFlashSaleInput | FlashSaleRedemptionUpdateManyWithWhereWithoutFlashSaleInput[]
    deleteMany?: FlashSaleRedemptionScalarWhereInput | FlashSaleRedemptionScalarWhereInput[]
  }

  export type FlashSaleCreateNestedOneWithoutRedemptionsInput = {
    create?: XOR<FlashSaleCreateWithoutRedemptionsInput, FlashSaleUncheckedCreateWithoutRedemptionsInput>
    connectOrCreate?: FlashSaleCreateOrConnectWithoutRedemptionsInput
    connect?: FlashSaleWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFlashSaleRedemptionsInput = {
    create?: XOR<UserCreateWithoutFlashSaleRedemptionsInput, UserUncheckedCreateWithoutFlashSaleRedemptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFlashSaleRedemptionsInput
    connect?: UserWhereUniqueInput
  }

  export type FlashSaleUpdateOneRequiredWithoutRedemptionsNestedInput = {
    create?: XOR<FlashSaleCreateWithoutRedemptionsInput, FlashSaleUncheckedCreateWithoutRedemptionsInput>
    connectOrCreate?: FlashSaleCreateOrConnectWithoutRedemptionsInput
    upsert?: FlashSaleUpsertWithoutRedemptionsInput
    connect?: FlashSaleWhereUniqueInput
    update?: XOR<XOR<FlashSaleUpdateToOneWithWhereWithoutRedemptionsInput, FlashSaleUpdateWithoutRedemptionsInput>, FlashSaleUncheckedUpdateWithoutRedemptionsInput>
  }

  export type UserUpdateOneRequiredWithoutFlashSaleRedemptionsNestedInput = {
    create?: XOR<UserCreateWithoutFlashSaleRedemptionsInput, UserUncheckedCreateWithoutFlashSaleRedemptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFlashSaleRedemptionsInput
    upsert?: UserUpsertWithoutFlashSaleRedemptionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFlashSaleRedemptionsInput, UserUpdateWithoutFlashSaleRedemptionsInput>, UserUncheckedUpdateWithoutFlashSaleRedemptionsInput>
  }

  export type UserCreateNestedManyWithoutConversationsInput = {
    create?: XOR<UserCreateWithoutConversationsInput, UserUncheckedCreateWithoutConversationsInput> | UserCreateWithoutConversationsInput[] | UserUncheckedCreateWithoutConversationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutConversationsInput | UserCreateOrConnectWithoutConversationsInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutConversationInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutConversationsInput = {
    create?: XOR<UserCreateWithoutConversationsInput, UserUncheckedCreateWithoutConversationsInput> | UserCreateWithoutConversationsInput[] | UserUncheckedCreateWithoutConversationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutConversationsInput | UserCreateOrConnectWithoutConversationsInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutConversationInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutConversationsNestedInput = {
    create?: XOR<UserCreateWithoutConversationsInput, UserUncheckedCreateWithoutConversationsInput> | UserCreateWithoutConversationsInput[] | UserUncheckedCreateWithoutConversationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutConversationsInput | UserCreateOrConnectWithoutConversationsInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutConversationsInput | UserUpsertWithWhereUniqueWithoutConversationsInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutConversationsInput | UserUpdateWithWhereUniqueWithoutConversationsInput[]
    updateMany?: UserUpdateManyWithWhereWithoutConversationsInput | UserUpdateManyWithWhereWithoutConversationsInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutConversationNestedInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutConversationInput | MessageUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutConversationInput | MessageUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutConversationInput | MessageUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutConversationsNestedInput = {
    create?: XOR<UserCreateWithoutConversationsInput, UserUncheckedCreateWithoutConversationsInput> | UserCreateWithoutConversationsInput[] | UserUncheckedCreateWithoutConversationsInput[]
    connectOrCreate?: UserCreateOrConnectWithoutConversationsInput | UserCreateOrConnectWithoutConversationsInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutConversationsInput | UserUpsertWithWhereUniqueWithoutConversationsInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutConversationsInput | UserUpdateWithWhereUniqueWithoutConversationsInput[]
    updateMany?: UserUpdateManyWithWhereWithoutConversationsInput | UserUpdateManyWithWhereWithoutConversationsInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutConversationNestedInput = {
    create?: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput> | MessageCreateWithoutConversationInput[] | MessageUncheckedCreateWithoutConversationInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutConversationInput | MessageCreateOrConnectWithoutConversationInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutConversationInput | MessageUpsertWithWhereUniqueWithoutConversationInput[]
    createMany?: MessageCreateManyConversationInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutConversationInput | MessageUpdateWithWhereUniqueWithoutConversationInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutConversationInput | MessageUpdateManyWithWhereWithoutConversationInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ConversationCreateNestedOneWithoutMessagesInput = {
    create?: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ConversationCreateOrConnectWithoutMessagesInput
    connect?: ConversationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type MessagePurchaseCreateNestedManyWithoutMessageInput = {
    create?: XOR<MessagePurchaseCreateWithoutMessageInput, MessagePurchaseUncheckedCreateWithoutMessageInput> | MessagePurchaseCreateWithoutMessageInput[] | MessagePurchaseUncheckedCreateWithoutMessageInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutMessageInput | MessagePurchaseCreateOrConnectWithoutMessageInput[]
    createMany?: MessagePurchaseCreateManyMessageInputEnvelope
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
  }

  export type MessagePurchaseUncheckedCreateNestedManyWithoutMessageInput = {
    create?: XOR<MessagePurchaseCreateWithoutMessageInput, MessagePurchaseUncheckedCreateWithoutMessageInput> | MessagePurchaseCreateWithoutMessageInput[] | MessagePurchaseUncheckedCreateWithoutMessageInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutMessageInput | MessagePurchaseCreateOrConnectWithoutMessageInput[]
    createMany?: MessagePurchaseCreateManyMessageInputEnvelope
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
  }

  export type ConversationUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ConversationCreateOrConnectWithoutMessagesInput
    upsert?: ConversationUpsertWithoutMessagesInput
    connect?: ConversationWhereUniqueInput
    update?: XOR<XOR<ConversationUpdateToOneWithWhereWithoutMessagesInput, ConversationUpdateWithoutMessagesInput>, ConversationUncheckedUpdateWithoutMessagesInput>
  }

  export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    upsert?: UserUpsertWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentMessagesInput, UserUpdateWithoutSentMessagesInput>, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type MessagePurchaseUpdateManyWithoutMessageNestedInput = {
    create?: XOR<MessagePurchaseCreateWithoutMessageInput, MessagePurchaseUncheckedCreateWithoutMessageInput> | MessagePurchaseCreateWithoutMessageInput[] | MessagePurchaseUncheckedCreateWithoutMessageInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutMessageInput | MessagePurchaseCreateOrConnectWithoutMessageInput[]
    upsert?: MessagePurchaseUpsertWithWhereUniqueWithoutMessageInput | MessagePurchaseUpsertWithWhereUniqueWithoutMessageInput[]
    createMany?: MessagePurchaseCreateManyMessageInputEnvelope
    set?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    disconnect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    delete?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    update?: MessagePurchaseUpdateWithWhereUniqueWithoutMessageInput | MessagePurchaseUpdateWithWhereUniqueWithoutMessageInput[]
    updateMany?: MessagePurchaseUpdateManyWithWhereWithoutMessageInput | MessagePurchaseUpdateManyWithWhereWithoutMessageInput[]
    deleteMany?: MessagePurchaseScalarWhereInput | MessagePurchaseScalarWhereInput[]
  }

  export type MessagePurchaseUncheckedUpdateManyWithoutMessageNestedInput = {
    create?: XOR<MessagePurchaseCreateWithoutMessageInput, MessagePurchaseUncheckedCreateWithoutMessageInput> | MessagePurchaseCreateWithoutMessageInput[] | MessagePurchaseUncheckedCreateWithoutMessageInput[]
    connectOrCreate?: MessagePurchaseCreateOrConnectWithoutMessageInput | MessagePurchaseCreateOrConnectWithoutMessageInput[]
    upsert?: MessagePurchaseUpsertWithWhereUniqueWithoutMessageInput | MessagePurchaseUpsertWithWhereUniqueWithoutMessageInput[]
    createMany?: MessagePurchaseCreateManyMessageInputEnvelope
    set?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    disconnect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    delete?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    connect?: MessagePurchaseWhereUniqueInput | MessagePurchaseWhereUniqueInput[]
    update?: MessagePurchaseUpdateWithWhereUniqueWithoutMessageInput | MessagePurchaseUpdateWithWhereUniqueWithoutMessageInput[]
    updateMany?: MessagePurchaseUpdateManyWithWhereWithoutMessageInput | MessagePurchaseUpdateManyWithWhereWithoutMessageInput[]
    deleteMany?: MessagePurchaseScalarWhereInput | MessagePurchaseScalarWhereInput[]
  }

  export type MessageCreateNestedOneWithoutPurchasesInput = {
    create?: XOR<MessageCreateWithoutPurchasesInput, MessageUncheckedCreateWithoutPurchasesInput>
    connectOrCreate?: MessageCreateOrConnectWithoutPurchasesInput
    connect?: MessageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMessagePurchasesInput = {
    create?: XOR<UserCreateWithoutMessagePurchasesInput, UserUncheckedCreateWithoutMessagePurchasesInput>
    connectOrCreate?: UserCreateOrConnectWithoutMessagePurchasesInput
    connect?: UserWhereUniqueInput
  }

  export type MessageUpdateOneRequiredWithoutPurchasesNestedInput = {
    create?: XOR<MessageCreateWithoutPurchasesInput, MessageUncheckedCreateWithoutPurchasesInput>
    connectOrCreate?: MessageCreateOrConnectWithoutPurchasesInput
    upsert?: MessageUpsertWithoutPurchasesInput
    connect?: MessageWhereUniqueInput
    update?: XOR<XOR<MessageUpdateToOneWithWhereWithoutPurchasesInput, MessageUpdateWithoutPurchasesInput>, MessageUncheckedUpdateWithoutPurchasesInput>
  }

  export type UserUpdateOneRequiredWithoutMessagePurchasesNestedInput = {
    create?: XOR<UserCreateWithoutMessagePurchasesInput, UserUncheckedCreateWithoutMessagePurchasesInput>
    connectOrCreate?: UserCreateOrConnectWithoutMessagePurchasesInput
    upsert?: UserUpsertWithoutMessagePurchasesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMessagePurchasesInput, UserUpdateWithoutMessagePurchasesInput>, UserUncheckedUpdateWithoutMessagePurchasesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumSellTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.SellType | EnumSellTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSellTypeNullableFilter<$PrismaModel> | $Enums.SellType | null
  }

  export type NestedEnumAuctionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionStatus | EnumAuctionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionStatusFilter<$PrismaModel> | $Enums.AuctionStatus
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumSellTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SellType | EnumSellTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.SellType[] | ListEnumSellTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumSellTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.SellType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumSellTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumSellTypeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumAuctionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionStatus | EnumAuctionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionStatus[] | ListEnumAuctionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuctionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuctionStatusFilter<$PrismaModel>
    _max?: NestedEnumAuctionStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeFilter<$PrismaModel> | $Enums.TransactionType
  }

  export type NestedEnumTransactionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusFilter<$PrismaModel> | $Enums.TransactionStatus
  }

  export type NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionType | EnumTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionType[] | ListEnumTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.TransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumTransactionTypeFilter<$PrismaModel>
  }

  export type NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransactionStatus | EnumTransactionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransactionStatus[] | ListEnumTransactionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransactionStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransactionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransactionStatusFilter<$PrismaModel>
    _max?: NestedEnumTransactionStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type NestedEnumDepositStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DepositStatus | EnumDepositStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepositStatusFilter<$PrismaModel> | $Enums.DepositStatus
  }

  export type NestedEnumDepositStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DepositStatus | EnumDepositStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DepositStatus[] | ListEnumDepositStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDepositStatusWithAggregatesFilter<$PrismaModel> | $Enums.DepositStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDepositStatusFilter<$PrismaModel>
    _max?: NestedEnumDepositStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuctionPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionPaymentStatus | EnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionPaymentStatusFilter<$PrismaModel> | $Enums.AuctionPaymentStatus
  }

  export type NestedEnumAuctionPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuctionPaymentStatus | EnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuctionPaymentStatus[] | ListEnumAuctionPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuctionPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuctionPaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuctionPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumAuctionPaymentStatusFilter<$PrismaModel>
  }

  export type CommentCreateWithoutUserInput = {
    id?: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParentInput
    post: PostCreateNestedOneWithoutCommentsInput
    likes?: LikeCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParentInput
    likes?: LikeUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutUserInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput>
  }

  export type CommentCreateManyUserInputEnvelope = {
    data: CommentCreateManyUserInput | CommentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FollowCreateWithoutFollowerInput = {
    id?: string
    createdAt?: Date | string
    following: UserCreateNestedOneWithoutFollowersInput
  }

  export type FollowUncheckedCreateWithoutFollowerInput = {
    id?: string
    followingId: string
    createdAt?: Date | string
  }

  export type FollowCreateOrConnectWithoutFollowerInput = {
    where: FollowWhereUniqueInput
    create: XOR<FollowCreateWithoutFollowerInput, FollowUncheckedCreateWithoutFollowerInput>
  }

  export type FollowCreateManyFollowerInputEnvelope = {
    data: FollowCreateManyFollowerInput | FollowCreateManyFollowerInput[]
    skipDuplicates?: boolean
  }

  export type FollowCreateWithoutFollowingInput = {
    id?: string
    createdAt?: Date | string
    follower: UserCreateNestedOneWithoutFollowsInput
  }

  export type FollowUncheckedCreateWithoutFollowingInput = {
    id?: string
    followerId: string
    createdAt?: Date | string
  }

  export type FollowCreateOrConnectWithoutFollowingInput = {
    where: FollowWhereUniqueInput
    create: XOR<FollowCreateWithoutFollowingInput, FollowUncheckedCreateWithoutFollowingInput>
  }

  export type FollowCreateManyFollowingInputEnvelope = {
    data: FollowCreateManyFollowingInput | FollowCreateManyFollowingInput[]
    skipDuplicates?: boolean
  }

  export type LikeCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    comment?: CommentCreateNestedOneWithoutLikesInput
    post?: PostCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutUserInput = {
    id?: string
    postId?: string | null
    commentId?: string | null
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutUserInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  }

  export type LikeCreateManyUserInputEnvelope = {
    data: LikeCreateManyUserInput | LikeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutCreatorInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutCreatorInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutCreatorInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutCreatorInput, PostUncheckedCreateWithoutCreatorInput>
  }

  export type PostCreateManyCreatorInputEnvelope = {
    data: PostCreateManyCreatorInput | PostCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionCreateWithoutUserInput = {
    id?: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    creator: UserCreateNestedOneWithoutSubscribersInput
    transactions?: TransactionCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUncheckedCreateWithoutUserInput = {
    id?: string
    creatorId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    transactions?: TransactionUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionCreateOrConnectWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
  }

  export type SubscriptionCreateManyUserInputEnvelope = {
    data: SubscriptionCreateManyUserInput | SubscriptionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionCreateWithoutCreatorInput = {
    id?: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    user: UserCreateNestedOneWithoutSubscriptionsInput
    transactions?: TransactionCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionUncheckedCreateWithoutCreatorInput = {
    id?: string
    userId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    transactions?: TransactionUncheckedCreateNestedManyWithoutSubscriptionInput
  }

  export type SubscriptionCreateOrConnectWithoutCreatorInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutCreatorInput, SubscriptionUncheckedCreateWithoutCreatorInput>
  }

  export type SubscriptionCreateManyCreatorInputEnvelope = {
    data: SubscriptionCreateManyCreatorInput | SubscriptionCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type PostPurchaseCreateWithoutUserInput = {
    id?: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    post: PostCreateNestedOneWithoutPurchasesInput
    transaction?: TransactionCreateNestedOneWithoutPostPurchaseInput
  }

  export type PostPurchaseUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    transaction?: TransactionUncheckedCreateNestedOneWithoutPostPurchaseInput
  }

  export type PostPurchaseCreateOrConnectWithoutUserInput = {
    where: PostPurchaseWhereUniqueInput
    create: XOR<PostPurchaseCreateWithoutUserInput, PostPurchaseUncheckedCreateWithoutUserInput>
  }

  export type PostPurchaseCreateManyUserInputEnvelope = {
    data: PostPurchaseCreateManyUserInput | PostPurchaseCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutReferralsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReferralsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReferralsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReferralsInput, UserUncheckedCreateWithoutReferralsInput>
  }

  export type UserCreateWithoutReferrerInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReferrerInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReferrerInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput>
  }

  export type UserCreateManyReferrerInputEnvelope = {
    data: UserCreateManyReferrerInput | UserCreateManyReferrerInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserSettingsCreateWithoutUserInput = {
    id?: string
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsUncheckedCreateWithoutUserInput = {
    id?: string
    notifyComments?: boolean
    notifyLikes?: boolean
    notifyNewPosts?: boolean
    notifySubscriptions?: boolean
    showActivity?: boolean
    allowMessages?: boolean
    showOnlineStatus?: boolean
    theme?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsCreateOrConnectWithoutUserInput = {
    where: UserSettingsWhereUniqueInput
    create: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
  }

  export type CreatorTierSettingsCreateWithoutCreatorInput = {
    id?: string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CreatorTierSettingsUncheckedCreateWithoutCreatorInput = {
    id?: string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CreatorTierSettingsCreateOrConnectWithoutCreatorInput = {
    where: CreatorTierSettingsWhereUniqueInput
    create: XOR<CreatorTierSettingsCreateWithoutCreatorInput, CreatorTierSettingsUncheckedCreateWithoutCreatorInput>
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutSoldToInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutSoldToInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutSoldToInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutSoldToInput, PostUncheckedCreateWithoutSoldToInput>
  }

  export type PostCreateManySoldToInputEnvelope = {
    data: PostCreateManySoldToInput | PostCreateManySoldToInput[]
    skipDuplicates?: boolean
  }

  export type AuctionDepositCreateWithoutUserInput = {
    id?: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
    post: PostCreateNestedOneWithoutAuctionDepositsInput
  }

  export type AuctionDepositUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
  }

  export type AuctionDepositCreateOrConnectWithoutUserInput = {
    where: AuctionDepositWhereUniqueInput
    create: XOR<AuctionDepositCreateWithoutUserInput, AuctionDepositUncheckedCreateWithoutUserInput>
  }

  export type AuctionDepositCreateManyUserInputEnvelope = {
    data: AuctionDepositCreateManyUserInput | AuctionDepositCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AuctionBidCreateWithoutUserInput = {
    id?: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutAuctionBidsInput
  }

  export type AuctionBidUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
  }

  export type AuctionBidCreateOrConnectWithoutUserInput = {
    where: AuctionBidWhereUniqueInput
    create: XOR<AuctionBidCreateWithoutUserInput, AuctionBidUncheckedCreateWithoutUserInput>
  }

  export type AuctionBidCreateManyUserInputEnvelope = {
    data: AuctionBidCreateManyUserInput | AuctionBidCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AuctionPaymentCreateWithoutUserInput = {
    id?: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutAuctionPaymentInput
  }

  export type AuctionPaymentUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AuctionPaymentCreateOrConnectWithoutUserInput = {
    where: AuctionPaymentWhereUniqueInput
    create: XOR<AuctionPaymentCreateWithoutUserInput, AuctionPaymentUncheckedCreateWithoutUserInput>
  }

  export type AuctionPaymentCreateManyUserInputEnvelope = {
    data: AuctionPaymentCreateManyUserInput | AuctionPaymentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FlashSaleCreateWithoutCreatorInput = {
    id?: string
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    post?: PostCreateNestedOneWithoutFlashSalesInput
    redemptions?: FlashSaleRedemptionCreateNestedManyWithoutFlashSaleInput
  }

  export type FlashSaleUncheckedCreateWithoutCreatorInput = {
    id?: string
    postId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    redemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutFlashSaleInput
  }

  export type FlashSaleCreateOrConnectWithoutCreatorInput = {
    where: FlashSaleWhereUniqueInput
    create: XOR<FlashSaleCreateWithoutCreatorInput, FlashSaleUncheckedCreateWithoutCreatorInput>
  }

  export type FlashSaleCreateManyCreatorInputEnvelope = {
    data: FlashSaleCreateManyCreatorInput | FlashSaleCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type FlashSaleRedemptionCreateWithoutUserInput = {
    id?: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
    flashSale: FlashSaleCreateNestedOneWithoutRedemptionsInput
  }

  export type FlashSaleRedemptionUncheckedCreateWithoutUserInput = {
    id?: string
    flashSaleId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
  }

  export type FlashSaleRedemptionCreateOrConnectWithoutUserInput = {
    where: FlashSaleRedemptionWhereUniqueInput
    create: XOR<FlashSaleRedemptionCreateWithoutUserInput, FlashSaleRedemptionUncheckedCreateWithoutUserInput>
  }

  export type FlashSaleRedemptionCreateManyUserInputEnvelope = {
    data: FlashSaleRedemptionCreateManyUserInput | FlashSaleRedemptionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ConversationCreateWithoutParticipantsInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    messages?: MessageCreateNestedManyWithoutConversationInput
  }

  export type ConversationUncheckedCreateWithoutParticipantsInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutConversationInput
  }

  export type ConversationCreateOrConnectWithoutParticipantsInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutParticipantsInput, ConversationUncheckedCreateWithoutParticipantsInput>
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    purchases?: MessagePurchaseCreateNestedManyWithoutMessageInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    conversationId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    purchases?: MessagePurchaseUncheckedCreateNestedManyWithoutMessageInput
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type MessagePurchaseCreateWithoutUserInput = {
    id?: string
    amount: number
    txSignature: string
    createdAt?: Date | string
    message: MessageCreateNestedOneWithoutPurchasesInput
  }

  export type MessagePurchaseUncheckedCreateWithoutUserInput = {
    id?: string
    messageId: string
    amount: number
    txSignature: string
    createdAt?: Date | string
  }

  export type MessagePurchaseCreateOrConnectWithoutUserInput = {
    where: MessagePurchaseWhereUniqueInput
    create: XOR<MessagePurchaseCreateWithoutUserInput, MessagePurchaseUncheckedCreateWithoutUserInput>
  }

  export type MessagePurchaseCreateManyUserInputEnvelope = {
    data: MessagePurchaseCreateManyUserInput | MessagePurchaseCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CommentUpsertWithWhereUniqueWithoutUserInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutUserInput, CommentUncheckedUpdateWithoutUserInput>
    create: XOR<CommentCreateWithoutUserInput, CommentUncheckedCreateWithoutUserInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutUserInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutUserInput, CommentUncheckedUpdateWithoutUserInput>
  }

  export type CommentUpdateManyWithWhereWithoutUserInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutUserInput>
  }

  export type CommentScalarWhereInput = {
    AND?: CommentScalarWhereInput | CommentScalarWhereInput[]
    OR?: CommentScalarWhereInput[]
    NOT?: CommentScalarWhereInput | CommentScalarWhereInput[]
    id?: StringFilter<"Comment"> | string
    postId?: StringFilter<"Comment"> | string
    userId?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    isAnonymous?: BoolFilter<"Comment"> | boolean
    likesCount?: IntFilter<"Comment"> | number
    createdAt?: DateTimeFilter<"Comment"> | Date | string
    updatedAt?: DateTimeFilter<"Comment"> | Date | string
    parentId?: StringNullableFilter<"Comment"> | string | null
  }

  export type FollowUpsertWithWhereUniqueWithoutFollowerInput = {
    where: FollowWhereUniqueInput
    update: XOR<FollowUpdateWithoutFollowerInput, FollowUncheckedUpdateWithoutFollowerInput>
    create: XOR<FollowCreateWithoutFollowerInput, FollowUncheckedCreateWithoutFollowerInput>
  }

  export type FollowUpdateWithWhereUniqueWithoutFollowerInput = {
    where: FollowWhereUniqueInput
    data: XOR<FollowUpdateWithoutFollowerInput, FollowUncheckedUpdateWithoutFollowerInput>
  }

  export type FollowUpdateManyWithWhereWithoutFollowerInput = {
    where: FollowScalarWhereInput
    data: XOR<FollowUpdateManyMutationInput, FollowUncheckedUpdateManyWithoutFollowerInput>
  }

  export type FollowScalarWhereInput = {
    AND?: FollowScalarWhereInput | FollowScalarWhereInput[]
    OR?: FollowScalarWhereInput[]
    NOT?: FollowScalarWhereInput | FollowScalarWhereInput[]
    id?: StringFilter<"Follow"> | string
    followerId?: StringFilter<"Follow"> | string
    followingId?: StringFilter<"Follow"> | string
    createdAt?: DateTimeFilter<"Follow"> | Date | string
  }

  export type FollowUpsertWithWhereUniqueWithoutFollowingInput = {
    where: FollowWhereUniqueInput
    update: XOR<FollowUpdateWithoutFollowingInput, FollowUncheckedUpdateWithoutFollowingInput>
    create: XOR<FollowCreateWithoutFollowingInput, FollowUncheckedCreateWithoutFollowingInput>
  }

  export type FollowUpdateWithWhereUniqueWithoutFollowingInput = {
    where: FollowWhereUniqueInput
    data: XOR<FollowUpdateWithoutFollowingInput, FollowUncheckedUpdateWithoutFollowingInput>
  }

  export type FollowUpdateManyWithWhereWithoutFollowingInput = {
    where: FollowScalarWhereInput
    data: XOR<FollowUpdateManyMutationInput, FollowUncheckedUpdateManyWithoutFollowingInput>
  }

  export type LikeUpsertWithWhereUniqueWithoutUserInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutUserInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
  }

  export type LikeUpdateManyWithWhereWithoutUserInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutUserInput>
  }

  export type LikeScalarWhereInput = {
    AND?: LikeScalarWhereInput | LikeScalarWhereInput[]
    OR?: LikeScalarWhereInput[]
    NOT?: LikeScalarWhereInput | LikeScalarWhereInput[]
    id?: StringFilter<"Like"> | string
    userId?: StringFilter<"Like"> | string
    postId?: StringNullableFilter<"Like"> | string | null
    commentId?: StringNullableFilter<"Like"> | string | null
    createdAt?: DateTimeFilter<"Like"> | Date | string
  }

  export type PostUpsertWithWhereUniqueWithoutCreatorInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutCreatorInput, PostUncheckedUpdateWithoutCreatorInput>
    create: XOR<PostCreateWithoutCreatorInput, PostUncheckedCreateWithoutCreatorInput>
  }

  export type PostUpdateWithWhereUniqueWithoutCreatorInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutCreatorInput, PostUncheckedUpdateWithoutCreatorInput>
  }

  export type PostUpdateManyWithWhereWithoutCreatorInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutCreatorInput>
  }

  export type PostScalarWhereInput = {
    AND?: PostScalarWhereInput | PostScalarWhereInput[]
    OR?: PostScalarWhereInput[]
    NOT?: PostScalarWhereInput | PostScalarWhereInput[]
    id?: StringFilter<"Post"> | string
    creatorId?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    content?: StringFilter<"Post"> | string
    type?: StringFilter<"Post"> | string
    category?: StringNullableFilter<"Post"> | string | null
    thumbnail?: StringNullableFilter<"Post"> | string | null
    mediaUrl?: StringNullableFilter<"Post"> | string | null
    isLocked?: BoolFilter<"Post"> | boolean
    isPremium?: BoolFilter<"Post"> | boolean
    price?: FloatNullableFilter<"Post"> | number | null
    currency?: StringFilter<"Post"> | string
    minSubscriptionTier?: StringNullableFilter<"Post"> | string | null
    imageAspectRatio?: StringNullableFilter<"Post"> | string | null
    likesCount?: IntFilter<"Post"> | number
    commentsCount?: IntFilter<"Post"> | number
    viewsCount?: IntFilter<"Post"> | number
    createdAt?: DateTimeFilter<"Post"> | Date | string
    updatedAt?: DateTimeFilter<"Post"> | Date | string
    isSellable?: BoolFilter<"Post"> | boolean
    sellType?: EnumSellTypeNullableFilter<"Post"> | $Enums.SellType | null
    quantity?: IntNullableFilter<"Post"> | number | null
    auctionStartPrice?: FloatNullableFilter<"Post"> | number | null
    auctionStepPrice?: FloatNullableFilter<"Post"> | number | null
    auctionDepositAmount?: FloatNullableFilter<"Post"> | number | null
    auctionStartAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    auctionEndAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    auctionStatus?: EnumAuctionStatusFilter<"Post"> | $Enums.AuctionStatus
    soldAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    soldToId?: StringNullableFilter<"Post"> | string | null
    soldPrice?: FloatNullableFilter<"Post"> | number | null
    sellerConfirmedAt?: DateTimeNullableFilter<"Post"> | Date | string | null
  }

  export type SubscriptionUpsertWithWhereUniqueWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    update: XOR<SubscriptionUpdateWithoutUserInput, SubscriptionUncheckedUpdateWithoutUserInput>
    create: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
  }

  export type SubscriptionUpdateWithWhereUniqueWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    data: XOR<SubscriptionUpdateWithoutUserInput, SubscriptionUncheckedUpdateWithoutUserInput>
  }

  export type SubscriptionUpdateManyWithWhereWithoutUserInput = {
    where: SubscriptionScalarWhereInput
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyWithoutUserInput>
  }

  export type SubscriptionScalarWhereInput = {
    AND?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
    OR?: SubscriptionScalarWhereInput[]
    NOT?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
    id?: StringFilter<"Subscription"> | string
    userId?: StringFilter<"Subscription"> | string
    creatorId?: StringFilter<"Subscription"> | string
    plan?: StringFilter<"Subscription"> | string
    price?: FloatFilter<"Subscription"> | number
    currency?: StringFilter<"Subscription"> | string
    subscribedAt?: DateTimeFilter<"Subscription"> | Date | string
    validUntil?: DateTimeFilter<"Subscription"> | Date | string
    isActive?: BoolFilter<"Subscription"> | boolean
    txSignature?: StringNullableFilter<"Subscription"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"Subscription"> | $Enums.PaymentStatus
    paymentAmount?: FloatNullableFilter<"Subscription"> | number | null
    platformFee?: FloatNullableFilter<"Subscription"> | number | null
    referrerFee?: FloatNullableFilter<"Subscription"> | number | null
    creatorAmount?: FloatNullableFilter<"Subscription"> | number | null
  }

  export type SubscriptionUpsertWithWhereUniqueWithoutCreatorInput = {
    where: SubscriptionWhereUniqueInput
    update: XOR<SubscriptionUpdateWithoutCreatorInput, SubscriptionUncheckedUpdateWithoutCreatorInput>
    create: XOR<SubscriptionCreateWithoutCreatorInput, SubscriptionUncheckedCreateWithoutCreatorInput>
  }

  export type SubscriptionUpdateWithWhereUniqueWithoutCreatorInput = {
    where: SubscriptionWhereUniqueInput
    data: XOR<SubscriptionUpdateWithoutCreatorInput, SubscriptionUncheckedUpdateWithoutCreatorInput>
  }

  export type SubscriptionUpdateManyWithWhereWithoutCreatorInput = {
    where: SubscriptionScalarWhereInput
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyWithoutCreatorInput>
  }

  export type PostPurchaseUpsertWithWhereUniqueWithoutUserInput = {
    where: PostPurchaseWhereUniqueInput
    update: XOR<PostPurchaseUpdateWithoutUserInput, PostPurchaseUncheckedUpdateWithoutUserInput>
    create: XOR<PostPurchaseCreateWithoutUserInput, PostPurchaseUncheckedCreateWithoutUserInput>
  }

  export type PostPurchaseUpdateWithWhereUniqueWithoutUserInput = {
    where: PostPurchaseWhereUniqueInput
    data: XOR<PostPurchaseUpdateWithoutUserInput, PostPurchaseUncheckedUpdateWithoutUserInput>
  }

  export type PostPurchaseUpdateManyWithWhereWithoutUserInput = {
    where: PostPurchaseScalarWhereInput
    data: XOR<PostPurchaseUpdateManyMutationInput, PostPurchaseUncheckedUpdateManyWithoutUserInput>
  }

  export type PostPurchaseScalarWhereInput = {
    AND?: PostPurchaseScalarWhereInput | PostPurchaseScalarWhereInput[]
    OR?: PostPurchaseScalarWhereInput[]
    NOT?: PostPurchaseScalarWhereInput | PostPurchaseScalarWhereInput[]
    id?: StringFilter<"PostPurchase"> | string
    postId?: StringFilter<"PostPurchase"> | string
    userId?: StringFilter<"PostPurchase"> | string
    price?: FloatFilter<"PostPurchase"> | number
    currency?: StringFilter<"PostPurchase"> | string
    txSignature?: StringNullableFilter<"PostPurchase"> | string | null
    purchasedAt?: DateTimeFilter<"PostPurchase"> | Date | string
    paymentStatus?: EnumPaymentStatusFilter<"PostPurchase"> | $Enums.PaymentStatus
    platformFee?: FloatNullableFilter<"PostPurchase"> | number | null
    referrerFee?: FloatNullableFilter<"PostPurchase"> | number | null
    creatorAmount?: FloatNullableFilter<"PostPurchase"> | number | null
  }

  export type UserUpsertWithoutReferralsInput = {
    update: XOR<UserUpdateWithoutReferralsInput, UserUncheckedUpdateWithoutReferralsInput>
    create: XOR<UserCreateWithoutReferralsInput, UserUncheckedCreateWithoutReferralsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReferralsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReferralsInput, UserUncheckedUpdateWithoutReferralsInput>
  }

  export type UserUpdateWithoutReferralsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReferralsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutReferrerInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutReferrerInput, UserUncheckedUpdateWithoutReferrerInput>
    create: XOR<UserCreateWithoutReferrerInput, UserUncheckedCreateWithoutReferrerInput>
  }

  export type UserUpdateWithWhereUniqueWithoutReferrerInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutReferrerInput, UserUncheckedUpdateWithoutReferrerInput>
  }

  export type UserUpdateManyWithWhereWithoutReferrerInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutReferrerInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringNullableFilter<"User"> | string | null
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    name?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    nickname?: StringNullableFilter<"User"> | string | null
    fullName?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    avatar?: StringNullableFilter<"User"> | string | null
    backgroundImage?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    twitter?: StringNullableFilter<"User"> | string | null
    telegram?: StringNullableFilter<"User"> | string | null
    location?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    isVerified?: BoolFilter<"User"> | boolean
    isCreator?: BoolFilter<"User"> | boolean
    followersCount?: IntFilter<"User"> | number
    followingCount?: IntFilter<"User"> | number
    postsCount?: IntFilter<"User"> | number
    wallet?: StringNullableFilter<"User"> | string | null
    solanaWallet?: StringNullableFilter<"User"> | string | null
    referrerId?: StringNullableFilter<"User"> | string | null
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refresh_token?: StringNullableFilter<"Account"> | string | null
    access_token?: StringNullableFilter<"Account"> | string | null
    expires_at?: IntNullableFilter<"Account"> | number | null
    token_type?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    id_token?: StringNullableFilter<"Account"> | string | null
    session_state?: StringNullableFilter<"Account"> | string | null
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: StringFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
  }

  export type UserSettingsUpsertWithoutUserInput = {
    update: XOR<UserSettingsUpdateWithoutUserInput, UserSettingsUncheckedUpdateWithoutUserInput>
    create: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    where?: UserSettingsWhereInput
  }

  export type UserSettingsUpdateToOneWithWhereWithoutUserInput = {
    where?: UserSettingsWhereInput
    data: XOR<UserSettingsUpdateWithoutUserInput, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type UserSettingsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    notifyComments?: BoolFieldUpdateOperationsInput | boolean
    notifyLikes?: BoolFieldUpdateOperationsInput | boolean
    notifyNewPosts?: BoolFieldUpdateOperationsInput | boolean
    notifySubscriptions?: BoolFieldUpdateOperationsInput | boolean
    showActivity?: BoolFieldUpdateOperationsInput | boolean
    allowMessages?: BoolFieldUpdateOperationsInput | boolean
    showOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    theme?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    notifyComments?: BoolFieldUpdateOperationsInput | boolean
    notifyLikes?: BoolFieldUpdateOperationsInput | boolean
    notifyNewPosts?: BoolFieldUpdateOperationsInput | boolean
    notifySubscriptions?: BoolFieldUpdateOperationsInput | boolean
    showActivity?: BoolFieldUpdateOperationsInput | boolean
    allowMessages?: BoolFieldUpdateOperationsInput | boolean
    showOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    theme?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreatorTierSettingsUpsertWithoutCreatorInput = {
    update: XOR<CreatorTierSettingsUpdateWithoutCreatorInput, CreatorTierSettingsUncheckedUpdateWithoutCreatorInput>
    create: XOR<CreatorTierSettingsCreateWithoutCreatorInput, CreatorTierSettingsUncheckedCreateWithoutCreatorInput>
    where?: CreatorTierSettingsWhereInput
  }

  export type CreatorTierSettingsUpdateToOneWithWhereWithoutCreatorInput = {
    where?: CreatorTierSettingsWhereInput
    data: XOR<CreatorTierSettingsUpdateWithoutCreatorInput, CreatorTierSettingsUncheckedUpdateWithoutCreatorInput>
  }

  export type CreatorTierSettingsUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CreatorTierSettingsUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    basicTier?: NullableJsonNullValueInput | InputJsonValue
    premiumTier?: NullableJsonNullValueInput | InputJsonValue
    vipTier?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    metadata?: JsonNullableFilter<"Notification">
    createdAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type PostUpsertWithWhereUniqueWithoutSoldToInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutSoldToInput, PostUncheckedUpdateWithoutSoldToInput>
    create: XOR<PostCreateWithoutSoldToInput, PostUncheckedCreateWithoutSoldToInput>
  }

  export type PostUpdateWithWhereUniqueWithoutSoldToInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutSoldToInput, PostUncheckedUpdateWithoutSoldToInput>
  }

  export type PostUpdateManyWithWhereWithoutSoldToInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutSoldToInput>
  }

  export type AuctionDepositUpsertWithWhereUniqueWithoutUserInput = {
    where: AuctionDepositWhereUniqueInput
    update: XOR<AuctionDepositUpdateWithoutUserInput, AuctionDepositUncheckedUpdateWithoutUserInput>
    create: XOR<AuctionDepositCreateWithoutUserInput, AuctionDepositUncheckedCreateWithoutUserInput>
  }

  export type AuctionDepositUpdateWithWhereUniqueWithoutUserInput = {
    where: AuctionDepositWhereUniqueInput
    data: XOR<AuctionDepositUpdateWithoutUserInput, AuctionDepositUncheckedUpdateWithoutUserInput>
  }

  export type AuctionDepositUpdateManyWithWhereWithoutUserInput = {
    where: AuctionDepositScalarWhereInput
    data: XOR<AuctionDepositUpdateManyMutationInput, AuctionDepositUncheckedUpdateManyWithoutUserInput>
  }

  export type AuctionDepositScalarWhereInput = {
    AND?: AuctionDepositScalarWhereInput | AuctionDepositScalarWhereInput[]
    OR?: AuctionDepositScalarWhereInput[]
    NOT?: AuctionDepositScalarWhereInput | AuctionDepositScalarWhereInput[]
    id?: StringFilter<"AuctionDeposit"> | string
    postId?: StringFilter<"AuctionDeposit"> | string
    userId?: StringFilter<"AuctionDeposit"> | string
    amount?: FloatFilter<"AuctionDeposit"> | number
    txSignature?: StringFilter<"AuctionDeposit"> | string
    status?: EnumDepositStatusFilter<"AuctionDeposit"> | $Enums.DepositStatus
    createdAt?: DateTimeFilter<"AuctionDeposit"> | Date | string
    refundedAt?: DateTimeNullableFilter<"AuctionDeposit"> | Date | string | null
    refundTxSignature?: StringNullableFilter<"AuctionDeposit"> | string | null
    forfeitedAt?: DateTimeNullableFilter<"AuctionDeposit"> | Date | string | null
  }

  export type AuctionBidUpsertWithWhereUniqueWithoutUserInput = {
    where: AuctionBidWhereUniqueInput
    update: XOR<AuctionBidUpdateWithoutUserInput, AuctionBidUncheckedUpdateWithoutUserInput>
    create: XOR<AuctionBidCreateWithoutUserInput, AuctionBidUncheckedCreateWithoutUserInput>
  }

  export type AuctionBidUpdateWithWhereUniqueWithoutUserInput = {
    where: AuctionBidWhereUniqueInput
    data: XOR<AuctionBidUpdateWithoutUserInput, AuctionBidUncheckedUpdateWithoutUserInput>
  }

  export type AuctionBidUpdateManyWithWhereWithoutUserInput = {
    where: AuctionBidScalarWhereInput
    data: XOR<AuctionBidUpdateManyMutationInput, AuctionBidUncheckedUpdateManyWithoutUserInput>
  }

  export type AuctionBidScalarWhereInput = {
    AND?: AuctionBidScalarWhereInput | AuctionBidScalarWhereInput[]
    OR?: AuctionBidScalarWhereInput[]
    NOT?: AuctionBidScalarWhereInput | AuctionBidScalarWhereInput[]
    id?: StringFilter<"AuctionBid"> | string
    postId?: StringFilter<"AuctionBid"> | string
    userId?: StringFilter<"AuctionBid"> | string
    amount?: FloatFilter<"AuctionBid"> | number
    isWinning?: BoolFilter<"AuctionBid"> | boolean
    createdAt?: DateTimeFilter<"AuctionBid"> | Date | string
  }

  export type AuctionPaymentUpsertWithWhereUniqueWithoutUserInput = {
    where: AuctionPaymentWhereUniqueInput
    update: XOR<AuctionPaymentUpdateWithoutUserInput, AuctionPaymentUncheckedUpdateWithoutUserInput>
    create: XOR<AuctionPaymentCreateWithoutUserInput, AuctionPaymentUncheckedCreateWithoutUserInput>
  }

  export type AuctionPaymentUpdateWithWhereUniqueWithoutUserInput = {
    where: AuctionPaymentWhereUniqueInput
    data: XOR<AuctionPaymentUpdateWithoutUserInput, AuctionPaymentUncheckedUpdateWithoutUserInput>
  }

  export type AuctionPaymentUpdateManyWithWhereWithoutUserInput = {
    where: AuctionPaymentScalarWhereInput
    data: XOR<AuctionPaymentUpdateManyMutationInput, AuctionPaymentUncheckedUpdateManyWithoutUserInput>
  }

  export type AuctionPaymentScalarWhereInput = {
    AND?: AuctionPaymentScalarWhereInput | AuctionPaymentScalarWhereInput[]
    OR?: AuctionPaymentScalarWhereInput[]
    NOT?: AuctionPaymentScalarWhereInput | AuctionPaymentScalarWhereInput[]
    id?: StringFilter<"AuctionPayment"> | string
    postId?: StringFilter<"AuctionPayment"> | string
    userId?: StringFilter<"AuctionPayment"> | string
    amount?: FloatFilter<"AuctionPayment"> | number
    txSignature?: StringNullableFilter<"AuctionPayment"> | string | null
    status?: EnumAuctionPaymentStatusFilter<"AuctionPayment"> | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFilter<"AuctionPayment"> | Date | string
    paidAt?: DateTimeNullableFilter<"AuctionPayment"> | Date | string | null
    sellerConfirmedAt?: DateTimeNullableFilter<"AuctionPayment"> | Date | string | null
    createdAt?: DateTimeFilter<"AuctionPayment"> | Date | string
  }

  export type FlashSaleUpsertWithWhereUniqueWithoutCreatorInput = {
    where: FlashSaleWhereUniqueInput
    update: XOR<FlashSaleUpdateWithoutCreatorInput, FlashSaleUncheckedUpdateWithoutCreatorInput>
    create: XOR<FlashSaleCreateWithoutCreatorInput, FlashSaleUncheckedCreateWithoutCreatorInput>
  }

  export type FlashSaleUpdateWithWhereUniqueWithoutCreatorInput = {
    where: FlashSaleWhereUniqueInput
    data: XOR<FlashSaleUpdateWithoutCreatorInput, FlashSaleUncheckedUpdateWithoutCreatorInput>
  }

  export type FlashSaleUpdateManyWithWhereWithoutCreatorInput = {
    where: FlashSaleScalarWhereInput
    data: XOR<FlashSaleUpdateManyMutationInput, FlashSaleUncheckedUpdateManyWithoutCreatorInput>
  }

  export type FlashSaleScalarWhereInput = {
    AND?: FlashSaleScalarWhereInput | FlashSaleScalarWhereInput[]
    OR?: FlashSaleScalarWhereInput[]
    NOT?: FlashSaleScalarWhereInput | FlashSaleScalarWhereInput[]
    id?: StringFilter<"FlashSale"> | string
    creatorId?: StringNullableFilter<"FlashSale"> | string | null
    postId?: StringNullableFilter<"FlashSale"> | string | null
    subscriptionPlan?: StringNullableFilter<"FlashSale"> | string | null
    discount?: FloatFilter<"FlashSale"> | number
    maxRedemptions?: IntNullableFilter<"FlashSale"> | number | null
    usedCount?: IntFilter<"FlashSale"> | number
    startAt?: DateTimeFilter<"FlashSale"> | Date | string
    endAt?: DateTimeFilter<"FlashSale"> | Date | string
    isActive?: BoolFilter<"FlashSale"> | boolean
    createdAt?: DateTimeFilter<"FlashSale"> | Date | string
    updatedAt?: DateTimeFilter<"FlashSale"> | Date | string
  }

  export type FlashSaleRedemptionUpsertWithWhereUniqueWithoutUserInput = {
    where: FlashSaleRedemptionWhereUniqueInput
    update: XOR<FlashSaleRedemptionUpdateWithoutUserInput, FlashSaleRedemptionUncheckedUpdateWithoutUserInput>
    create: XOR<FlashSaleRedemptionCreateWithoutUserInput, FlashSaleRedemptionUncheckedCreateWithoutUserInput>
  }

  export type FlashSaleRedemptionUpdateWithWhereUniqueWithoutUserInput = {
    where: FlashSaleRedemptionWhereUniqueInput
    data: XOR<FlashSaleRedemptionUpdateWithoutUserInput, FlashSaleRedemptionUncheckedUpdateWithoutUserInput>
  }

  export type FlashSaleRedemptionUpdateManyWithWhereWithoutUserInput = {
    where: FlashSaleRedemptionScalarWhereInput
    data: XOR<FlashSaleRedemptionUpdateManyMutationInput, FlashSaleRedemptionUncheckedUpdateManyWithoutUserInput>
  }

  export type FlashSaleRedemptionScalarWhereInput = {
    AND?: FlashSaleRedemptionScalarWhereInput | FlashSaleRedemptionScalarWhereInput[]
    OR?: FlashSaleRedemptionScalarWhereInput[]
    NOT?: FlashSaleRedemptionScalarWhereInput | FlashSaleRedemptionScalarWhereInput[]
    id?: StringFilter<"FlashSaleRedemption"> | string
    flashSaleId?: StringFilter<"FlashSaleRedemption"> | string
    userId?: StringFilter<"FlashSaleRedemption"> | string
    originalPrice?: FloatFilter<"FlashSaleRedemption"> | number
    discountAmount?: FloatFilter<"FlashSaleRedemption"> | number
    finalPrice?: FloatFilter<"FlashSaleRedemption"> | number
    redeemedAt?: DateTimeFilter<"FlashSaleRedemption"> | Date | string
  }

  export type ConversationUpsertWithWhereUniqueWithoutParticipantsInput = {
    where: ConversationWhereUniqueInput
    update: XOR<ConversationUpdateWithoutParticipantsInput, ConversationUncheckedUpdateWithoutParticipantsInput>
    create: XOR<ConversationCreateWithoutParticipantsInput, ConversationUncheckedCreateWithoutParticipantsInput>
  }

  export type ConversationUpdateWithWhereUniqueWithoutParticipantsInput = {
    where: ConversationWhereUniqueInput
    data: XOR<ConversationUpdateWithoutParticipantsInput, ConversationUncheckedUpdateWithoutParticipantsInput>
  }

  export type ConversationUpdateManyWithWhereWithoutParticipantsInput = {
    where: ConversationScalarWhereInput
    data: XOR<ConversationUpdateManyMutationInput, ConversationUncheckedUpdateManyWithoutParticipantsInput>
  }

  export type ConversationScalarWhereInput = {
    AND?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
    OR?: ConversationScalarWhereInput[]
    NOT?: ConversationScalarWhereInput | ConversationScalarWhereInput[]
    id?: StringFilter<"Conversation"> | string
    lastMessageAt?: DateTimeNullableFilter<"Conversation"> | Date | string | null
    createdAt?: DateTimeFilter<"Conversation"> | Date | string
    updatedAt?: DateTimeFilter<"Conversation"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    conversationId?: StringFilter<"Message"> | string
    senderId?: StringFilter<"Message"> | string
    content?: StringNullableFilter<"Message"> | string | null
    mediaUrl?: StringNullableFilter<"Message"> | string | null
    mediaType?: StringNullableFilter<"Message"> | string | null
    isPaid?: BoolFilter<"Message"> | boolean
    price?: FloatNullableFilter<"Message"> | number | null
    isRead?: BoolFilter<"Message"> | boolean
    metadata?: JsonNullableFilter<"Message">
    createdAt?: DateTimeFilter<"Message"> | Date | string
  }

  export type MessagePurchaseUpsertWithWhereUniqueWithoutUserInput = {
    where: MessagePurchaseWhereUniqueInput
    update: XOR<MessagePurchaseUpdateWithoutUserInput, MessagePurchaseUncheckedUpdateWithoutUserInput>
    create: XOR<MessagePurchaseCreateWithoutUserInput, MessagePurchaseUncheckedCreateWithoutUserInput>
  }

  export type MessagePurchaseUpdateWithWhereUniqueWithoutUserInput = {
    where: MessagePurchaseWhereUniqueInput
    data: XOR<MessagePurchaseUpdateWithoutUserInput, MessagePurchaseUncheckedUpdateWithoutUserInput>
  }

  export type MessagePurchaseUpdateManyWithWhereWithoutUserInput = {
    where: MessagePurchaseScalarWhereInput
    data: XOR<MessagePurchaseUpdateManyMutationInput, MessagePurchaseUncheckedUpdateManyWithoutUserInput>
  }

  export type MessagePurchaseScalarWhereInput = {
    AND?: MessagePurchaseScalarWhereInput | MessagePurchaseScalarWhereInput[]
    OR?: MessagePurchaseScalarWhereInput[]
    NOT?: MessagePurchaseScalarWhereInput | MessagePurchaseScalarWhereInput[]
    id?: StringFilter<"MessagePurchase"> | string
    messageId?: StringFilter<"MessagePurchase"> | string
    userId?: StringFilter<"MessagePurchase"> | string
    amount?: FloatFilter<"MessagePurchase"> | number
    txSignature?: StringFilter<"MessagePurchase"> | string
    createdAt?: DateTimeFilter<"MessagePurchase"> | Date | string
  }

  export type UserCreateWithoutPurchasedSellablePostsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPurchasedSellablePostsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPurchasedSellablePostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPurchasedSellablePostsInput, UserUncheckedCreateWithoutPurchasedSellablePostsInput>
  }

  export type CommentCreateWithoutPostInput = {
    id?: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParentInput
    user: UserCreateNestedOneWithoutCommentsInput
    likes?: LikeCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParentInput
    likes?: LikeUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutPostInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput>
  }

  export type CommentCreateManyPostInputEnvelope = {
    data: CommentCreateManyPostInput | CommentCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type LikeCreateWithoutPostInput = {
    id?: string
    createdAt?: Date | string
    comment?: CommentCreateNestedOneWithoutLikesInput
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    commentId?: string | null
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutPostInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput>
  }

  export type LikeCreateManyPostInputEnvelope = {
    data: LikeCreateManyPostInput | LikeCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type PostTagCreateWithoutPostInput = {
    tag: TagCreateNestedOneWithoutPostsInput
  }

  export type PostTagUncheckedCreateWithoutPostInput = {
    tagId: string
  }

  export type PostTagCreateOrConnectWithoutPostInput = {
    where: PostTagWhereUniqueInput
    create: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput>
  }

  export type PostTagCreateManyPostInputEnvelope = {
    data: PostTagCreateManyPostInput | PostTagCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutPostsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPostsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
  }

  export type PostPurchaseCreateWithoutPostInput = {
    id?: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    user: UserCreateNestedOneWithoutPostPurchasesInput
    transaction?: TransactionCreateNestedOneWithoutPostPurchaseInput
  }

  export type PostPurchaseUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    transaction?: TransactionUncheckedCreateNestedOneWithoutPostPurchaseInput
  }

  export type PostPurchaseCreateOrConnectWithoutPostInput = {
    where: PostPurchaseWhereUniqueInput
    create: XOR<PostPurchaseCreateWithoutPostInput, PostPurchaseUncheckedCreateWithoutPostInput>
  }

  export type PostPurchaseCreateManyPostInputEnvelope = {
    data: PostPurchaseCreateManyPostInput | PostPurchaseCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type AuctionDepositCreateWithoutPostInput = {
    id?: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
    user: UserCreateNestedOneWithoutAuctionDepositsInput
  }

  export type AuctionDepositUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
  }

  export type AuctionDepositCreateOrConnectWithoutPostInput = {
    where: AuctionDepositWhereUniqueInput
    create: XOR<AuctionDepositCreateWithoutPostInput, AuctionDepositUncheckedCreateWithoutPostInput>
  }

  export type AuctionDepositCreateManyPostInputEnvelope = {
    data: AuctionDepositCreateManyPostInput | AuctionDepositCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type AuctionBidCreateWithoutPostInput = {
    id?: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutAuctionBidsInput
  }

  export type AuctionBidUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
  }

  export type AuctionBidCreateOrConnectWithoutPostInput = {
    where: AuctionBidWhereUniqueInput
    create: XOR<AuctionBidCreateWithoutPostInput, AuctionBidUncheckedCreateWithoutPostInput>
  }

  export type AuctionBidCreateManyPostInputEnvelope = {
    data: AuctionBidCreateManyPostInput | AuctionBidCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type AuctionPaymentCreateWithoutPostInput = {
    id?: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutAuctionPaymentsInput
  }

  export type AuctionPaymentUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type AuctionPaymentCreateOrConnectWithoutPostInput = {
    where: AuctionPaymentWhereUniqueInput
    create: XOR<AuctionPaymentCreateWithoutPostInput, AuctionPaymentUncheckedCreateWithoutPostInput>
  }

  export type FlashSaleCreateWithoutPostInput = {
    id?: string
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    creator?: UserCreateNestedOneWithoutFlashSalesInput
    redemptions?: FlashSaleRedemptionCreateNestedManyWithoutFlashSaleInput
  }

  export type FlashSaleUncheckedCreateWithoutPostInput = {
    id?: string
    creatorId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    redemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutFlashSaleInput
  }

  export type FlashSaleCreateOrConnectWithoutPostInput = {
    where: FlashSaleWhereUniqueInput
    create: XOR<FlashSaleCreateWithoutPostInput, FlashSaleUncheckedCreateWithoutPostInput>
  }

  export type FlashSaleCreateManyPostInputEnvelope = {
    data: FlashSaleCreateManyPostInput | FlashSaleCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPurchasedSellablePostsInput = {
    update: XOR<UserUpdateWithoutPurchasedSellablePostsInput, UserUncheckedUpdateWithoutPurchasedSellablePostsInput>
    create: XOR<UserCreateWithoutPurchasedSellablePostsInput, UserUncheckedCreateWithoutPurchasedSellablePostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPurchasedSellablePostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPurchasedSellablePostsInput, UserUncheckedUpdateWithoutPurchasedSellablePostsInput>
  }

  export type UserUpdateWithoutPurchasedSellablePostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPurchasedSellablePostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutPostInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutPostInput, CommentUncheckedUpdateWithoutPostInput>
    create: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutPostInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutPostInput, CommentUncheckedUpdateWithoutPostInput>
  }

  export type CommentUpdateManyWithWhereWithoutPostInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutPostInput>
  }

  export type LikeUpsertWithWhereUniqueWithoutPostInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutPostInput, LikeUncheckedUpdateWithoutPostInput>
    create: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutPostInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutPostInput, LikeUncheckedUpdateWithoutPostInput>
  }

  export type LikeUpdateManyWithWhereWithoutPostInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutPostInput>
  }

  export type PostTagUpsertWithWhereUniqueWithoutPostInput = {
    where: PostTagWhereUniqueInput
    update: XOR<PostTagUpdateWithoutPostInput, PostTagUncheckedUpdateWithoutPostInput>
    create: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput>
  }

  export type PostTagUpdateWithWhereUniqueWithoutPostInput = {
    where: PostTagWhereUniqueInput
    data: XOR<PostTagUpdateWithoutPostInput, PostTagUncheckedUpdateWithoutPostInput>
  }

  export type PostTagUpdateManyWithWhereWithoutPostInput = {
    where: PostTagScalarWhereInput
    data: XOR<PostTagUpdateManyMutationInput, PostTagUncheckedUpdateManyWithoutPostInput>
  }

  export type PostTagScalarWhereInput = {
    AND?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
    OR?: PostTagScalarWhereInput[]
    NOT?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
    postId?: StringFilter<"PostTag"> | string
    tagId?: StringFilter<"PostTag"> | string
  }

  export type UserUpsertWithoutPostsInput = {
    update: XOR<UserUpdateWithoutPostsInput, UserUncheckedUpdateWithoutPostsInput>
    create: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPostsInput, UserUncheckedUpdateWithoutPostsInput>
  }

  export type UserUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PostPurchaseUpsertWithWhereUniqueWithoutPostInput = {
    where: PostPurchaseWhereUniqueInput
    update: XOR<PostPurchaseUpdateWithoutPostInput, PostPurchaseUncheckedUpdateWithoutPostInput>
    create: XOR<PostPurchaseCreateWithoutPostInput, PostPurchaseUncheckedCreateWithoutPostInput>
  }

  export type PostPurchaseUpdateWithWhereUniqueWithoutPostInput = {
    where: PostPurchaseWhereUniqueInput
    data: XOR<PostPurchaseUpdateWithoutPostInput, PostPurchaseUncheckedUpdateWithoutPostInput>
  }

  export type PostPurchaseUpdateManyWithWhereWithoutPostInput = {
    where: PostPurchaseScalarWhereInput
    data: XOR<PostPurchaseUpdateManyMutationInput, PostPurchaseUncheckedUpdateManyWithoutPostInput>
  }

  export type AuctionDepositUpsertWithWhereUniqueWithoutPostInput = {
    where: AuctionDepositWhereUniqueInput
    update: XOR<AuctionDepositUpdateWithoutPostInput, AuctionDepositUncheckedUpdateWithoutPostInput>
    create: XOR<AuctionDepositCreateWithoutPostInput, AuctionDepositUncheckedCreateWithoutPostInput>
  }

  export type AuctionDepositUpdateWithWhereUniqueWithoutPostInput = {
    where: AuctionDepositWhereUniqueInput
    data: XOR<AuctionDepositUpdateWithoutPostInput, AuctionDepositUncheckedUpdateWithoutPostInput>
  }

  export type AuctionDepositUpdateManyWithWhereWithoutPostInput = {
    where: AuctionDepositScalarWhereInput
    data: XOR<AuctionDepositUpdateManyMutationInput, AuctionDepositUncheckedUpdateManyWithoutPostInput>
  }

  export type AuctionBidUpsertWithWhereUniqueWithoutPostInput = {
    where: AuctionBidWhereUniqueInput
    update: XOR<AuctionBidUpdateWithoutPostInput, AuctionBidUncheckedUpdateWithoutPostInput>
    create: XOR<AuctionBidCreateWithoutPostInput, AuctionBidUncheckedCreateWithoutPostInput>
  }

  export type AuctionBidUpdateWithWhereUniqueWithoutPostInput = {
    where: AuctionBidWhereUniqueInput
    data: XOR<AuctionBidUpdateWithoutPostInput, AuctionBidUncheckedUpdateWithoutPostInput>
  }

  export type AuctionBidUpdateManyWithWhereWithoutPostInput = {
    where: AuctionBidScalarWhereInput
    data: XOR<AuctionBidUpdateManyMutationInput, AuctionBidUncheckedUpdateManyWithoutPostInput>
  }

  export type AuctionPaymentUpsertWithoutPostInput = {
    update: XOR<AuctionPaymentUpdateWithoutPostInput, AuctionPaymentUncheckedUpdateWithoutPostInput>
    create: XOR<AuctionPaymentCreateWithoutPostInput, AuctionPaymentUncheckedCreateWithoutPostInput>
    where?: AuctionPaymentWhereInput
  }

  export type AuctionPaymentUpdateToOneWithWhereWithoutPostInput = {
    where?: AuctionPaymentWhereInput
    data: XOR<AuctionPaymentUpdateWithoutPostInput, AuctionPaymentUncheckedUpdateWithoutPostInput>
  }

  export type AuctionPaymentUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAuctionPaymentsNestedInput
  }

  export type AuctionPaymentUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleUpsertWithWhereUniqueWithoutPostInput = {
    where: FlashSaleWhereUniqueInput
    update: XOR<FlashSaleUpdateWithoutPostInput, FlashSaleUncheckedUpdateWithoutPostInput>
    create: XOR<FlashSaleCreateWithoutPostInput, FlashSaleUncheckedCreateWithoutPostInput>
  }

  export type FlashSaleUpdateWithWhereUniqueWithoutPostInput = {
    where: FlashSaleWhereUniqueInput
    data: XOR<FlashSaleUpdateWithoutPostInput, FlashSaleUncheckedUpdateWithoutPostInput>
  }

  export type FlashSaleUpdateManyWithWhereWithoutPostInput = {
    where: FlashSaleScalarWhereInput
    data: XOR<FlashSaleUpdateManyMutationInput, FlashSaleUncheckedUpdateManyWithoutPostInput>
  }

  export type PostTagCreateWithoutTagInput = {
    post: PostCreateNestedOneWithoutTagsInput
  }

  export type PostTagUncheckedCreateWithoutTagInput = {
    postId: string
  }

  export type PostTagCreateOrConnectWithoutTagInput = {
    where: PostTagWhereUniqueInput
    create: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput>
  }

  export type PostTagCreateManyTagInputEnvelope = {
    data: PostTagCreateManyTagInput | PostTagCreateManyTagInput[]
    skipDuplicates?: boolean
  }

  export type PostTagUpsertWithWhereUniqueWithoutTagInput = {
    where: PostTagWhereUniqueInput
    update: XOR<PostTagUpdateWithoutTagInput, PostTagUncheckedUpdateWithoutTagInput>
    create: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput>
  }

  export type PostTagUpdateWithWhereUniqueWithoutTagInput = {
    where: PostTagWhereUniqueInput
    data: XOR<PostTagUpdateWithoutTagInput, PostTagUncheckedUpdateWithoutTagInput>
  }

  export type PostTagUpdateManyWithWhereWithoutTagInput = {
    where: PostTagScalarWhereInput
    data: XOR<PostTagUpdateManyMutationInput, PostTagUncheckedUpdateManyWithoutTagInput>
  }

  export type PostCreateWithoutTagsInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutTagsInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutTagsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
  }

  export type TagCreateWithoutPostsInput = {
    id?: string
    name: string
  }

  export type TagUncheckedCreateWithoutPostsInput = {
    id?: string
    name: string
  }

  export type TagCreateOrConnectWithoutPostsInput = {
    where: TagWhereUniqueInput
    create: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
  }

  export type PostUpsertWithoutTagsInput = {
    update: XOR<PostUpdateWithoutTagsInput, PostUncheckedUpdateWithoutTagsInput>
    create: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutTagsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutTagsInput, PostUncheckedUpdateWithoutTagsInput>
  }

  export type PostUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type TagUpsertWithoutPostsInput = {
    update: XOR<TagUpdateWithoutPostsInput, TagUncheckedUpdateWithoutPostsInput>
    create: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
    where?: TagWhereInput
  }

  export type TagUpdateToOneWithWhereWithoutPostsInput = {
    where?: TagWhereInput
    data: XOR<TagUpdateWithoutPostsInput, TagUncheckedUpdateWithoutPostsInput>
  }

  export type TagUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TagUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCreateWithoutRepliesInput = {
    id?: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CommentCreateNestedOneWithoutRepliesInput
    post: PostCreateNestedOneWithoutCommentsInput
    user: UserCreateNestedOneWithoutCommentsInput
    likes?: LikeCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutRepliesInput = {
    id?: string
    postId: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
    likes?: LikeUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutRepliesInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
  }

  export type CommentCreateWithoutParentInput = {
    id?: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: CommentCreateNestedManyWithoutParentInput
    post: PostCreateNestedOneWithoutCommentsInput
    user: UserCreateNestedOneWithoutCommentsInput
    likes?: LikeCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutParentInput = {
    id?: string
    postId: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    replies?: CommentUncheckedCreateNestedManyWithoutParentInput
    likes?: LikeUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutParentInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutParentInput, CommentUncheckedCreateWithoutParentInput>
  }

  export type CommentCreateManyParentInputEnvelope = {
    data: CommentCreateManyParentInput | CommentCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutCommentsInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutCommentsInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutCommentsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
  }

  export type UserCreateWithoutCommentsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCommentsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCommentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
  }

  export type LikeCreateWithoutCommentInput = {
    id?: string
    createdAt?: Date | string
    post?: PostCreateNestedOneWithoutLikesInput
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutCommentInput = {
    id?: string
    userId: string
    postId?: string | null
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutCommentInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutCommentInput, LikeUncheckedCreateWithoutCommentInput>
  }

  export type LikeCreateManyCommentInputEnvelope = {
    data: LikeCreateManyCommentInput | LikeCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type CommentUpsertWithoutRepliesInput = {
    update: XOR<CommentUpdateWithoutRepliesInput, CommentUncheckedUpdateWithoutRepliesInput>
    create: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutRepliesInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutRepliesInput, CommentUncheckedUpdateWithoutRepliesInput>
  }

  export type CommentUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CommentUpdateOneWithoutRepliesNestedInput
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
    likes?: LikeUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutRepliesInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    likes?: LikeUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutParentInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutParentInput, CommentUncheckedUpdateWithoutParentInput>
    create: XOR<CommentCreateWithoutParentInput, CommentUncheckedCreateWithoutParentInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutParentInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutParentInput, CommentUncheckedUpdateWithoutParentInput>
  }

  export type CommentUpdateManyWithWhereWithoutParentInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutParentInput>
  }

  export type PostUpsertWithoutCommentsInput = {
    update: XOR<PostUpdateWithoutCommentsInput, PostUncheckedUpdateWithoutCommentsInput>
    create: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutCommentsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutCommentsInput, PostUncheckedUpdateWithoutCommentsInput>
  }

  export type PostUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutCommentsInput = {
    update: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type LikeUpsertWithWhereUniqueWithoutCommentInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutCommentInput, LikeUncheckedUpdateWithoutCommentInput>
    create: XOR<LikeCreateWithoutCommentInput, LikeUncheckedCreateWithoutCommentInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutCommentInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutCommentInput, LikeUncheckedUpdateWithoutCommentInput>
  }

  export type LikeUpdateManyWithWhereWithoutCommentInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutCommentInput>
  }

  export type CommentCreateWithoutLikesInput = {
    id?: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParentInput
    post: PostCreateNestedOneWithoutCommentsInput
    user: UserCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateWithoutLikesInput = {
    id?: string
    postId: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParentInput
  }

  export type CommentCreateOrConnectWithoutLikesInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutLikesInput, CommentUncheckedCreateWithoutLikesInput>
  }

  export type PostCreateWithoutLikesInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutLikesInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutLikesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
  }

  export type UserCreateWithoutLikesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLikesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLikesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
  }

  export type CommentUpsertWithoutLikesInput = {
    update: XOR<CommentUpdateWithoutLikesInput, CommentUncheckedUpdateWithoutLikesInput>
    create: XOR<CommentCreateWithoutLikesInput, CommentUncheckedCreateWithoutLikesInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutLikesInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutLikesInput, CommentUncheckedUpdateWithoutLikesInput>
  }

  export type CommentUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParentNestedInput
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type PostUpsertWithoutLikesInput = {
    update: XOR<PostUpdateWithoutLikesInput, PostUncheckedUpdateWithoutLikesInput>
    create: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutLikesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutLikesInput, PostUncheckedUpdateWithoutLikesInput>
  }

  export type PostUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutLikesInput = {
    update: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLikesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
  }

  export type UserUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSubscriptionsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubscriptionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
  }

  export type UserCreateWithoutSubscribersInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubscribersInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubscribersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubscribersInput, UserUncheckedCreateWithoutSubscribersInput>
  }

  export type TransactionCreateWithoutSubscriptionInput = {
    id?: string
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    postPurchase?: PostPurchaseCreateNestedOneWithoutTransactionInput
  }

  export type TransactionUncheckedCreateWithoutSubscriptionInput = {
    id?: string
    postPurchaseId?: string | null
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionCreateOrConnectWithoutSubscriptionInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutSubscriptionInput, TransactionUncheckedCreateWithoutSubscriptionInput>
  }

  export type TransactionCreateManySubscriptionInputEnvelope = {
    data: TransactionCreateManySubscriptionInput | TransactionCreateManySubscriptionInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutSubscriptionsInput = {
    update: XOR<UserUpdateWithoutSubscriptionsInput, UserUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubscriptionsInput, UserUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type UserUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutSubscribersInput = {
    update: XOR<UserUpdateWithoutSubscribersInput, UserUncheckedUpdateWithoutSubscribersInput>
    create: XOR<UserCreateWithoutSubscribersInput, UserUncheckedCreateWithoutSubscribersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubscribersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubscribersInput, UserUncheckedUpdateWithoutSubscribersInput>
  }

  export type UserUpdateWithoutSubscribersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubscribersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TransactionUpsertWithWhereUniqueWithoutSubscriptionInput = {
    where: TransactionWhereUniqueInput
    update: XOR<TransactionUpdateWithoutSubscriptionInput, TransactionUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<TransactionCreateWithoutSubscriptionInput, TransactionUncheckedCreateWithoutSubscriptionInput>
  }

  export type TransactionUpdateWithWhereUniqueWithoutSubscriptionInput = {
    where: TransactionWhereUniqueInput
    data: XOR<TransactionUpdateWithoutSubscriptionInput, TransactionUncheckedUpdateWithoutSubscriptionInput>
  }

  export type TransactionUpdateManyWithWhereWithoutSubscriptionInput = {
    where: TransactionScalarWhereInput
    data: XOR<TransactionUpdateManyMutationInput, TransactionUncheckedUpdateManyWithoutSubscriptionInput>
  }

  export type TransactionScalarWhereInput = {
    AND?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
    OR?: TransactionScalarWhereInput[]
    NOT?: TransactionScalarWhereInput | TransactionScalarWhereInput[]
    id?: StringFilter<"Transaction"> | string
    subscriptionId?: StringNullableFilter<"Transaction"> | string | null
    postPurchaseId?: StringNullableFilter<"Transaction"> | string | null
    txSignature?: StringFilter<"Transaction"> | string
    fromWallet?: StringFilter<"Transaction"> | string
    toWallet?: StringFilter<"Transaction"> | string
    amount?: FloatFilter<"Transaction"> | number
    currency?: StringFilter<"Transaction"> | string
    type?: EnumTransactionTypeFilter<"Transaction"> | $Enums.TransactionType
    status?: EnumTransactionStatusFilter<"Transaction"> | $Enums.TransactionStatus
    senderId?: StringNullableFilter<"Transaction"> | string | null
    receiverId?: StringNullableFilter<"Transaction"> | string | null
    platformFee?: FloatNullableFilter<"Transaction"> | number | null
    referrerFee?: FloatNullableFilter<"Transaction"> | number | null
    referrerWallet?: StringNullableFilter<"Transaction"> | string | null
    metadata?: JsonNullableFilter<"Transaction">
    errorMessage?: StringNullableFilter<"Transaction"> | string | null
    confirmedAt?: DateTimeNullableFilter<"Transaction"> | Date | string | null
    createdAt?: DateTimeFilter<"Transaction"> | Date | string
    updatedAt?: DateTimeFilter<"Transaction"> | Date | string
  }

  export type UserCreateWithoutFollowsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFollowsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFollowsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFollowsInput, UserUncheckedCreateWithoutFollowsInput>
  }

  export type UserCreateWithoutFollowersInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFollowersInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFollowersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFollowersInput, UserUncheckedCreateWithoutFollowersInput>
  }

  export type UserUpsertWithoutFollowsInput = {
    update: XOR<UserUpdateWithoutFollowsInput, UserUncheckedUpdateWithoutFollowsInput>
    create: XOR<UserCreateWithoutFollowsInput, UserUncheckedCreateWithoutFollowsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFollowsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFollowsInput, UserUncheckedUpdateWithoutFollowsInput>
  }

  export type UserUpdateWithoutFollowsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFollowsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutFollowersInput = {
    update: XOR<UserUpdateWithoutFollowersInput, UserUncheckedUpdateWithoutFollowersInput>
    create: XOR<UserCreateWithoutFollowersInput, UserUncheckedCreateWithoutFollowersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFollowersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFollowersInput, UserUncheckedUpdateWithoutFollowersInput>
  }

  export type UserUpdateWithoutFollowersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFollowersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SubscriptionCreateWithoutTransactionsInput = {
    id?: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    user: UserCreateNestedOneWithoutSubscriptionsInput
    creator: UserCreateNestedOneWithoutSubscribersInput
  }

  export type SubscriptionUncheckedCreateWithoutTransactionsInput = {
    id?: string
    userId: string
    creatorId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type SubscriptionCreateOrConnectWithoutTransactionsInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutTransactionsInput, SubscriptionUncheckedCreateWithoutTransactionsInput>
  }

  export type PostPurchaseCreateWithoutTransactionInput = {
    id?: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
    post: PostCreateNestedOneWithoutPurchasesInput
    user: UserCreateNestedOneWithoutPostPurchasesInput
  }

  export type PostPurchaseUncheckedCreateWithoutTransactionInput = {
    id?: string
    postId: string
    userId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type PostPurchaseCreateOrConnectWithoutTransactionInput = {
    where: PostPurchaseWhereUniqueInput
    create: XOR<PostPurchaseCreateWithoutTransactionInput, PostPurchaseUncheckedCreateWithoutTransactionInput>
  }

  export type SubscriptionUpsertWithoutTransactionsInput = {
    update: XOR<SubscriptionUpdateWithoutTransactionsInput, SubscriptionUncheckedUpdateWithoutTransactionsInput>
    create: XOR<SubscriptionCreateWithoutTransactionsInput, SubscriptionUncheckedCreateWithoutTransactionsInput>
    where?: SubscriptionWhereInput
  }

  export type SubscriptionUpdateToOneWithWhereWithoutTransactionsInput = {
    where?: SubscriptionWhereInput
    data: XOR<SubscriptionUpdateWithoutTransactionsInput, SubscriptionUncheckedUpdateWithoutTransactionsInput>
  }

  export type SubscriptionUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneRequiredWithoutSubscriptionsNestedInput
    creator?: UserUpdateOneRequiredWithoutSubscribersNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type PostPurchaseUpsertWithoutTransactionInput = {
    update: XOR<PostPurchaseUpdateWithoutTransactionInput, PostPurchaseUncheckedUpdateWithoutTransactionInput>
    create: XOR<PostPurchaseCreateWithoutTransactionInput, PostPurchaseUncheckedCreateWithoutTransactionInput>
    where?: PostPurchaseWhereInput
  }

  export type PostPurchaseUpdateToOneWithWhereWithoutTransactionInput = {
    where?: PostPurchaseWhereInput
    data: XOR<PostPurchaseUpdateWithoutTransactionInput, PostPurchaseUncheckedUpdateWithoutTransactionInput>
  }

  export type PostPurchaseUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    post?: PostUpdateOneRequiredWithoutPurchasesNestedInput
    user?: UserUpdateOneRequiredWithoutPostPurchasesNestedInput
  }

  export type PostPurchaseUncheckedUpdateWithoutTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type UserCreateWithoutAccountsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PostCreateWithoutPurchasesInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutPurchasesInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutPurchasesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutPurchasesInput, PostUncheckedCreateWithoutPurchasesInput>
  }

  export type UserCreateWithoutPostPurchasesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPostPurchasesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPostPurchasesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPostPurchasesInput, UserUncheckedCreateWithoutPostPurchasesInput>
  }

  export type TransactionCreateWithoutPostPurchaseInput = {
    id?: string
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    subscription?: SubscriptionCreateNestedOneWithoutTransactionsInput
  }

  export type TransactionUncheckedCreateWithoutPostPurchaseInput = {
    id?: string
    subscriptionId?: string | null
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionCreateOrConnectWithoutPostPurchaseInput = {
    where: TransactionWhereUniqueInput
    create: XOR<TransactionCreateWithoutPostPurchaseInput, TransactionUncheckedCreateWithoutPostPurchaseInput>
  }

  export type PostUpsertWithoutPurchasesInput = {
    update: XOR<PostUpdateWithoutPurchasesInput, PostUncheckedUpdateWithoutPurchasesInput>
    create: XOR<PostCreateWithoutPurchasesInput, PostUncheckedCreateWithoutPurchasesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutPurchasesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutPurchasesInput, PostUncheckedUpdateWithoutPurchasesInput>
  }

  export type PostUpdateWithoutPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutPostPurchasesInput = {
    update: XOR<UserUpdateWithoutPostPurchasesInput, UserUncheckedUpdateWithoutPostPurchasesInput>
    create: XOR<UserCreateWithoutPostPurchasesInput, UserUncheckedCreateWithoutPostPurchasesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPostPurchasesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPostPurchasesInput, UserUncheckedUpdateWithoutPostPurchasesInput>
  }

  export type UserUpdateWithoutPostPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPostPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TransactionUpsertWithoutPostPurchaseInput = {
    update: XOR<TransactionUpdateWithoutPostPurchaseInput, TransactionUncheckedUpdateWithoutPostPurchaseInput>
    create: XOR<TransactionCreateWithoutPostPurchaseInput, TransactionUncheckedCreateWithoutPostPurchaseInput>
    where?: TransactionWhereInput
  }

  export type TransactionUpdateToOneWithWhereWithoutPostPurchaseInput = {
    where?: TransactionWhereInput
    data: XOR<TransactionUpdateWithoutPostPurchaseInput, TransactionUncheckedUpdateWithoutPostPurchaseInput>
  }

  export type TransactionUpdateWithoutPostPurchaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionUpdateOneWithoutTransactionsNestedInput
  }

  export type TransactionUncheckedUpdateWithoutPostPurchaseInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutSettingsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSettingsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
  }

  export type UserUpsertWithoutSettingsInput = {
    update: XOR<UserUpdateWithoutSettingsInput, UserUncheckedUpdateWithoutSettingsInput>
    create: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSettingsInput, UserUncheckedUpdateWithoutSettingsInput>
  }

  export type UserUpdateWithoutSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutTierSettingsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTierSettingsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTierSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTierSettingsInput, UserUncheckedCreateWithoutTierSettingsInput>
  }

  export type UserUpsertWithoutTierSettingsInput = {
    update: XOR<UserUpdateWithoutTierSettingsInput, UserUncheckedUpdateWithoutTierSettingsInput>
    create: XOR<UserCreateWithoutTierSettingsInput, UserUncheckedCreateWithoutTierSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTierSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTierSettingsInput, UserUncheckedUpdateWithoutTierSettingsInput>
  }

  export type UserUpdateWithoutTierSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTierSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PostCreateWithoutAuctionDepositsInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutAuctionDepositsInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutAuctionDepositsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuctionDepositsInput, PostUncheckedCreateWithoutAuctionDepositsInput>
  }

  export type UserCreateWithoutAuctionDepositsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuctionDepositsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuctionDepositsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuctionDepositsInput, UserUncheckedCreateWithoutAuctionDepositsInput>
  }

  export type PostUpsertWithoutAuctionDepositsInput = {
    update: XOR<PostUpdateWithoutAuctionDepositsInput, PostUncheckedUpdateWithoutAuctionDepositsInput>
    create: XOR<PostCreateWithoutAuctionDepositsInput, PostUncheckedCreateWithoutAuctionDepositsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutAuctionDepositsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutAuctionDepositsInput, PostUncheckedUpdateWithoutAuctionDepositsInput>
  }

  export type PostUpdateWithoutAuctionDepositsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutAuctionDepositsInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutAuctionDepositsInput = {
    update: XOR<UserUpdateWithoutAuctionDepositsInput, UserUncheckedUpdateWithoutAuctionDepositsInput>
    create: XOR<UserCreateWithoutAuctionDepositsInput, UserUncheckedCreateWithoutAuctionDepositsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuctionDepositsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuctionDepositsInput, UserUncheckedUpdateWithoutAuctionDepositsInput>
  }

  export type UserUpdateWithoutAuctionDepositsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuctionDepositsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PostCreateWithoutAuctionBidsInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutAuctionBidsInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutAuctionBidsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuctionBidsInput, PostUncheckedCreateWithoutAuctionBidsInput>
  }

  export type UserCreateWithoutAuctionBidsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuctionBidsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuctionBidsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuctionBidsInput, UserUncheckedCreateWithoutAuctionBidsInput>
  }

  export type PostUpsertWithoutAuctionBidsInput = {
    update: XOR<PostUpdateWithoutAuctionBidsInput, PostUncheckedUpdateWithoutAuctionBidsInput>
    create: XOR<PostCreateWithoutAuctionBidsInput, PostUncheckedCreateWithoutAuctionBidsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutAuctionBidsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutAuctionBidsInput, PostUncheckedUpdateWithoutAuctionBidsInput>
  }

  export type PostUpdateWithoutAuctionBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutAuctionBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutAuctionBidsInput = {
    update: XOR<UserUpdateWithoutAuctionBidsInput, UserUncheckedUpdateWithoutAuctionBidsInput>
    create: XOR<UserCreateWithoutAuctionBidsInput, UserUncheckedCreateWithoutAuctionBidsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuctionBidsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuctionBidsInput, UserUncheckedUpdateWithoutAuctionBidsInput>
  }

  export type UserUpdateWithoutAuctionBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuctionBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PostCreateWithoutAuctionPaymentInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    flashSales?: FlashSaleCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutAuctionPaymentInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutAuctionPaymentInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuctionPaymentInput, PostUncheckedCreateWithoutAuctionPaymentInput>
  }

  export type UserCreateWithoutAuctionPaymentsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAuctionPaymentsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAuctionPaymentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuctionPaymentsInput, UserUncheckedCreateWithoutAuctionPaymentsInput>
  }

  export type PostUpsertWithoutAuctionPaymentInput = {
    update: XOR<PostUpdateWithoutAuctionPaymentInput, PostUncheckedUpdateWithoutAuctionPaymentInput>
    create: XOR<PostCreateWithoutAuctionPaymentInput, PostUncheckedCreateWithoutAuctionPaymentInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutAuctionPaymentInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutAuctionPaymentInput, PostUncheckedUpdateWithoutAuctionPaymentInput>
  }

  export type PostUpdateWithoutAuctionPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutAuctionPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutAuctionPaymentsInput = {
    update: XOR<UserUpdateWithoutAuctionPaymentsInput, UserUncheckedUpdateWithoutAuctionPaymentsInput>
    create: XOR<UserCreateWithoutAuctionPaymentsInput, UserUncheckedCreateWithoutAuctionPaymentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuctionPaymentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuctionPaymentsInput, UserUncheckedUpdateWithoutAuctionPaymentsInput>
  }

  export type UserUpdateWithoutAuctionPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAuctionPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutFlashSalesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFlashSalesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFlashSalesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFlashSalesInput, UserUncheckedCreateWithoutFlashSalesInput>
  }

  export type PostCreateWithoutFlashSalesInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    soldTo?: UserCreateNestedOneWithoutPurchasedSellablePostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    creator: UserCreateNestedOneWithoutPostsInput
    purchases?: PostPurchaseCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentCreateNestedOneWithoutPostInput
  }

  export type PostUncheckedCreateWithoutFlashSalesInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    purchases?: PostPurchaseUncheckedCreateNestedManyWithoutPostInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutPostInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutPostInput
    auctionPayment?: AuctionPaymentUncheckedCreateNestedOneWithoutPostInput
  }

  export type PostCreateOrConnectWithoutFlashSalesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutFlashSalesInput, PostUncheckedCreateWithoutFlashSalesInput>
  }

  export type FlashSaleRedemptionCreateWithoutFlashSaleInput = {
    id?: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
    user: UserCreateNestedOneWithoutFlashSaleRedemptionsInput
  }

  export type FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput = {
    id?: string
    userId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
  }

  export type FlashSaleRedemptionCreateOrConnectWithoutFlashSaleInput = {
    where: FlashSaleRedemptionWhereUniqueInput
    create: XOR<FlashSaleRedemptionCreateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput>
  }

  export type FlashSaleRedemptionCreateManyFlashSaleInputEnvelope = {
    data: FlashSaleRedemptionCreateManyFlashSaleInput | FlashSaleRedemptionCreateManyFlashSaleInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFlashSalesInput = {
    update: XOR<UserUpdateWithoutFlashSalesInput, UserUncheckedUpdateWithoutFlashSalesInput>
    create: XOR<UserCreateWithoutFlashSalesInput, UserUncheckedCreateWithoutFlashSalesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFlashSalesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFlashSalesInput, UserUncheckedUpdateWithoutFlashSalesInput>
  }

  export type UserUpdateWithoutFlashSalesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFlashSalesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PostUpsertWithoutFlashSalesInput = {
    update: XOR<PostUpdateWithoutFlashSalesInput, PostUncheckedUpdateWithoutFlashSalesInput>
    create: XOR<PostCreateWithoutFlashSalesInput, PostUncheckedCreateWithoutFlashSalesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutFlashSalesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutFlashSalesInput, PostUncheckedUpdateWithoutFlashSalesInput>
  }

  export type PostUpdateWithoutFlashSalesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutFlashSalesInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
  }

  export type FlashSaleRedemptionUpsertWithWhereUniqueWithoutFlashSaleInput = {
    where: FlashSaleRedemptionWhereUniqueInput
    update: XOR<FlashSaleRedemptionUpdateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedUpdateWithoutFlashSaleInput>
    create: XOR<FlashSaleRedemptionCreateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedCreateWithoutFlashSaleInput>
  }

  export type FlashSaleRedemptionUpdateWithWhereUniqueWithoutFlashSaleInput = {
    where: FlashSaleRedemptionWhereUniqueInput
    data: XOR<FlashSaleRedemptionUpdateWithoutFlashSaleInput, FlashSaleRedemptionUncheckedUpdateWithoutFlashSaleInput>
  }

  export type FlashSaleRedemptionUpdateManyWithWhereWithoutFlashSaleInput = {
    where: FlashSaleRedemptionScalarWhereInput
    data: XOR<FlashSaleRedemptionUpdateManyMutationInput, FlashSaleRedemptionUncheckedUpdateManyWithoutFlashSaleInput>
  }

  export type FlashSaleCreateWithoutRedemptionsInput = {
    id?: string
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    creator?: UserCreateNestedOneWithoutFlashSalesInput
    post?: PostCreateNestedOneWithoutFlashSalesInput
  }

  export type FlashSaleUncheckedCreateWithoutRedemptionsInput = {
    id?: string
    creatorId?: string | null
    postId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FlashSaleCreateOrConnectWithoutRedemptionsInput = {
    where: FlashSaleWhereUniqueInput
    create: XOR<FlashSaleCreateWithoutRedemptionsInput, FlashSaleUncheckedCreateWithoutRedemptionsInput>
  }

  export type UserCreateWithoutFlashSaleRedemptionsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFlashSaleRedemptionsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFlashSaleRedemptionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFlashSaleRedemptionsInput, UserUncheckedCreateWithoutFlashSaleRedemptionsInput>
  }

  export type FlashSaleUpsertWithoutRedemptionsInput = {
    update: XOR<FlashSaleUpdateWithoutRedemptionsInput, FlashSaleUncheckedUpdateWithoutRedemptionsInput>
    create: XOR<FlashSaleCreateWithoutRedemptionsInput, FlashSaleUncheckedCreateWithoutRedemptionsInput>
    where?: FlashSaleWhereInput
  }

  export type FlashSaleUpdateToOneWithWhereWithoutRedemptionsInput = {
    where?: FlashSaleWhereInput
    data: XOR<FlashSaleUpdateWithoutRedemptionsInput, FlashSaleUncheckedUpdateWithoutRedemptionsInput>
  }

  export type FlashSaleUpdateWithoutRedemptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneWithoutFlashSalesNestedInput
    post?: PostUpdateOneWithoutFlashSalesNestedInput
  }

  export type FlashSaleUncheckedUpdateWithoutRedemptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutFlashSaleRedemptionsInput = {
    update: XOR<UserUpdateWithoutFlashSaleRedemptionsInput, UserUncheckedUpdateWithoutFlashSaleRedemptionsInput>
    create: XOR<UserCreateWithoutFlashSaleRedemptionsInput, UserUncheckedCreateWithoutFlashSaleRedemptionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFlashSaleRedemptionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFlashSaleRedemptionsInput, UserUncheckedUpdateWithoutFlashSaleRedemptionsInput>
  }

  export type UserUpdateWithoutFlashSaleRedemptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFlashSaleRedemptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutConversationsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutConversationsInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutConversationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutConversationsInput, UserUncheckedCreateWithoutConversationsInput>
  }

  export type MessageCreateWithoutConversationInput = {
    id?: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    sender: UserCreateNestedOneWithoutSentMessagesInput
    purchases?: MessagePurchaseCreateNestedManyWithoutMessageInput
  }

  export type MessageUncheckedCreateWithoutConversationInput = {
    id?: string
    senderId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    purchases?: MessagePurchaseUncheckedCreateNestedManyWithoutMessageInput
  }

  export type MessageCreateOrConnectWithoutConversationInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput>
  }

  export type MessageCreateManyConversationInputEnvelope = {
    data: MessageCreateManyConversationInput | MessageCreateManyConversationInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutConversationsInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutConversationsInput, UserUncheckedUpdateWithoutConversationsInput>
    create: XOR<UserCreateWithoutConversationsInput, UserUncheckedCreateWithoutConversationsInput>
  }

  export type UserUpdateWithWhereUniqueWithoutConversationsInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutConversationsInput, UserUncheckedUpdateWithoutConversationsInput>
  }

  export type UserUpdateManyWithWhereWithoutConversationsInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutConversationsInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutConversationInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutConversationInput, MessageUncheckedUpdateWithoutConversationInput>
    create: XOR<MessageCreateWithoutConversationInput, MessageUncheckedCreateWithoutConversationInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutConversationInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutConversationInput, MessageUncheckedUpdateWithoutConversationInput>
  }

  export type MessageUpdateManyWithWhereWithoutConversationInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutConversationInput>
  }

  export type ConversationCreateWithoutMessagesInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    participants?: UserCreateNestedManyWithoutConversationsInput
  }

  export type ConversationUncheckedCreateWithoutMessagesInput = {
    id?: string
    lastMessageAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    participants?: UserUncheckedCreateNestedManyWithoutConversationsInput
  }

  export type ConversationCreateOrConnectWithoutMessagesInput = {
    where: ConversationWhereUniqueInput
    create: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
  }

  export type UserCreateWithoutSentMessagesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    messagePurchases?: MessagePurchaseCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSentMessagesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    messagePurchases?: MessagePurchaseUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSentMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
  }

  export type MessagePurchaseCreateWithoutMessageInput = {
    id?: string
    amount: number
    txSignature: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutMessagePurchasesInput
  }

  export type MessagePurchaseUncheckedCreateWithoutMessageInput = {
    id?: string
    userId: string
    amount: number
    txSignature: string
    createdAt?: Date | string
  }

  export type MessagePurchaseCreateOrConnectWithoutMessageInput = {
    where: MessagePurchaseWhereUniqueInput
    create: XOR<MessagePurchaseCreateWithoutMessageInput, MessagePurchaseUncheckedCreateWithoutMessageInput>
  }

  export type MessagePurchaseCreateManyMessageInputEnvelope = {
    data: MessagePurchaseCreateManyMessageInput | MessagePurchaseCreateManyMessageInput[]
    skipDuplicates?: boolean
  }

  export type ConversationUpsertWithoutMessagesInput = {
    update: XOR<ConversationUpdateWithoutMessagesInput, ConversationUncheckedUpdateWithoutMessagesInput>
    create: XOR<ConversationCreateWithoutMessagesInput, ConversationUncheckedCreateWithoutMessagesInput>
    where?: ConversationWhereInput
  }

  export type ConversationUpdateToOneWithWhereWithoutMessagesInput = {
    where?: ConversationWhereInput
    data: XOR<ConversationUpdateWithoutMessagesInput, ConversationUncheckedUpdateWithoutMessagesInput>
  }

  export type ConversationUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    participants?: UserUpdateManyWithoutConversationsNestedInput
  }

  export type ConversationUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    participants?: UserUncheckedUpdateManyWithoutConversationsNestedInput
  }

  export type UserUpsertWithoutSentMessagesInput = {
    update: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type MessagePurchaseUpsertWithWhereUniqueWithoutMessageInput = {
    where: MessagePurchaseWhereUniqueInput
    update: XOR<MessagePurchaseUpdateWithoutMessageInput, MessagePurchaseUncheckedUpdateWithoutMessageInput>
    create: XOR<MessagePurchaseCreateWithoutMessageInput, MessagePurchaseUncheckedCreateWithoutMessageInput>
  }

  export type MessagePurchaseUpdateWithWhereUniqueWithoutMessageInput = {
    where: MessagePurchaseWhereUniqueInput
    data: XOR<MessagePurchaseUpdateWithoutMessageInput, MessagePurchaseUncheckedUpdateWithoutMessageInput>
  }

  export type MessagePurchaseUpdateManyWithWhereWithoutMessageInput = {
    where: MessagePurchaseScalarWhereInput
    data: XOR<MessagePurchaseUpdateManyMutationInput, MessagePurchaseUncheckedUpdateManyWithoutMessageInput>
  }

  export type MessageCreateWithoutPurchasesInput = {
    id?: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    conversation: ConversationCreateNestedOneWithoutMessagesInput
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutPurchasesInput = {
    id?: string
    conversationId: string
    senderId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutPurchasesInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutPurchasesInput, MessageUncheckedCreateWithoutPurchasesInput>
  }

  export type UserCreateWithoutMessagePurchasesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    comments?: CommentCreateNestedManyWithoutUserInput
    follows?: FollowCreateNestedManyWithoutFollowerInput
    followers?: FollowCreateNestedManyWithoutFollowingInput
    likes?: LikeCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseCreateNestedManyWithoutUserInput
    referrer?: UserCreateNestedOneWithoutReferralsInput
    referrals?: UserCreateNestedManyWithoutReferrerInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsCreateNestedOneWithoutCreatorInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionCreateNestedManyWithoutUserInput
    conversations?: ConversationCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutMessagePurchasesInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
    referrerId?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutUserInput
    follows?: FollowUncheckedCreateNestedManyWithoutFollowerInput
    followers?: FollowUncheckedCreateNestedManyWithoutFollowingInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutCreatorInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    subscribers?: SubscriptionUncheckedCreateNestedManyWithoutCreatorInput
    postPurchases?: PostPurchaseUncheckedCreateNestedManyWithoutUserInput
    referrals?: UserUncheckedCreateNestedManyWithoutReferrerInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
    tierSettings?: CreatorTierSettingsUncheckedCreateNestedOneWithoutCreatorInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    purchasedSellablePosts?: PostUncheckedCreateNestedManyWithoutSoldToInput
    auctionDeposits?: AuctionDepositUncheckedCreateNestedManyWithoutUserInput
    auctionBids?: AuctionBidUncheckedCreateNestedManyWithoutUserInput
    auctionPayments?: AuctionPaymentUncheckedCreateNestedManyWithoutUserInput
    flashSales?: FlashSaleUncheckedCreateNestedManyWithoutCreatorInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedCreateNestedManyWithoutUserInput
    conversations?: ConversationUncheckedCreateNestedManyWithoutParticipantsInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutMessagePurchasesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMessagePurchasesInput, UserUncheckedCreateWithoutMessagePurchasesInput>
  }

  export type MessageUpsertWithoutPurchasesInput = {
    update: XOR<MessageUpdateWithoutPurchasesInput, MessageUncheckedUpdateWithoutPurchasesInput>
    create: XOR<MessageCreateWithoutPurchasesInput, MessageUncheckedCreateWithoutPurchasesInput>
    where?: MessageWhereInput
  }

  export type MessageUpdateToOneWithWhereWithoutPurchasesInput = {
    where?: MessageWhereInput
    data: XOR<MessageUpdateWithoutPurchasesInput, MessageUncheckedUpdateWithoutPurchasesInput>
  }

  export type MessageUpdateWithoutPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutMessagePurchasesInput = {
    update: XOR<UserUpdateWithoutMessagePurchasesInput, UserUncheckedUpdateWithoutMessagePurchasesInput>
    create: XOR<UserCreateWithoutMessagePurchasesInput, UserUncheckedCreateWithoutMessagePurchasesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMessagePurchasesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMessagePurchasesInput, UserUncheckedUpdateWithoutMessagePurchasesInput>
  }

  export type UserUpdateWithoutMessagePurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutMessagePurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type CommentCreateManyUserInput = {
    id?: string
    postId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
  }

  export type FollowCreateManyFollowerInput = {
    id?: string
    followingId: string
    createdAt?: Date | string
  }

  export type FollowCreateManyFollowingInput = {
    id?: string
    followerId: string
    createdAt?: Date | string
  }

  export type LikeCreateManyUserInput = {
    id?: string
    postId?: string | null
    commentId?: string | null
    createdAt?: Date | string
  }

  export type PostCreateManyCreatorInput = {
    id?: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldToId?: string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
  }

  export type SubscriptionCreateManyUserInput = {
    id?: string
    creatorId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type SubscriptionCreateManyCreatorInput = {
    id?: string
    userId: string
    plan: string
    price: number
    currency?: string
    subscribedAt?: Date | string
    validUntil: Date | string
    isActive?: boolean
    txSignature?: string | null
    paymentStatus?: $Enums.PaymentStatus
    paymentAmount?: number | null
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type PostPurchaseCreateManyUserInput = {
    id?: string
    postId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type UserCreateManyReferrerInput = {
    id?: string
    email?: string | null
    emailVerified?: Date | string | null
    name?: string | null
    image?: string | null
    nickname?: string | null
    fullName?: string | null
    bio?: string | null
    avatar?: string | null
    backgroundImage?: string | null
    website?: string | null
    twitter?: string | null
    telegram?: string | null
    location?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isVerified?: boolean
    isCreator?: boolean
    followersCount?: number
    followingCount?: number
    postsCount?: number
    wallet?: string | null
    solanaWallet?: string | null
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refresh_token?: string | null
    access_token?: string | null
    expires_at?: number | null
    token_type?: string | null
    scope?: string | null
    id_token?: string | null
    session_state?: string | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    type: $Enums.NotificationType
    title: string
    message: string
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type PostCreateManySoldToInput = {
    id?: string
    creatorId: string
    title: string
    content: string
    type: string
    category?: string | null
    thumbnail?: string | null
    mediaUrl?: string | null
    isLocked?: boolean
    isPremium?: boolean
    price?: number | null
    currency?: string
    minSubscriptionTier?: string | null
    imageAspectRatio?: string | null
    likesCount?: number
    commentsCount?: number
    viewsCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    isSellable?: boolean
    sellType?: $Enums.SellType | null
    quantity?: number | null
    auctionStartPrice?: number | null
    auctionStepPrice?: number | null
    auctionDepositAmount?: number | null
    auctionStartAt?: Date | string | null
    auctionEndAt?: Date | string | null
    auctionStatus?: $Enums.AuctionStatus
    soldAt?: Date | string | null
    soldPrice?: number | null
    sellerConfirmedAt?: Date | string | null
  }

  export type AuctionDepositCreateManyUserInput = {
    id?: string
    postId: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
  }

  export type AuctionBidCreateManyUserInput = {
    id?: string
    postId: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
  }

  export type AuctionPaymentCreateManyUserInput = {
    id?: string
    postId: string
    amount: number
    txSignature?: string | null
    status?: $Enums.AuctionPaymentStatus
    dueAt: Date | string
    paidAt?: Date | string | null
    sellerConfirmedAt?: Date | string | null
    createdAt?: Date | string
  }

  export type FlashSaleCreateManyCreatorInput = {
    id?: string
    postId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FlashSaleRedemptionCreateManyUserInput = {
    id?: string
    flashSaleId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    conversationId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type MessagePurchaseCreateManyUserInput = {
    id?: string
    messageId: string
    amount: number
    txSignature: string
    createdAt?: Date | string
  }

  export type CommentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParentNestedInput
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    likes?: LikeUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParentNestedInput
    likes?: LikeUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FollowUpdateWithoutFollowerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    following?: UserUpdateOneRequiredWithoutFollowersNestedInput
  }

  export type FollowUncheckedUpdateWithoutFollowerInput = {
    id?: StringFieldUpdateOperationsInput | string
    followingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUncheckedUpdateManyWithoutFollowerInput = {
    id?: StringFieldUpdateOperationsInput | string
    followingId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUpdateWithoutFollowingInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    follower?: UserUpdateOneRequiredWithoutFollowsNestedInput
  }

  export type FollowUncheckedUpdateWithoutFollowingInput = {
    id?: StringFieldUpdateOperationsInput | string
    followerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FollowUncheckedUpdateManyWithoutFollowingInput = {
    id?: StringFieldUpdateOperationsInput | string
    followerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment?: CommentUpdateOneWithoutLikesNestedInput
    post?: PostUpdateOneWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldTo?: UserUpdateOneWithoutPurchasedSellablePostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldToId?: NullableStringFieldUpdateOperationsInput | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubscriptionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    creator?: UserUpdateOneRequiredWithoutSubscribersNestedInput
    transactions?: TransactionUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    transactions?: TransactionUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type SubscriptionUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneRequiredWithoutSubscriptionsNestedInput
    transactions?: TransactionUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    transactions?: TransactionUncheckedUpdateManyWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    subscribedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    validUntil?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type PostPurchaseUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    post?: PostUpdateOneRequiredWithoutPurchasesNestedInput
    transaction?: TransactionUpdateOneWithoutPostPurchaseNestedInput
  }

  export type PostPurchaseUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    transaction?: TransactionUncheckedUpdateOneWithoutPostPurchaseNestedInput
  }

  export type PostPurchaseUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type UserUpdateWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    conversations?: ConversationUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    conversations?: ConversationUncheckedUpdateManyWithoutParticipantsNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutReferrerInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    expires_at?: NullableIntFieldUpdateOperationsInput | number | null
    token_type?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    id_token?: NullableStringFieldUpdateOperationsInput | string | null
    session_state?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostUpdateWithoutSoldToInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    creator?: UserUpdateOneRequiredWithoutPostsNestedInput
    purchases?: PostPurchaseUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutSoldToInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    purchases?: PostPurchaseUncheckedUpdateManyWithoutPostNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutPostNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutPostNestedInput
    auctionPayment?: AuctionPaymentUncheckedUpdateOneWithoutPostNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateManyWithoutSoldToInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isLocked?: BoolFieldUpdateOperationsInput | boolean
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    minSubscriptionTier?: NullableStringFieldUpdateOperationsInput | string | null
    imageAspectRatio?: NullableStringFieldUpdateOperationsInput | string | null
    likesCount?: IntFieldUpdateOperationsInput | number
    commentsCount?: IntFieldUpdateOperationsInput | number
    viewsCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isSellable?: BoolFieldUpdateOperationsInput | boolean
    sellType?: NullableEnumSellTypeFieldUpdateOperationsInput | $Enums.SellType | null
    quantity?: NullableIntFieldUpdateOperationsInput | number | null
    auctionStartPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStepPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionDepositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    auctionStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    auctionStatus?: EnumAuctionStatusFieldUpdateOperationsInput | $Enums.AuctionStatus
    soldAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    soldPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionDepositUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: PostUpdateOneRequiredWithoutAuctionDepositsNestedInput
  }

  export type AuctionDepositUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionDepositUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionBidUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutAuctionBidsNestedInput
  }

  export type AuctionBidUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionBidUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionPaymentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutAuctionPaymentNestedInput
  }

  export type AuctionPaymentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionPaymentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuctionPaymentStatusFieldUpdateOperationsInput | $Enums.AuctionPaymentStatus
    dueAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sellerConfirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutFlashSalesNestedInput
    redemptions?: FlashSaleRedemptionUpdateManyWithoutFlashSaleNestedInput
  }

  export type FlashSaleUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    redemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutFlashSaleNestedInput
  }

  export type FlashSaleUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    flashSale?: FlashSaleUpdateOneRequiredWithoutRedemptionsNestedInput
  }

  export type FlashSaleRedemptionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    flashSaleId?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    flashSaleId?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversationUpdateWithoutParticipantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateWithoutParticipantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutConversationNestedInput
  }

  export type ConversationUncheckedUpdateManyWithoutParticipantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    lastMessageAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    conversation?: ConversationUpdateOneRequiredWithoutMessagesNestedInput
    purchases?: MessagePurchaseUpdateManyWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchases?: MessagePurchaseUncheckedUpdateManyWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    conversationId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    message?: MessageUpdateOneRequiredWithoutPurchasesNestedInput
  }

  export type MessagePurchaseUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    messageId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    messageId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentCreateManyPostInput = {
    id?: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    parentId?: string | null
  }

  export type LikeCreateManyPostInput = {
    id?: string
    userId: string
    commentId?: string | null
    createdAt?: Date | string
  }

  export type PostTagCreateManyPostInput = {
    tagId: string
  }

  export type PostPurchaseCreateManyPostInput = {
    id?: string
    userId: string
    price: number
    currency?: string
    txSignature?: string | null
    purchasedAt?: Date | string
    paymentStatus?: $Enums.PaymentStatus
    platformFee?: number | null
    referrerFee?: number | null
    creatorAmount?: number | null
  }

  export type AuctionDepositCreateManyPostInput = {
    id?: string
    userId: string
    amount: number
    txSignature: string
    status?: $Enums.DepositStatus
    createdAt?: Date | string
    refundedAt?: Date | string | null
    refundTxSignature?: string | null
    forfeitedAt?: Date | string | null
  }

  export type AuctionBidCreateManyPostInput = {
    id?: string
    userId: string
    amount: number
    isWinning?: boolean
    createdAt?: Date | string
  }

  export type FlashSaleCreateManyPostInput = {
    id?: string
    creatorId?: string | null
    subscriptionPlan?: string | null
    discount: number
    maxRedemptions?: number | null
    usedCount?: number
    startAt?: Date | string
    endAt: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CommentUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParentNestedInput
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
    likes?: LikeUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParentNestedInput
    likes?: LikeUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LikeUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment?: CommentUpdateOneWithoutLikesNestedInput
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    commentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagUpdateWithoutPostInput = {
    tag?: TagUpdateOneRequiredWithoutPostsNestedInput
  }

  export type PostTagUncheckedUpdateWithoutPostInput = {
    tagId?: StringFieldUpdateOperationsInput | string
  }

  export type PostTagUncheckedUpdateManyWithoutPostInput = {
    tagId?: StringFieldUpdateOperationsInput | string
  }

  export type PostPurchaseUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneRequiredWithoutPostPurchasesNestedInput
    transaction?: TransactionUpdateOneWithoutPostPurchaseNestedInput
  }

  export type PostPurchaseUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    transaction?: TransactionUncheckedUpdateOneWithoutPostPurchaseNestedInput
  }

  export type PostPurchaseUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    txSignature?: NullableStringFieldUpdateOperationsInput | string | null
    purchasedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    creatorAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type AuctionDepositUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutAuctionDepositsNestedInput
  }

  export type AuctionDepositUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionDepositUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    status?: EnumDepositStatusFieldUpdateOperationsInput | $Enums.DepositStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refundedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refundTxSignature?: NullableStringFieldUpdateOperationsInput | string | null
    forfeitedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AuctionBidUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAuctionBidsNestedInput
  }

  export type AuctionBidUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuctionBidUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    isWinning?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneWithoutFlashSalesNestedInput
    redemptions?: FlashSaleRedemptionUpdateManyWithoutFlashSaleNestedInput
  }

  export type FlashSaleUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    redemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutFlashSaleNestedInput
  }

  export type FlashSaleUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    creatorId?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: FloatFieldUpdateOperationsInput | number
    maxRedemptions?: NullableIntFieldUpdateOperationsInput | number | null
    usedCount?: IntFieldUpdateOperationsInput | number
    startAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagCreateManyTagInput = {
    postId: string
  }

  export type PostTagUpdateWithoutTagInput = {
    post?: PostUpdateOneRequiredWithoutTagsNestedInput
  }

  export type PostTagUncheckedUpdateWithoutTagInput = {
    postId?: StringFieldUpdateOperationsInput | string
  }

  export type PostTagUncheckedUpdateManyWithoutTagInput = {
    postId?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCreateManyParentInput = {
    id?: string
    postId: string
    userId: string
    content: string
    isAnonymous?: boolean
    likesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LikeCreateManyCommentInput = {
    id?: string
    userId: string
    postId?: string | null
    createdAt?: Date | string
  }

  export type CommentUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: CommentUpdateManyWithoutParentNestedInput
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    user?: UserUpdateOneRequiredWithoutCommentsNestedInput
    likes?: LikeUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    replies?: CommentUncheckedUpdateManyWithoutParentNestedInput
    likes?: LikeUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    likesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutLikesNestedInput
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutCommentInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionCreateManySubscriptionInput = {
    id?: string
    postPurchaseId?: string | null
    txSignature: string
    fromWallet: string
    toWallet: string
    amount: number
    currency?: string
    type: $Enums.TransactionType
    status?: $Enums.TransactionStatus
    senderId?: string | null
    receiverId?: string | null
    platformFee?: number | null
    referrerFee?: number | null
    referrerWallet?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: string | null
    confirmedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransactionUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    postPurchase?: PostPurchaseUpdateOneWithoutTransactionNestedInput
  }

  export type TransactionUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    postPurchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransactionUncheckedUpdateManyWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    postPurchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    txSignature?: StringFieldUpdateOperationsInput | string
    fromWallet?: StringFieldUpdateOperationsInput | string
    toWallet?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    type?: EnumTransactionTypeFieldUpdateOperationsInput | $Enums.TransactionType
    status?: EnumTransactionStatusFieldUpdateOperationsInput | $Enums.TransactionStatus
    senderId?: NullableStringFieldUpdateOperationsInput | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    platformFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerFee?: NullableFloatFieldUpdateOperationsInput | number | null
    referrerWallet?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    confirmedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionCreateManyFlashSaleInput = {
    id?: string
    userId: string
    originalPrice: number
    discountAmount: number
    finalPrice: number
    redeemedAt?: Date | string
  }

  export type FlashSaleRedemptionUpdateWithoutFlashSaleInput = {
    id?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFlashSaleRedemptionsNestedInput
  }

  export type FlashSaleRedemptionUncheckedUpdateWithoutFlashSaleInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FlashSaleRedemptionUncheckedUpdateManyWithoutFlashSaleInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    originalPrice?: FloatFieldUpdateOperationsInput | number
    discountAmount?: FloatFieldUpdateOperationsInput | number
    finalPrice?: FloatFieldUpdateOperationsInput | number
    redeemedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateManyConversationInput = {
    id?: string
    senderId: string
    content?: string | null
    mediaUrl?: string | null
    mediaType?: string | null
    isPaid?: boolean
    price?: number | null
    isRead?: boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type UserUpdateWithoutConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutUserNestedInput
    follows?: FollowUpdateManyWithoutFollowerNestedInput
    followers?: FollowUpdateManyWithoutFollowingNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUpdateManyWithoutUserNestedInput
    referrer?: UserUpdateOneWithoutReferralsNestedInput
    referrals?: UserUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutUserNestedInput
    follows?: FollowUncheckedUpdateManyWithoutFollowerNestedInput
    followers?: FollowUncheckedUpdateManyWithoutFollowingNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutCreatorNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    subscribers?: SubscriptionUncheckedUpdateManyWithoutCreatorNestedInput
    postPurchases?: PostPurchaseUncheckedUpdateManyWithoutUserNestedInput
    referrals?: UserUncheckedUpdateManyWithoutReferrerNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
    tierSettings?: CreatorTierSettingsUncheckedUpdateOneWithoutCreatorNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    purchasedSellablePosts?: PostUncheckedUpdateManyWithoutSoldToNestedInput
    auctionDeposits?: AuctionDepositUncheckedUpdateManyWithoutUserNestedInput
    auctionBids?: AuctionBidUncheckedUpdateManyWithoutUserNestedInput
    auctionPayments?: AuctionPaymentUncheckedUpdateManyWithoutUserNestedInput
    flashSales?: FlashSaleUncheckedUpdateManyWithoutCreatorNestedInput
    flashSaleRedemptions?: FlashSaleRedemptionUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    messagePurchases?: MessagePurchaseUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutConversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    fullName?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    backgroundImage?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    twitter?: NullableStringFieldUpdateOperationsInput | string | null
    telegram?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    isCreator?: BoolFieldUpdateOperationsInput | boolean
    followersCount?: IntFieldUpdateOperationsInput | number
    followingCount?: IntFieldUpdateOperationsInput | number
    postsCount?: IntFieldUpdateOperationsInput | number
    wallet?: NullableStringFieldUpdateOperationsInput | string | null
    solanaWallet?: NullableStringFieldUpdateOperationsInput | string | null
    referrerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessageUpdateWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    purchases?: MessagePurchaseUpdateManyWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchases?: MessagePurchaseUncheckedUpdateManyWithoutMessageNestedInput
  }

  export type MessageUncheckedUpdateManyWithoutConversationInput = {
    id?: StringFieldUpdateOperationsInput | string
    senderId?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    mediaUrl?: NullableStringFieldUpdateOperationsInput | string | null
    mediaType?: NullableStringFieldUpdateOperationsInput | string | null
    isPaid?: BoolFieldUpdateOperationsInput | boolean
    price?: NullableFloatFieldUpdateOperationsInput | number | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseCreateManyMessageInput = {
    id?: string
    userId: string
    amount: number
    txSignature: string
    createdAt?: Date | string
  }

  export type MessagePurchaseUpdateWithoutMessageInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutMessagePurchasesNestedInput
  }

  export type MessagePurchaseUncheckedUpdateWithoutMessageInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessagePurchaseUncheckedUpdateManyWithoutMessageInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    txSignature?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostCountOutputTypeDefaultArgs instead
     */
    export type PostCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TagCountOutputTypeDefaultArgs instead
     */
    export type TagCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TagCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CommentCountOutputTypeDefaultArgs instead
     */
    export type CommentCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CommentCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionCountOutputTypeDefaultArgs instead
     */
    export type SubscriptionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FlashSaleCountOutputTypeDefaultArgs instead
     */
    export type FlashSaleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FlashSaleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConversationCountOutputTypeDefaultArgs instead
     */
    export type ConversationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConversationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MessageCountOutputTypeDefaultArgs instead
     */
    export type MessageCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MessageCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostDefaultArgs instead
     */
    export type PostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TagDefaultArgs instead
     */
    export type TagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TagDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostTagDefaultArgs instead
     */
    export type PostTagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostTagDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CommentDefaultArgs instead
     */
    export type CommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CommentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LikeDefaultArgs instead
     */
    export type LikeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LikeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionDefaultArgs instead
     */
    export type SubscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FollowDefaultArgs instead
     */
    export type FollowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FollowDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TransactionDefaultArgs instead
     */
    export type TransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TransactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AccountDefaultArgs instead
     */
    export type AccountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AccountDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SessionDefaultArgs instead
     */
    export type SessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SessionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostPurchaseDefaultArgs instead
     */
    export type PostPurchaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostPurchaseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserSettingsDefaultArgs instead
     */
    export type UserSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CreatorTierSettingsDefaultArgs instead
     */
    export type CreatorTierSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CreatorTierSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificationDefaultArgs instead
     */
    export type NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuctionDepositDefaultArgs instead
     */
    export type AuctionDepositArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuctionDepositDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuctionBidDefaultArgs instead
     */
    export type AuctionBidArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuctionBidDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuctionPaymentDefaultArgs instead
     */
    export type AuctionPaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuctionPaymentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FlashSaleDefaultArgs instead
     */
    export type FlashSaleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FlashSaleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FlashSaleRedemptionDefaultArgs instead
     */
    export type FlashSaleRedemptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FlashSaleRedemptionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConversationDefaultArgs instead
     */
    export type ConversationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConversationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MessageDefaultArgs instead
     */
    export type MessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MessageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MessagePurchaseDefaultArgs instead
     */
    export type MessagePurchaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MessagePurchaseDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}